// 
// 
//   OPR TABLE:
//    THIS TABLE IS INDEXED BY A POSITIVE OPR OPERAND.
//    IF IT IS GREATER OR EQUAL THAN MAXOPR, THE OPR
//    IS PRIVILEGED.
//    Z=AR, Q=BR, M=XR IF NOT PRIVILEGED
// 

// 2400:  BASEOPR:   BR←Z, Z←P←P+1, SETBA, GOTO NX2
	RRN=1,BR=14,SSP=2,MS=61,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1,MC=1,B=35
// 2401:  BR←Z
	BR=14,SSP=2,LSPX=1
// 2402:  CBA:       RES←AR←Q, SETBA, GOTO NX1
	BL=12,SSP=1,MS=61,TXW=1,LRN=5,LSPX=1,MC=1,B=34
// 2403:  CBX:       XR←Q, Z←P←P+1, SETBA, GOTO NX2
	RRN=1,BL=12,SSP=6,MS=61,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1,MC=20,B=35
// 2404:  XR←Q
	BL=12,SSP=6,LSPX=1
// 2405:  BR←M, Z←P←P+1, SETBA, GOTO NX2
	RRN=1,BL=14,SSP=2,MS=61,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1,MC=20,B=35
// 2406:  XR←Z, Z←P←P+1, SETBA, GOTO NX2
	RRN=1,BR=14,SSP=6,MS=61,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1,MC=1,B=35
// 2407:  XR←Z
	BR=14,SSP=6,LSPX=1
// 2410:  CXA:       RES←AR←M, SETBA, GOTO NX1
	BL=14,SSP=1,MS=61,TXW=1,LRN=5,LSPX=1,MC=1,B=34
// 2411:  RES←AR←NOT Z+1, SETBA, GOTO NX1
	BR=3,SSP=1,MS=61,LOC=1,TXW=1,TAX=1,LRN=5,LSPX=1,MC=20,VCY=1,B=34
// 2412:  XR←NOT M+1, Z←P←P+1, SETBA, GOTO NX2
	RRN=1,BL=3,SSP=6,MS=61,LOC=1,IHR=1,THY=1,TYW=1,TAX=1,LZY=1,LRN=1,LSPX=1,MC=1,VCY=1,B=35
// 2413:  RES←AR←0, SETBA, GOTO NX1
	SSP=1,MS=61,TXW=1,LRN=5,LSPX=1,MC=20,B=34
// 2414:  AR←0, GOTO ZAB1
	SSP=1,LSPX=1,MC=1,B=517
// 2415:  BR←0, Z←P←P+1, SETBA, GOTO NX2
	RRN=1,SSP=2,MS=61,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1,MC=20,B=35
// 2416:  Q←GR, GOTO CBA
	SSP=10,TSPY=1,LQY=1,MC=1,B=402
// 2417:  Q←GR, GOTO XGA1
	SSP=10,TSPY=1,LQY=1,MC=20,B=515
// 2420:  Q←LR, GOTO CBA
	SSP=7,TSPY=1,LQY=1,MC=1,B=402
// 2421:  Q←LR, GOTO XLA1
	SSP=7,TSPY=1,LQY=1,MC=20,B=516
// 2422:  GOTO CSA1
	MC=1,B=612
// 2423:  GOTO XSA1
	MC=20,B=614
// 2424:  Z←ITR, ALERT, GOTO CTA1
	MS=14,TCX=1,LZX=1,MC=1,B=617,C=60
// 2425:  Z←CTCR, ALERT, GOTO CTA1
	MS=14,TCX=1,LZX=1,MC=20,B=617,C=62
// 2426:  NOP:       Z←P←P+1, SETBA, GOTO NX2
	RRN=1,MS=61,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=1,B=35
// 2427:  R0←Q-M, GOTO MVB1, SETA
	BR=12,BL=3,MS=30,LOC=1,TXW=1,TAX=1,LR0=1,MC=20,VCY=1,B=620
// 2430:  R0←0, GOTO MVB1
	TXW=1,LR0=1,MC=1,B=620
// 2431:                          *ILLEGAL INSTRUCTION

// 2432:  SETBA, GOTO TI
	MS=61,MC=1,B=1400
// 2433:  M←NOT Q LCY 4 MRG 1774B, GOTO CLS1
	BL=5,MS=4,TCX=1,LMX=1,MC=20,B=534,C=1774
// 2434:  Z←R6, S←M←Z, GOTO ASP1
	RRN=6,BR=14,THY=1,TXW=1,LMX=1,LZY=1,LRN=2,MC=1,B=661
// 2435:  LLT:       M←Z, GOTO LLT1
	BR=14,LMX=1,MC=20,B=636
// 2436:  M←Q, R0←0, SETA, GOTO COB1
	BL=12,MS=30,TYW=1,LMX=1,LR0=1,MC=1,B=664
// 2437:                          *ILLEGAL MICROINSTRUCTION

// 2440:  SETBA, GOTO TI
	MS=61,MC=1,B=1400
// 2441:  IR←SR, GOTO LODS1
	SSP=11,TSPY=1,TYW=1,LRN=4,MC=20,B=670
// 2442:  GOTO STRS1
	MC=1,B=701
// 2443:  GOTO LSC1
	MC=20,B=650
// 2444:  S←Z, GOTO FIX1
	BR=14,TXW=1,LRN=2,MC=1,B=1244
// 2445:  M←BR←0, GOTO FLOAT1
	SSP=2,LMX=1,LSPX=1,MC=20,B=1250
// 2446:  BR←NOT Q+1, HROV, GOTO FNA1
	BL=5,SSP=2,MS=57,LOC=1,TAX=1,LSPX=1,MC=1,B=1246
// 2447:  R0←2406B+CPUNO, SETBA, GOTO BREAK
	MS=61,TCX=1,TXW=1,LR0=1,MC=1,B=1700,C=2406
// 2450:  

// 2451:

// 2452:

// 2453:                          *ILLEGAL MICROINSTRUCTION

// 2454:  SETBA, GOTO TI
//                                                    MAXOPR
	MS=61,MC=1,B=1400
// 2455:  X23LCK, Q←1, GOTO SLOK1
	MS=71,LOC=1,TAX=1,LQX=1,MC=20,B=710
// 2456:  X23LCK, Z←4, GOTO UNPRO
	MS=71,TCX=1,LZX=1,MC=1,B=464,C=4
// 2457:  R0←XR, FETCH, GOTO CXA
	SSP=6,MS=44,TSPY=1,TYW=1,LR0=1,MC=20,B=410
// 2460:  R0←XR, M←Z, STORE, GOTO NOP
	BR=14,SSP=6,MS=42,TSPY=1,TYW=1,LMX=1,LR0=1,MC=1,B=426
// 2461:  R0←XR, GOTO AAX1
	SSP=6,TSPY=1,TYW=1,LR0=1,MC=20,B=707
// 2462:  Z, RES←0, PROTECT, DGOTO NOP
	BR=14,MS=25,TYW=1,LRN=5,MC=20,DGO=1,B=426,VCY=1
// 2463:  Z, RES←4B7, GOTO 1705B IF NPROTECT, SETBA
	BR=14,MS=61,TCY=1,TYW=1,LRN=5,MC=30,VCY=1,B=1705,C=-40000000
// 2464:  UNPRO:     Z, UNPROTECT, GOTO NOP
	BR=14,MS=20,MC=1,B=426
// 2465:  Z, STROBE, GOTO NOP
	BR=14,MS=17,MC=20,B=426
// 2466:  S←Z, SETA, GOTO USCL1
	BR=14,MS=30,TXW=1,LRN=2,MC=1,B=715
// 2467:  CLEARMAP, GOTO NOP
	MS=74,MC=20,B=426
// 2470:  CMAPS, GOTO NOP
	MS=62,MC=1,B=426
// 2471:  Z← ITL, ALERT, GOTO CAT1
	MS=14,TCX=1,LZX=1,MC=20,B=712,C=61
// 2472:  Z← CTCL, ALERT, GOTO CAT1
	MS=14,TCX=1,LZX=1,MC=1,B=712,C=63
// 2473:  Z← UNLS, ALERT, GOTO RUN1
	MS=14,TCX=1,LZX=1,MC=20,B=713,C=64
// 2474:  Z, STOP, Z←P←P+1, GOTO NOP
	RRN=1,BR=14,MS=76,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=1,B=426
// 2475:    SETBA, GOTO TI        *ILLEGAL MICROINSTRUCTION
	MS=61,MC=20,B=1400
// 2476:  R0←XR, GOTO LDM1,SETBA
	MS=61,SSP=6,TSPY=1,TYW=1,LR0=1,MC=1,B=1703
// 2477:  SETBA, GOTO TI
// 
// 
	MS=61,MC=20,B=1400
// 2500:  OPR1:      Q←BR, ABCD0, GOTO OPR2 IF R0>=0
	SSP=2,MS=70,TSPY=1,LQY=1,MC=12,B=703
// 2501:  M←R6←XR, DGOTO M MRG BASEOPR
	MCONT=3,BL=14,SSP=6,TCX=1,TSPY=1,TYW=1,LMY=1,LRN=6,MC=20,DGO=1,C=2400
// 2502:  Z←AR
	SSP=1,TSPY=1,LZY=1
// 2503:  SYSCLL:    M←R0←Q LCY 12, Z←377B
	BL=12,MS=6,TCY=1,TXW=1,LMX=1,LZY=1,LR0=1,C=377
// 2504:  IR←Q AND Z, Z←600000B, SETC
	BR=10,MS=35,TCY=1,TXW=1,LZY=1,LRN=4,C=600000
// 2505:  NEWG←Z, Z←R0←S←604000B, DGOTO SYSC1 IF R0[2]
	BR=14,SSP=25,TCY=1,TYW=1,LZY=1,LRN=2,LR0=1,LSPX=1,MC=24,DGO=1,B=511,C=604000
// 2506:  K←M LCY 3 MRG 30000240B
	BL=14,MS=3,TCX=1,TXW=1,LRN=3,C=30000240
// 2507:  Z←R0←S←403016B
	TCX=1,TXW=1,LZX=1,LRN=2,LR0=1,C=403016
// 2510:  UCAL1:     NEWG←403000B
	SSP=25,TCX=1,LSPX=1,C=403000
// 2511:  SYSC1:     SSOURCE
	MS=52
// 2512:  ILIM←0, SETBA, CALL IA
	MCONT=1,SSP=20,MS=61,LSPX=1,MC=1,B=101
// 2513:  R6←R0, DGOTO BLL1
	THY=1,TYW=1,LRN=6,MC=20,DGO=1,B=12
// 2514:  Z←K, Q←77B6, CALL BLODX
// 
	MCONT=1,RRN=3,TCX=1,THY=1,LQX=1,LZY=1,MC=1,B=366,C=-1000000
// 2515:  XGA1:      GR←Z, GOTO CBA
	BR=14,SSP=10,LSPX=1,MC=20,B=402
// 2516:  XLA1:      LR←Z, GOTO CBA
	BR=14,SSP=7,LSPX=1,MC=1,B=402
// 2517:  ZAB1:      BR←0, DGOTO NX2, SETBA
	SSP=2,MS=61,LSPX=1,MC=20,DGO=1,B=35
// 2520:  ER←0, Z←P←P+1
// 
// 
	RRN=1,SSP=5,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1
// 2521:  CLSMULT:   M←M+Z
	BR=14,BL=14,TAX=1,LMX=1,VCY=1
// 2522:  M←M+Z
	BR=14,BL=14,TAX=1,LMX=1,VCY=1
// 2523:  M←M+Z
	BR=14,BL=14,TAX=1,LMX=1,VCY=1
// 2524:  Q←Q LCY 4
	BL=12,MS=4,LQX=1
// 2525:  R6←Q LCY 2, Q←AR
	BL=12,SSP=1,MS=2,TSPY=1,TXW=1,LQY=1,LRN=6
// 2526:  Q←Q LCY 4
	BL=12,MS=4,LQX=1
// 2527:  Q←Q LCY 2, Z←3B
	BL=12,MS=2,TCY=1,LQX=1,LZY=1,C=3
// 2530:  R6←Q AND Z, Q←R6
	RRN=6,BR=10,THY=1,TXW=1,LQY=1,LRN=6
// 2531:  Q←Q AND Z, Z←R6
	RRN=6,BR=10,THY=1,LQX=1,LZY=1
// 2532:  Q←Q-Z, Z←P←P+1, SETBA, DGOTO NX2
	RRN=1,BR=3,BL=12,MS=61,LOC=1,IHR=1,THY=1,TYW=1,TAX=1,LQX=1,LZY=1,LRN=1,MC=1,DGO=1,VCY=1,B=35
// 2533:  RES←AR←M+Q
// 
	BR=12,BL=14,SSP=1,TXW=1,TAX=1,LRN=5,LSPX=1,VCY=1
// 2534:  CLS1:      Q←NOT Q MRG 77B6
	BL=5,TCX=1,LQX=1,C=-1000000
// 2535:  Z←NOT Z MRG 77B6
	BR=3,TCX=1,LZX=1,C=-1000000
// 2536:  DGOTO NOT M+1 MRG 2520B
	MCONT=3,BL=3,LOC=1,TCX=1,TAX=1,MC=1,DGO=1,VCY=1,C=2520
// 2537:  M←Z←NOT Q-NOT Z, Q←BR
	BR=14,BL=5,SSP=2,LOC=1,TSPY=1,TAX=1,LMX=1,LQY=1,LZX=1,VCY=1
// 2540:  BMACCQ: R0←Q, SETBA, GOTO BMACC1
// 
// 
//   ASP, M=AR, Z=XR, IR=M
// 
	MS=61,MC=20,BL=2,LR0=1,TXW=1,B=1716
// 2541:  ASPDIV:    M←Z←3, DGOTO ASP4
	TCX=1,LMX=1,LZX=1,MC=20,DGO=1,B=550,C=3
// 2542:  M←Q AND NOT M LCY 2
	BL=2,MS=2,LMX=1
// 2543:  Z←Q LCY 2, DGOTO ASP9, M←74B6
	BL=12,MS=2,TCY=1,LMY=1,LZX=1,MC=20,DGO=1,B=576,C=-4000000
// 2544:  M←Q AND NOT M + Z
	BR=14,BL=2,TAX=1,LMX=1,VCY=1
// 2545:  M←Z←1, DGOTO ASP4
	LOC=1,TAX=1,LMX=1,LZX=1,MC=20,DGO=1,B=550
// 2546:  M←Q AND NOT M LCY 3
	BL=2,MS=3,LMX=1
// 2547:  M←Q LCY 4, Z←0
	BL=12,MS=4,LMX=1,LZY=1
// 2550:  ASP4:      M←M LCY 20
	BL=14,MS=10,LMX=1
// 2551:  ASP5:      Q←Z AND Q, Z←S, DGOTO ASP8 IF A
// 
//   ASPX CAN BE CALLED AS A SUBROUTINE, TO ASP Q<CSIZE
//    INT0 Z.  M=0, C SET.
	RRN=2,BR=10,THY=1,LQX=1,LZY=1,MC=33,DGO=1,B=566
// 2552:  ASPX:      Q←Q LCY 16
	BL=12,MS=7,LQX=1
// 2553:  Z←Z+M
	BR=14,BL=14,TAX=1,LZX=1,VCY=1
// 2554:  ASPX1:     M←Q LCY 2, Q←3B6
	BL=12,MS=2,TCY=1,LMX=1,LQY=1,C=3000000
// 2555:  R6←M+Q AND Z
	BR=10,BL=14,TXW=1,TAX=1,LRN=6,VCY=1
// 2556:  Q←Z
	BR=14,LQX=1
// 2557:  Q←Q LCY 20, M←6B5
	BL=12,MS=10,TCY=1,LMY=1,LQX=1,C=600000
// 2560:  Q←M AND Q LCY 2, M←4B6
	BL=10,MS=2,TCY=1,LMY=1,LQX=1,C=4000000
// 2561:  Q←Q-M, M←R6, DGOTO ASP6
	RRN=6,BR=12,BL=3,LOC=1,THY=1,TAX=1,LMY=1,LQX=1,MC=20,DGO=1,VCY=1,B=564
// 2562:  R6←M+Q, Q←3B6, GOTO *+1 IF X>=0
	BR=12,BL=14,TCY=1,TXW=1,TAX=1,LQY=1,LRN=6,MC=16,VCY=1,B=563,C=3000000
// 2563:  Z←Z+1, M←R6, GOTO ASP6
	RRN=6,BR=14,LOC=1,THY=1,TAX=1,LMY=1,LZX=1,MC=20,VCY=1,B=564
// 2564:  ASP6:      Z←M AND Q ! Z AND NOT Q, RETURN IF C
	MCONT=2,BR=4,BL=10,LZX=1,MC=35
// 2565:  XR←Z, SETBA, GOTO NX1
	BR=14,SSP=6,MS=61,LSPX=1,MC=20,B=34
// 2566:  ASP8:      Z←Z-M
	BR=14,BL=3,LOC=1,TAX=1,LZX=1,VCY=1
// 2567:  M←Q LCY 2, Q←3B6
	BL=12,MS=2,TCY=1,LMX=1,LQY=1,C=3000000
// 2570:  M←Q AND Z-M, GOTO ASP6 IF X>=0
	BR=10,BL=3,LOC=1,TAX=1,LMX=1,MC=16,VCY=1,B=564
// 2571:  R6←Q←Z-1, Z←4B6
	BR=14,BL=17,TCY=1,TXW=1,TAX=1,LQX=1,LZY=1,LRN=6,VCY=1,C=4000000
// 2572:  Q←Q LCY 20
	BL=12,MS=10,LQX=1
// 2573:  M←M+Z
	BR=14,BL=14,TAX=1,LMX=1,VCY=1
// 2574:  Z←Q LCY 2, Q←3B6, DGOTO ASP6
	BL=12,MS=2,TCY=1,LQY=1,LZX=1,MC=1,DGO=1,B=564,C=3000000
// 2575:  M←M-Z AND Q, Z←R6
//   DIVIDE Q BY 3 (MULTIPLY BY .25252...B)
	RRN=6,BR=7,BL=14,LOC=1,THY=1,TAX=1,LMX=1,LZY=1,VCY=1
// 2576:  ASP9:      Z←Q LCY 4, Q←3B
	BL=12,MS=4,TCY=1,LQY=1,LZX=1,C=3
// 2577:  IR←Z←M+Z, M←R6
	RRN=6,BR=14,BL=14,THY=1,TXW=1,TAX=1,LMY=1,LZX=1,LRN=4,VCY=1
// 2600:  ASP10:     M←M AND NOT Q LCY 20, Q←IR, GOTO ASP11 IF LB=0
	RRN=4,BL=4,MS=10,THY=1,LMX=1,LQY=1,MC=22,B=603
// 2601:  M←M LCY 2, Q←3, DGOTO ASP10
	BL=14,MS=2,TCY=1,LMX=1,LQY=1,MC=20,DGO=1,B=600,C=3
// 2602:  IR←Z←M+Z
	BR=14,BL=14,TXW=1,TAX=1,LZX=1,LRN=4,VCY=1
// 2603:  ASP11:     Q←NOT Q LCY 16 MRG 176B5
	BL=5,MS=7,TCX=1,LQX=1,C=17600000
// 2604:  IR←Q←NOT Q LCY 2
	BL=5,MS=2,TXW=1,LQX=1,LRN=4
// 2605:  Z←Q LCY 1
	BL=12,MS=1,LZX=1
// 2606:  Z←Q+Z, M←R6
	RRN=6,BR=14,BL=12,THY=1,TAX=1,LMY=1,LZX=1,VCY=1
// 2607:  Q←M-Z, Z←3
	BR=3,BL=14,LOC=1,TCY=1,TAX=1,LQX=1,LZY=1,VCY=1,C=3
// 2610:  ASP12:     R0←Q-Z, M←IR, GOTO ASP5 IF X<0
	RRN=4,BR=3,BL=12,LOC=1,THY=1,TXW=1,TAX=1,LMY=1,LR0=1,MC=17,VCY=1,B=551
// 2611:  M←IR←M+1, Q←R0, GOTO ASP5
// 
	BL=14,LOC=1,THY=1,TXW=1,TAX=1,LMX=1,LQY=1,LRN=4,MC=20,VCY=1,B=551
// 2612:  CSA1:      SETBA, CALL GETSR
	MCONT=1,MS=61,MC=1,B=662
// 2613:  GOTO CXA
	MC=20,B=410
// 2614:  XSA1:      R6←Z, SETBA, CALL GETSR
	MCONT=1,BR=14,MS=61,TXW=1,LRN=6,MC=1,B=662
// 2615:  AR←M, M←R6, SETBA, CALL LOADSR
	MCONT=1,RRN=6,BL=14,SSP=1,MS=61,THY=1,LMY=1,LSPX=1,MC=20,B=666
// 2616:  Z←P←P+1, SETBA, GOTO NX2
// 
	RRN=1,MS=61,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=1,B=35
// 2617:  CTA1:      PIN, Q←E2, GOTO CBA
// 
//   MOVE BLOCK OR CONSTANT (IF A IS NOT SET)
// 
	MS=16,LQY=1,MC=20,TE2Y=1,B=402,VCY=1
// 2620:  MVB1:      GOTO MVB2 IF R0<0
	MC=11,B=630
// 2621:  Q←Q+Z
//   MOVE TOP CELL FIRST
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 2622:  M←M+Z, SETBA, GOTO TI IF Z<0
	BR=14,BL=14,MS=61,TAX=1,LMX=1,MC=4,VCY=1,B=1400
// 2623:  MVB3:      K←Q←Q-1, SETBA, GOTO NX1 IF Z=0
	BR=17,BL=12,MS=61,TXW=1,TAX=1,LQX=1,LRN=3,MC=2,VCY=1,B=34
// 2624:  S←R0←M-1, M←XR, CALL BLODX IF A
	MCONT=1,BR=17,BL=14,SSP=6,TSPY=1,TXW=1,TAX=1,LMY=1,LRN=2,LR0=1,MC=33,VCY=1,B=366
// 2625:  R0←K, CALL BSTR1
	MCONT=1,RRN=3,THY=1,TYW=1,LR0=1,MC=20,B=371
// 2626:  AR←Z←Z-1, M←S, DGOTO MVB3
	RRN=2,BR=14,BL=17,SSP=1,THY=1,TAX=1,LMY=1,LZX=1,LSPX=1,MC=1,DGO=1,VCY=1,B=623
// 2627:  SETBA, GOTO TOSP IF INTRPT1
// 
//   MOVE BOTTOM CELL FIRST
	MS=61,MC=64,B=1057
// 2630:  MVB2:      S←R0←M, SETBA, GOTO NX1 IF Z=0
	BL=14,MS=61,TXW=1,LRN=2,LR0=1,MC=2,B=34
// 2631:  K←Q, CALL BLODX IF Z>=0
	MCONT=1,BL=12,TXW=1,LRN=3,MC=5,B=366
// 2632:  R0←K, CALL BSTR1 IF Z>=0
	MCONT=1,RRN=3,THY=1,TYW=1,LR0=1,MC=5,B=371
// 2633:  BR←Q←Q+1, M←S, SETBA, GOTO TI IF Z<0
	RRN=2,BL=12,SSP=2,MS=61,LOC=1,THY=1,TAX=1,LMY=1,LQX=1,LSPX=1,MC=4,B=1400
// 2634:  AR←Z←Z-1, DGOTO MVB2
	BR=14,BL=17,SSP=1,TAX=1,LZX=1,LSPX=1,MC=1,DGO=1,VCY=1,B=630
// 2635:  XR←M←M+1, SETBA, GOTO TOSP IF INTRPT1
// 
//   LOCATE LEADING TRANSITION IN AB
//    (RETURN IF C IS SET)
	BL=14,SSP=6,MS=61,LOC=1,TAX=1,LMX=1,LSPX=1,MC=64,VCY=1,B=1057
// 2636:  LLT1:      M, R0←0, GOTO LLT3 IF LB=0
	BL=14,TYW=1,LR0=1,MC=22,B=643
// 2637:  NOT M, GOTO LLT3 IF LB=0
	BL=3,MC=22,B=643
// 2640:  LLT2:      DGOTO *+1
	MC=1,DGO=1,B=641
// 2641:  M←M LCY 1, Z←R0←R0+1, DGOTO * IF M[0]=M[1]
	BL=14,MS=1,IHR=1,THY=1,TYW=1,LMX=1,LZY=1,LR0=1,MC=73,DGO=1,B=641
// 2642:  Z←Z-1, GOTO LLT5
	BR=14,BL=17,TAX=1,LZX=1,MC=1,VCY=1,B=646
// 2643:  LLT3:      M←M EOR Q, Z←0, GOTO LLT5 IF LB=0
	BL=6,LMX=1,LZY=1,MC=22,B=646
// 2644:  M, Z←24, GOTO LLT5 IF X<0
	BL=14,TCY=1,LZY=1,MC=17,VCY=1,B=646,C=30
// 2645:  R0←Z, GOTO LLT2
	BR=14,TXW=1,LR0=1,MC=20,B=640
// 2646:  LLT5:      Q←K, RETURN IF C
	MCONT=2,RRN=3,THY=1,LQY=1,MC=35
// 2647:  RES←XR←Z, SETBA, GOTO NX1
// 
//   LOAD STRING CONSTANT
	BR=14,SSP=6,MS=61,TXW=1,LRN=5,LSPX=1,MC=20,B=34
// 2650:  LSC1:      Q←S←R0←M, CALL BLODX
	MCONT=1,BL=14,TXW=1,LQX=1,LRN=2,LR0=1,MC=1,B=366
// 2651:  Z←CR←M+Q
	BR=12,BL=14,SSP=3,TAX=1,LZX=1,LSPX=1,VCY=1
// 2652:  DR←Z, Q←14B6
	BR=14,SSP=4,TCY=1,LQY=1,LSPX=1,C=14000000
// 2653:  Q←NOT M AND Q LCY 20
	BL=2,MS=10,LQX=1
// 2654:  Z←Q LCY 2, Q←74B6
	BL=12,MS=2,TCY=1,LQY=1,LZX=1,C=-4000000
// 2655:  M←M AND Q ! Z, Q←S
	RRN=2,BR=14,BL=10,THY=1,LMX=1,LQY=1
// 2656:  AR←M OR Q, SETBA, DGOTO NX2
	BL=16,SSP=1,MS=61,LSPX=1,MC=1,DGO=1,B=35
// 2657:  BR←M OR Q, Z←P←P+1
// 
//   START OF ASP IS ALMOST HERE (AT ASP1)
// 
	RRN=1,BL=16,SSP=2,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1
// 2660:  ASP2:      Z←NOT Q+1, Q←3, SETA, GOTO ASP3
	BL=5,MS=30,LOC=1,TCY=1,TAX=1,LQY=1,LZX=1,MC=1,B=662,C=3
// 2661:  ASP1:      M←M LCY 4, Q←3
	BL=14,MS=4,TCY=1,LMX=1,LQY=1,C=3
// 2662:  ASP3:      DGOTO M AND Q LCY 1 MRG ASPDIV
	MCONT=3,BL=10,MS=1,TCX=1,MC=1,DGO=1,C=2541
// 2663:  R6←Q←Z, GOTO ASP2 IF Z<0
// 
// 
//   COUNT ONE BITS IN AB
// 
	BR=14,TXW=1,LQX=1,LRN=6,MC=4,B=660
// 2664:  COB1:      Q←Z-1, GOTO COB2 IF Z=0
	BR=14,BL=17,TAX=1,LQX=1,MC=2,VCY=1,B=666
// 2665:  Z←Q AND Z, R0←R0+1, GOTO COB1
	BR=10,IHR=1,THY=1,TYW=1,LZX=1,LR0=1,MC=20,B=664
// 2666:  COB2:      Q←R0, Z←M, CLEARA, GOTO COB1 IF A
	BL=14,MS=50,THY=1,LQY=1,LZX=1,MC=33,B=664
// 2667:  RES←XR←Q, SETBA, GOTO NX1
// 
//   LOAD STATE, IR CONTAINS XMONT,XUTILT BITS
// 
	BL=12,SSP=6,MS=61,TXW=1,LRN=5,LSPX=1,MC=20,B=34
// 2670:  LODS1:     S←M, SETBA, CALL LSTATE
	MCONT=1,BL=14,MS=61,TXW=1,LRN=2,MC=1,B=1014
// 2671:  Z←R0←Q, Q←XX, SETA, DGOTO BMACC
	BL=12,SSP=24,MS=30,TSPY=1,TXW=1,LQY=1,LZX=1,LR0=1,MC=20,DGO=1,B=722
// 2672:  MAP, R0←E1, .VCY, DGOTO *+1
	MS=37,TYW=1,LR0=1,VCY=1,TE1Y=1,MC=1,DGO=1,B=673
// 2673:  SSOURCE, R0←P
	RRN=1,MS=52,THY=1,TYW=1,LR0=1
// 2674:  MAP, R0←E1, .VCY, XR←Q
	BL=12,SSP=6,MS=37,TYW=1,LR0=1,LSPX=1,VCY=1,TE1Y=1
// 2675:  R0←M←Z, CALL MEXIT IF R0[1]
	MCONT=1,BR=14,TXW=1,LMX=1,LR0=1,MC=66,B=733
// 2676:  Z←R0←P←M, SETBA, DGOTO NX5 IF A
	BL=14,MS=61,TXW=1,LZX=1,LRN=1,LR0=1,MC=33,DGO=1,B=350
// 2677:  ABCD0
	MS=70
// 2700:  Q←0, SETBA, GOTO FIXTRP
	MS=61,LQX=1,MC=1,B=1046
// 2701:  STRS1:     K←M-1, SETBA, CALL SSTATE
	MCONT=1,BR=17,BL=14,MS=61,TXW=1,TAX=1,LRN=3,MC=20,VCY=1,B=775
// 2702:  Z←P←P+1, SETBA, GOTO NX2
// 
//   TEST FOR PRIVILEGED OPR-S
	RRN=1,MS=61,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=1,B=35
// 2703:  OPR2:      Z←MAXPRIV
	TCX=1,LZX=1,C=100
// 2704:  M-Z, Q←6B5, SETBA, GOTO TI IF X>=0
	BR=3,BL=14,MS=61,LOC=1,TCY=1,TAX=1,LQY=1,MC=16,VCY=1,B=1400,C=600000
// 2705:  M←P, DGOTO M MRG BASEOPR
	MCONT=3,RRN=1,BL=14,TCX=1,THY=1,LMY=1,MC=20,DGO=1,C=2400
// 2706:  NOT M AND Q, Z←AR, SETBA, GOTO TI IF LB#0
// 
	BL=2,SSP=1,MS=61,TSPY=1,LZY=1,MC=23,B=1400
// 2707:  AAX1:      MAP, .VCY, Q←E1, GOTO CBX
// 
	MS=37,LQY=1,MC=20,VCY=1,TE1Y=1,B=403
// 2710:  SLOK1:     4, PROTECT, GOTO * IF NPROTECT
	MS=25,TCX=1,MC=30,VCY=1,B=710,C=4
// 2711:  Z←P←P+1, SETBA, GOTO NX2
// 
	RRN=1,MS=61,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=20,B=35
// 2712:  CAT1:      Z←AR, POT, GOTO NOP
	SSP=1,MS=15,TSPY=1,LZY=1,MC=1,B=426
// 2713:  RUN1:      Q←E2, .VCY, PIN, DGOTO CTA1
	MS=16,LQY=1,MC=20,DGO=1,VCY=1,TE2Y=1,B=617
// 2714:  BR←Q, Z←UNMS, ALERT
// 
	BL=12,SSP=2,MS=14,TCY=1,LZY=1,LSPX=1,C=65
// 2715:  USCL1:     P←P+1, SETBA, GOTO TOSP2
// 
// 
// 
	RRN=1,MS=61,IHR=1,THY=1,TYW=1,LRN=1,MC=20,B=1060
// 2716:  EAC1:      Z←M AND Q LCY 4 MRG BASEAD, CALL BLL48
	MCONT=1,BL=10,MS=4,TCX=1,LZX=1,MC=1,B=205,C=40
// 2717:  Z←RES←0, M←R0, GOTO EAC4 IF D
	THY=1,TXW=1,LMY=1,LZX=1,LRN=5,MC=47,B=724
// 2720:  EAC2:      Q←77B6, IR←SHIFT, GOTO EAC5 IF A
	SSP=13,TCX=1,TSPY=1,TYW=1,LQX=1,LRN=4,MC=33,B=725,C=-1000000
// 2721:  MAP, .VCY, R0←E1, GOTO EAC6 IF B
	MS=37,TYW=1,LR0=1,MC=34,VCY=1,TE1Y=1,B=726
// 2722:  BMACC:     SETBA, GOTO BMACC1 IF R0[1]
	MS=61,MC=66,B=1716
// 2723:  EAC3:      XR←M AND NOT Q ! Z AND Q, SETBA, Z←P←P+1, GOTO NX2
	RRN=1,BR=10,BL=4,SSP=6,MS=61,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1,MC=20,B=35
// 2724:  EAC4:      Z←RES←2B6, M←0, GOTO EAC2
	TCX=1,TXW=1,LMY=1,LZX=1,LRN=5,MC=1,B=720,C=2000000
// 2725:  EAC5:      AR←M, Z←RES←1B6, GOTO EAC3
	BL=14,SSP=1,TCY=1,TYW=1,LZY=1,LRN=5,LSPX=1,MC=20,B=723,C=1000000
// 2726:  EAC6:      Z←MASK
	SSP=15,TSPY=1,LZY=1
// 2727:  AR←Z, Z←IR, DGOTO BMACC
	RRN=4,BR=14,SSP=1,THY=1,LZY=1,LSPX=1,MC=20,DGO=1,B=722
// 2730:  BR←Z, Z←RES←3B6
// 
//   Q = Z = R0 = BITS,
	BR=14,SSP=2,TCY=1,TYW=1,LZY=1,LRN=5,LSPX=1,C=3000000
// 2731:  MON:       Z←IR←SR, DGOTO CLL IF R0[2]
	SSP=11,TSPY=1,TYW=1,LZY=1,LRN=4,MC=24,DGO=1,B=742
// 2732:  R0←M, M←1
	BL=14,TCY=1,TXW=1,LMY=1,LR0=1,C=1
// 2733:  MEXIT:     Q←P, 4, UNPROTECT
	RRN=1,MS=20,TCX=1,THY=1,LQY=1,C=4
// 2734:  Q←Q LCY 12, M←R0
	BL=12,MS=6,THY=1,LMY=1,LQX=1
// 2735:  Q←Q LCY 2, Z←IR
	RRN=4,BL=12,MS=2,THY=1,LQX=1,LZY=1
// 2736:  Z←Q AND Z, Q←100B
	BR=10,TCY=1,LQY=1,LZX=1,C=100
// 2737:  Z←Q AND Z, X23LCK, DRETURN IF NZ[16]
	MCONT=2,BR=10,MS=71,LZX=1,MC=10,DGO=1
// 2740:  IR←8, GOTO XTRP IF Z#0
	TCX=1,TXW=1,LRN=4,MC=3,B=746,C=10
// 2741:  IR←9, GOTO XTRP
// 
	TCX=1,TXW=1,LRN=4,MC=20,B=746,C=11
// 2742:  CLL:       Q AND M, Q←60B, DRETURN IF LB=0
	MCONT=2,BL=10,TCY=1,LQY=1,MC=22,DGO=1,C=60
// 2743:  M←R0, SR←NOT Q AND Z
	BR=4,SSP=11,THY=1,LMY=1,LSPX=1
// 2744:  4, PROTECT, GOTO * IF NPROTECT
	MS=25,TCX=1,MC=30,VCY=1,B=744,C=4
// 2745:  1, X23LCK, RETURN
// 
	MCONT=2,MS=71,LOC=1,TAX=1,MC=20
// 2746:  XTRP:      CLEARA, RETURN
// 
// 
	MCONT=2,MS=50,MC=1
// 2747:    SETBA, CALL 1776B     *ILLEGAL MICROINSTRUCTION
	MS=61,MCONT=1,MC=20,B=1776
