// 
// 
// 
// 
//   START OF THE CPU MICROCODE..

// 0:  GOTO RSET1, E1
	MC=1,TE1Y=1,B=1106
// 1:  P←Z←0, GOTO NX2
// 
// 
// 
//   THE FOLLOWING ACTIONS IMPLEMENT REL (TAG=7)
//     ADDRESSING MODE.  TABLE BASEREL IS INDEXED
//     EITHER WITH W[10,11] OR IAW[6,8].  TABLE
//     BASEREL1 IS INDEXED WITH W[10,12] OR IAW[7,9].
//     NOTE THAT BBASEREL = ABASEREL LCY1
//     Z CONTAINS A MASK FOR THE CONSTANT DISPLACEMENT
	TXW=1,LZX=1,LRN=1,MC=20,B=35
// 2:  XIANREL:   Z←R0, R0←Z
	BR=14,THY=1,TXW=1,LZY=1,LR0=1
// 3:  Z←IR, DGOTO Z
	MCONT=3,RRN=4,BR=14,THY=1,LZY=1,MC=20,DGO=1
// 4:  Z←Q+Z, Q←R0, DGOTO ENDA1
	BR=14,BL=12,THY=1,TAX=1,LQY=1,LZX=1,MC=1,DGO=1,VCY=1,B=337
// 5:  XIIANREL:  Z←R0, R0←Z
	BR=14,THY=1,TXW=1,LZY=1,LR0=1
// 6:  Z←IR, DGOTO Z
	MCONT=3,RRN=4,BR=14,THY=1,LZY=1,MC=1,DGO=1
// 7:  Z←Q+Z, Q←R0, DGOTO IA
	BR=14,BL=12,THY=1,TAX=1,LQY=1,LZX=1,MC=20,DGO=1,VCY=1,B=101
// 10:  ABASEREL:  Z←LR, Q←Z, DGOTO ENDA1
	BR=14,SSP=7,TSPY=1,LQX=1,LZY=1,MC=1,DGO=1,B=337
// 11:  Z←S, Q←Z, DGOTO ENDA1
	RRN=2,BR=14,THY=1,LQX=1,LZY=1,MC=20,DGO=1,B=337
// 12:  Z←S, Q←Z, DGOTO IA
	RRN=2,BR=14,THY=1,LQX=1,LZY=1,MC=1,DGO=1,B=101
// 13:  Q←NOT M MRG 77774000B, Z←IR, SETA, DGOTO ENDA IF NM[13]
	RRN=4,BL=3,MS=30,TCX=1,THY=1,LQX=1,LZY=1,MC=40,DGO=1,B=336,C=-4000
// 14:  Q←LR, GOTO XIANREL
	SSP=7,TSPY=1,LQY=1,MC=1,B=2
// 15:  Q←S, GOTO XIANREL
	RRN=2,THY=1,LQY=1,MC=20,B=2
// 16:  Q←S, GOTO XIIANREL
	RRN=2,THY=1,LQY=1,MC=1,B=5
// 17:  Q←NOT M MRG 77774000B, Z←IR, SETA, DGOTO ENDA IF NM[13]
	RRN=4,BL=3,MS=30,TCX=1,THY=1,LQX=1,LZY=1,MC=40,DGO=1,B=336,C=-4000
// 20:  BBASEREL:  R0←M AND Q+Z, M←R6, RETURN IF C
	MCONT=2,RRN=6,BR=14,BL=10,THY=1,TXW=1,TAX=1,LMY=1,LR0=1,MC=35,VCY=1
// 21:  S←R0←M AND Q+Z, GOTO IA
	BR=14,BL=10,TXW=1,TAX=1,LRN=2,LR0=1,MC=20,VCY=1,B=101
// 22:  R0←M AND Q+Z, M←R6, RETURN IF C
	MCONT=2,RRN=6,BR=14,BL=10,THY=1,TXW=1,TAX=1,LMY=1,LR0=1,MC=35,VCY=1
// 23:  R0←M OR NOT Q+Z,M←R6,RETURN IF C
	MCONT=2,RRN=6,BR=14,BL=15,THY=1,TXW=1,TAX=1,LMY=1,LR0=1,MC=35,VCY=1
// 24:  S←R0←M AND Q+Z
	BR=14,BL=10,TXW=1,TAX=1,LRN=2,LR0=1,VCY=1
// 25:  S←R0←M OR NOT Q+Z
	BR=14,BL=15,TXW=1,TAX=1,LRN=2,LR0=1,VCY=1
// 26:  Q←R0← NOT Q+Z, Z←77774B3, GOTO IMX1 IF M[13]
	BR=14,BL=5,TCY=1,TXW=1,TAX=1,LQX=1,LZY=1,LR0=1,MC=75,VCY=1,B=30,C=-4000
// 27:  Q←R0← NOT Q, Z←77774000B, DGOTO ENDA IF M[13]
	BL=5,TCY=1,TXW=1,LQX=1,LZY=1,LR0=1,MC=75,DGO=1,B=336,C=-4000
// 30:  IMX1:      R0←Q+Z, GOTO ENDA
// 
//   START OF THE MAIN INSTRUCTION LOOP:
//     SOME INSTRUCTIONS INCLUDE NX1 AND RETURN TO NX2. JUMPS
//     RETURN TO NX3, LOADS RETURNS TO NX3.
	BR=14,BL=12,TXW=1,TAX=1,LR0=1,MC=1,VCY=1,B=336
// 31:  NX4:       R0←P+1, GOTO T940 IF INTRPT2
	RRN=1,IHR=1,THY=1,TYW=1,LR0=1,MC=65,B=1056
// 32:  NX6:       Q←7B7, MAP, DGOTO NX3
	MS=37,TCX=1,LQX=1,MC=1,DGO=1,B=36,C=-10000000
// 33:  R0←E1, TAKE, GOTO PAGEF IF Y<0
	MS=75,TYW=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 34:  NX1:       Z←P←P+1, GOTO NY2 IF M940
	RRN=1,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=43,B=1153
// 35:  NX2:   R6←M←NI, Q←7B7, SABCDE0, GOTO NX4 IF INTRPT, .TSPY←0
	SSP=50,MS=33,TCX=1,TYW=1,LMY=1,LQX=1,LRN=6,MC=41,B=31,C=-10000000
// 36:  NX3:       IR←XR, DGOTO M AND Q LCY 4 MRG BASEAD
	MCONT=3,BL=10,SSP=6,MS=4,TCX=1,TSPY=1,TYW=1,LRN=4,MC=1,DGO=1,C=40
// 37:  Q←ILIM←37777B, S←P, GOTO POP IF M[9]
//   DISPATCH ON TAG
//     M CONTAINS W, S CONTAINS THE SOURCE OF W. Q=37777B, ILIM=0
// 
	RRN=1,SSP=20,TCX=1,THY=1,TYW=1,LQX=1,LRN=2,LSPX=1,MC=71,B=353,C=37777
// 40:  BASEAD:    Z←GR, DGOTO ENDA1
	SSP=10,TSPY=1,LZY=1,MC=1,DGO=1,B=337
// 41:  R0←M AND Q+Z, RETURN IF C
	MCONT=2,BR=14,BL=10,TXW=1,TAX=1,LR0=1,MC=35,VCY=1
// 42:  Z←GR, DGOTO IA
	SSP=10,TSPY=1,LZY=1,MC=1,DGO=1,B=101
// 43:  S←R0←M AND Q+Z
	BR=14,BL=10,TXW=1,TAX=1,LRN=2,LR0=1,VCY=1
// 44:  Z←IR, DGOTO ENDA1
	RRN=4,THY=1,LZY=1,MC=1,DGO=1,B=337
// 45:  R0←M AND Q+Z, RETURN IF C
	MCONT=2,BR=14,BL=10,TXW=1,TAX=1,LR0=1,MC=35,VCY=1
// 46:  M←M LCY 16, Q←77B, DGOTO BX1
	BL=14,MS=7,TCY=1,LMX=1,LQY=1,MC=1,DGO=1,B=321,C=77
// 47:  Z←M AND Q, Q←37B, GOTO BXIR IF LB=0
	BL=10,TCY=1,LQY=1,LZX=1,MC=22,B=334,C=37
// 50:  Q←377B, DGOTO PD1
	TCX=1,LQX=1,MC=1,DGO=1,B=310,C=377
// 51:  Z←M AND Q, Q←177B, GOTO PDIR IF LB=0
	BL=10,TCY=1,LQY=1,LZX=1,MC=22,B=237,C=177
// 52:  Q←377B, SETA, DGOTO PD1
	MS=30,TCX=1,LQX=1,MC=1,DGO=1,B=310,C=377
// 53:  Z←M AND Q, Q←177B, GOTO PDIR IF LB=0
	BL=10,TCY=1,LQY=1,LZX=1,MC=22,B=237,C=177
// 54:  Q←377B, DGOTO BXD1
	TCX=1,LQX=1,MC=1,DGO=1,B=126,C=377
// 55:  Z←M AND Q, Q←177B, GOTO BXDIR IF LB=0
	BL=10,TCY=1,LQY=1,LZX=1,MC=22,B=177,C=177
// 56:  DGOTO Q←M AND Q LCY 12 MRG ABASEREL
	MCONT=3,BL=10,MS=6,TCX=1,LQX=1,MC=1,DGO=1,C=10
// 57:  DGOTO Q LCY 1, Z←3777B
// 
//   THE FOLLOWING TABLE IS INDEXED WITH THE TAG FIELD OF
//   AN IAW.  (IAW[2,4])
//   R0 AND Z ARE INITIALIZED FOR THE REL (7) ACTION.
//   ROIAD IS USED BY TRAP ROIA
	MCONT=3,BL=12,MS=1,TCY=1,LZY=1,MC=20,DGO=1,C=3777
// 60:  IAN:       Q←77B6, DGOTO ENDA1
	TCX=1,LQX=1,MC=1,DGO=1,B=337,C=-1000000
// 61:  R0←M AND NOT Q, RETURN IF C, M←R6
	MCONT=2,RRN=6,BL=4,THY=1,TXW=1,LMY=1,LR0=1,MC=35
// 62:  Q←77B6, DGOTO IA
	TCX=1,LQX=1,MC=1,DGO=1,B=101,C=-1000000
// 63:  S←R0←M AND NOT Q
	BL=4,TXW=1,LRN=2,LR0=1
// 64:  Z←IR, Q←77B6, DGOTO ENDA1
	RRN=4,TCX=1,THY=1,LQX=1,LZY=1,MC=1,DGO=1,B=337,C=-1000000
// 65:  R0←M AND NOT Q+Z, RETURN IF C, M←R6
	MCONT=2,RRN=6,BR=14,BL=4,THY=1,TXW=1,TAX=1,LMY=1,LR0=1,MC=35,VCY=1
// 66:  M←M LCY 16, Q←77B, DGOTO BX1
	BL=14,MS=7,TCY=1,LMX=1,LQY=1,MC=1,DGO=1,B=321,C=77
// 67:  Z←M AND Q, Q←37B, GOTO BXIR IF LB=0
	BL=10,TCY=1,LQY=1,LZX=1,MC=22,B=334,C=37
// 70:  Q←77B6, SETD, DGOTO ENDA1
	MS=36,TCX=1,LQX=1,MC=1,DGO=1,B=337,C=-1000000
// 71:  ROIAD←R0←M AND NOT Q, M←R6, RETURN IF C
	MCONT=2,RRN=6,BL=4,SSP=16,THY=1,TXW=1,LMY=1,LR0=1,LSPX=1,MC=35
// 72:  Z←IR, Q←77B6, SETD, DGOTO ENDA1
	RRN=4,MS=36,TCX=1,THY=1,LQX=1,LZY=1,MC=1,DGO=1,B=337,C=-1000000
// 73:  ROIAD←R0←M AND NOT Q+Z, M←R6, RETURN IF C
	MCONT=2,RRN=6,BR=14,BL=4,SSP=16,THY=1,TXW=1,TAX=1,LMY=1,LR0=1,LSPX=1,MC=35,VCY=1
// 74:  Q←377B, DGOTO BXD1
	TCX=1,LQX=1,MC=1,DGO=1,B=126,C=377
// 75:  Z←M AND Q, Q←177B, GOTO BXDIR IF LB=0
	BL=10,TCY=1,LQY=1,LZX=1,MC=22,B=177,C=177
// 76:  M←M LCY 8, Q←60000003B
	BL=14,MS=5,TCY=1,LMX=1,LQY=1,C=-17777775
// 77:  DGOTO M←M AND Q LCY 1 MRG ABASEREL
	MCONT=3,BL=10,MS=1,TCX=1,LMX=1,MC=20,DGO=1,C=10
// 100:  M←R0, DGOTO R0←M AND Q LCY 1 MRG BBASEREL
// 
//   START OF THE PROCEDURE IA().
//     THE PROCEDURE CAN BE CALLED BY THE MICRO INSTRUCTION:
//       SETC, CALL IASUB, ILIM←0
//     M HAS TO CONTAIN THE IAW. S=SOURCE OF IAW
// 
	MCONT=3,BL=10,MS=1,TCX=1,THY=1,TXW=1,LMY=1,LR0=1,MC=1,DGO=1,C=20
// 101:  IA:        MAPSS,.VCY, R0←E1, GOTO PAGEF IF Y<0
	MS=51,TYW=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 102:  IA1:       FETCH
	MS=44
// 103:  IASUB:     Z←ILIM, Q←2B6
	SSP=20,TCX=1,TSPY=1,LQX=1,LZY=1,C=2000000
// 104:  Z←ILIM←X←Z+Q, Q←6B7
	BR=14,BL=12,SSP=20,TCY=1,TAX=1,LQY=1,LZX=1,LSPX=1,VCY=1,C=-20000000
// 105:  DGOTO M AND Q LCY 3 MRG *+3 IF Z>=0
	MCONT=3,BL=10,MS=3,TCX=1,MC=5,DGO=1,C=110
// 106:  Q←NOT M LCY 2 MRG 7777777B
	BL=3,MS=2,TCX=1,LQX=1,C=7777777
// 107:  IR←X←11, Q←S, GOTO FIXTRP
// 
//   TABLE FOR THE 4 INDIRECT ADDRESSING TYPES FOLLOWS:
// 
	RRN=2,TCX=1,THY=1,TXW=1,LQY=1,LRN=4,MC=20,B=1046,C=13
// 110:  BASEIA:    DGOTO NOT Q LCY4 MRG IAN
	MCONT=3,BL=5,MS=4,TCX=1,MC=1,DGO=1,C=60
// 111:  R0←M, Z←37777B, GOTO IATRAP IF M[5]
	BL=14,TCY=1,TXW=1,LZY=1,LR0=1,MC=50,B=370,C=37777
// 112:  Z←IR, Q←3777B, DGOTO IAF1
	RRN=4,TCX=1,THY=1,LQX=1,LZY=1,MC=1,DGO=1,B=262,C=3777
// 113:  Q←M AND Q, DGOTO IAF1 IF M[13]
	BL=10,LQX=1,MC=75,DGO=1,B=262
// 114:  S←R0←M, Q←74B6, DGOTO IAS1
	BL=14,TCY=1,TXW=1,LQY=1,LRN=2,LR0=1,MC=1,DGO=1,B=260,C=-4000000
// 115:  M←M LCY 2
	BL=14,MS=2,LMX=1
// 116:  R0←M, Q←774B5, DGOTO IAA3 IF M[4]
	BL=14,TCY=1,TXW=1,LQY=1,LR0=1,MC=74,DGO=1,B=346,C=-400000
// 117:  Q←M AND NOT Q, Z←IR, GOTO IAA0 IF Y<0, .VCY
//   THE LARGE ELEMENT BIT (LEB) IS 0.
	RRN=4,BL=4,THY=1,LQX=1,LZY=1,MC=53,VCY=1,B=122
// 120:  IR←R0, M←M LCY 4, DGOTO IAA1 IF NR0[2]
	BL=14,MS=4,THY=1,TYW=1,LMX=1,LRN=4,MC=25,DGO=1,B=123
// 121:  R0←Q-Z, Q←3B7
	BR=3,BL=12,LOC=1,TCY=1,TXW=1,TAX=1,LQY=1,LR0=1,VCY=1,C=30000000
// 122:  IAA0:      R0←Z←Z-1, DGOTO ABE IF R0<0
	BR=14,BL=17,TXW=1,TAX=1,LZX=1,LR0=1,MC=11,DGO=1,VCY=1,B=374
// 123:  IAA1:      S←R0←S+1, Q←NOT M AND Q LCY 3 MRG *+65, GOTO ABE IF R0<0
	RRN=2,BL=2,MS=3,IHR=1,TCX=1,THY=1,TYW=1,LQX=1,LRN=2,LR0=1,MC=11,B=374,C=224
// 124:  MAPSS, .VCY, R0←E1, DGOTO Q
	MCONT=3,BL=12,MS=51,TYW=1,LR0=1,MC=1,DGO=1,VCY=1,TE1Y=1
// 125:  Q←Z, FETCH, GOTO PAGEF IF R0<0
//   BXD ADDRESSING.  THE LAST INSTRUCTION IS A DUMMY
	BR=14,MS=44,LQX=1,MC=11,B=700
// 126:  BXD1:      Q←Q AND Z, Z←LR, DGOTO BXD2 IF NZ[16]
	BR=10,SSP=7,TSPY=1,LQX=1,LZY=1,MC=10,DGO=1,B=127
// 127:  BXD2:      R0←Z+Q, Z←GR
	BR=14,BL=12,SSP=10,TSPY=1,TXW=1,TAX=1,LZY=1,LR0=1,VCY=1
// 130:  MFETCH, Q←M, .VCY, R0←E1, GOTO PAGEF IF Y<0
	BL=14,MS=34,TYW=1,LQX=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 131:  BXD3:      Z←37400B
	TCX=1,LZX=1,C=37400
// 132:  Q←Q AND Z
	BR=10,LQX=1
// 133:  Z←Q LCY 16
	BL=12,MS=7,LZX=1
// 134:  S←R0←IR, Z← NOT Z, DGOTO BXD4 IF Z[18]
	RRN=4,BR=3,THY=1,TYW=1,LZX=1,LRN=2,LR0=1,MC=14,DGO=1,B=135
// 135:  BXD4:      M←IR←M+ NOT Z, Z←77B, DGOTO IA IF Z[18]
	BR=3,BL=14,TCY=1,TXW=1,TAX=1,LMX=1,LZY=1,LRN=4,MC=14,DGO=1,VCY=1,B=101,C=77
// 136:  R0←R0
	THY=1,TYW=1,LR0=1
// 137:   CALL 1776B
//   MASK TABLE:
//     EXECUTING THE N-TH INSTRUCTION IN THIS TABLE
//     WILL PUT 2↑N-1 INTO Q
// 
//   THE MICROSTORE ADDRESS IS 140B NOW
//                                               WIDTH IN BITS
	MCONT=1,MC=20,B=1776
// 140:  Q←0
	LQX=1
// 141:  Q←1B
	LOC=1,TAX=1,LQX=1
// 142:  Q←3B
	TCX=1,LQX=1,C=3
// 143:  Q←7B
	TCX=1,LQX=1,C=7
// 144:  Q←17B
	TCX=1,LQX=1,C=17
// 145:  Q←37B
	TCX=1,LQX=1,C=37
// 146:  Q←77B
	TCX=1,LQX=1,C=77
// 147:  Q←177B
	TCX=1,LQX=1,C=177
// 150:  Q←377B
	TCX=1,LQX=1,C=377
// 151:  Q←777B
	TCX=1,LQX=1,C=777
// 152:  Q←1777B
	TCX=1,LQX=1,C=1777
// 153:  Q←3777B
	TCX=1,LQX=1,C=3777
// 154:  Q←Y←7777B
	TCY=1,LQY=1,C=7777
// 155:  Q←Y←17777B
	TCY=1,LQY=1,C=17777
// 156:  Q←Y←37777B
	TCY=1,LQY=1,C=37777
// 157:  Q←Y←77777B
	TCY=1,LQY=1,C=77777
// 160:  Q←Y←177777B
	TCY=1,LQY=1,C=177777
// 161:  Q←Y←377777B
	TCY=1,LQY=1,C=377777
// 162:  Q←Y←777777B
	TCY=1,LQY=1,C=777777
// 163:  Q←Y←1777777B
	TCY=1,LQY=1,C=1777777
// 164:  Q←Y←3777777B
	TCY=1,LQY=1,C=3777777
// 165:  Q←Y←7777777B
	TCY=1,LQY=1,C=7777777
// 166:  Q←Y←17777777B
	TCY=1,LQY=1,C=17777777
// 167:  Q←Y←37777777B
	TCY=1,LQY=1,C=37777777
// 170:  Q←-1
// 
// 
//   ARRAY INDIRECT ADDRESSING WITH LEB=1
//     ( SEE ALSO ENDA-2 )
// 
	BL=17,LQX=1
// 171:  IAA5:      R0←Q-Z,Q←16B4
	BR=3,BL=12,LOC=1,TCY=1,TXW=1,TAX=1,LQY=1,LR0=1,VCY=1,C=160000
// 172:  R0←Z←Z-1,GOTO ABE IF R0<0
	BR=14,BL=17,TXW=1,TAX=1,LZX=1,LR0=1,MC=11,VCY=1,B=374
// 173:  IAA4:      M←NOT M AND Q LCY 3, R0←S, GOTO ABE IF R0<0
	RRN=2,BL=2,MS=3,THY=1,TYW=1,LMX=1,LR0=1,MC=11,B=374
// 174:  MAPSS
	MS=51
// 175:  DGOTO M LCY 8 MRG *+3, R0←E1
	MCONT=3,BL=14,MS=5,TCX=1,TYW=1,LR0=1,MC=20,DGO=1,TE1Y=1,C=200
// 176:  U←Q←Z, FETCH, GOTO PAGEF IF R0<0
// 
//   PART OF BXD CODE
	BR=14,SSP=24,MS=44,LQX=1,LSPX=1,MC=11,B=700
// 177:  BXDIR:     Q←M, M←0, GOTO BXD3
// 
// 
//   ARRAY MULTIPLIER TABLE 1.  THE TABLE IS ENTERED
//     AT BASE + NOT IAW[8,10] IF LEB=1. Z IS IR-LB
// 
	BL=14,LMY=1,LQX=1,MC=20,B=131
// 200:  AM1BASE:   Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 201:  Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 202:  Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 203:  Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 204:  Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 205:  Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 206:  Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 207:  Q←IR MRG 76177777B, R0←Q
//   DISPATCH TO MULTIPLY BY IAW[5,7]
	RRN=4,BL=12,TCY=1,THY=1,TXW=1,LQY=1,LR0=1,C=-1600001
// 210:  DGOTO NOT Q LCY 8 MRG *+8, Q←U
	MCONT=3,BL=5,SSP=24,MS=5,TCX=1,TSPY=1,LQY=1,MC=1,DGO=1,C=220
// 211:  Q←R0, Z←Q LCY 3
// 
//   PART OF FIELD INDIRECTION CODE
// 
	BL=12,MS=3,THY=1,LQY=1,LZX=1
// 212:  IAF6:      M←IR, R0←Z, RETURN
// 
//   STRING INDIRECT ADDRESSING.  NOTE HOW CHECKING
//     FOR MAPPING ERRORS OCCURS AT IASTR.  THE PROPER
//     FIELD DESCRIPTORS ARE UNPACKED FROM A TABLE
//     INDEXED BY IAW[2,5].  (CSIZE CONCAT CPOS)
// 
	MCONT=2,RRN=4,BR=14,THY=1,TXW=1,LMY=1,LR0=1,MC=1
// 213:  IAS4:      FETCH, DGOTO IAS2 IF R0>=0
	MS=44,MC=12,DGO=1,B=214
// 214:  IAS2:      SHIFT←Q, Z←7617400B
	BL=12,SSP=13,TCY=1,LZY=1,LSPX=1,C=7617400
// 215:  Q←Q AND Z
	BR=10,LQX=1
// 216:  DGOTO Q LCY 8 MRG BASEMSK
	MCONT=3,BL=12,MS=5,TCX=1,MC=1,DGO=1,C=140
// 217:  Z←Q LCY 16, DGOTO IAS3
// 
//   ARRAY MULTIPLIER TABLE 2.  THE TABLE IS ENTERED
//     AT BASE + NOT IAW[5,7] IF LEB=1 OTHERWISE
//     AT BASE + NOT IAW[5,6] +4. Z IS IR-LB
// 
	BL=12,MS=7,LZX=1,MC=20,DGO=1,B=232
// 220:  AM2BASE:   Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 221:  Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 222:  Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 223:  Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 224:  AM3BASE:   Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 225:  Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 226:  Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 227:  Z←IR,IR←Q
	RRN=4,BL=12,THY=1,TXW=1,LZY=1,LRN=4
// 230:  Q←NOT M LCY 2 MRG 4000177B, R0←R6, DGOTO BASEIA
	RRN=6,BL=3,MS=2,TCX=1,THY=1,TYW=1,LQX=1,LR0=1,MC=1,DGO=1,B=110,C=4000177
// 231:  GOTO IATRP IF Z[3]#R0=LAX
// 
//   CONCLUSION OF STRING INDIRECT ADDRESSING.
// 
	MC=55,B=371
// 232:  IAS3:      M←M LCL Z
	BL=14,MS=11,LMX=1
// 233:  M←WORD←M LCH Z, DGOTO IAF3
	BL=14,SSP=14,MS=12,LMX=1,LSPX=1,MC=20,DGO=1,B=277
// 234:  IR←M AND Q, M←R6
	RRN=6,BL=10,THY=1,TXW=1,LMY=1,LRN=4
// 235:  IASTR:     GOTO PAGEF IF R0<0
	MC=11,B=700
// 236:  GOTO TI
//   PART OF PD CODE
// 
	MC=1,B=1400
// 237:  PDIR:      Q←M, M←IR, GOTO PD3
// 
//   TABLE TO DESCRIBE STRING CHARACTERS.  THE TABLE
//     CONSISTS OF 16 ENTRIES EACH WITH 3, 8 BITS WIDE FIELDS.
//                              CSIZE,CPOS    SIZE/POS/SHIFT
	RRN=4,BL=14,THY=1,LMY=1,LQX=1,MC=20,B=313
// 240:  BASECHAR:  Q←1403022B
	TCX=1,LQX=1,C=1403022
// 241:  Q←1406014B
	TCX=1,LQX=1,C=1406014
// 242:  Q←1411006B
	TCX=1,LQX=1,C=1411006
// 243:  Q←1400000B
	TCX=1,LQX=1,C=1400000
// 244:  Q←2004020B
	TCX=1,LQX=1,C=2004020
// 245:  Q←2010010B
	TCX=1,LQX=1,C=2010010
// 246:  Q←2000000B
	TCX=1,LQX=1,C=2000000
// 247:  GOTO IASTR
	MC=20,B=235
// 250:  Q←3006014B
	TCX=1,LQX=1,C=3006014
// 251:  Q←3000000B
	TCX=1,LQX=1,C=3000000
// 252:  GOTO IASTR
	MC=1,B=235
// 253:  GOTO IASTR
	MC=20,B=235
// 254:  Q←6000000B
	TCX=1,LQX=1,C=6000000
// 255:  GOTO IASTR
	MC=20,B=235
// 256:  GOTO IASTR
	MC=1,B=235
// 257:  GOTO IASTR
// 
//   STRING INDIRECT ADDRESSING (SEE ALSO IAS4)
// 
	MC=20,B=235
// 260:  IAS1:      MAP, DGOTO IAS4
	MS=37,MC=1,DGO=1,B=213
// 261:  R0←E1, DGOTO M AND Q LCY 4 MRG BASECHAR
// 
//   FIELD INDIRECT ADDRESSING
//     Z=IR, M=IAW, Q=DISP
// 
	MCONT=3,BL=10,MS=4,TCX=1,TYW=1,LR0=1,MC=20,DGO=1,TE1Y=1,C=240
// 262:  IAF1:      Q←S←R0←Z+Q, Z←77774000B
	BR=14,BL=12,TCY=1,TXW=1,TAX=1,LQX=1,LZY=1,LRN=2,LR0=1,VCY=1,C=-4000
// 263:  MFETCH, Q←M, .VCY, R0←E1, GOTO PAGEF IF Y<0
	BL=14,MS=34,TYW=1,LQX=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 264:  U←Q←Q LCY 8, Z←37B
	BL=12,SSP=24,MS=5,TCY=1,LQX=1,LZY=1,LSPX=1,C=37
// 265:  IR←Z←Q AND Z
	BR=10,TXW=1,LZX=1,LRN=4
// 266:  Q←Q LCY 4
	BL=12,MS=4,LQX=1
// 267:  Q←NOT Q LCY 1 MRG 77777740B
	BL=5,MS=1,TCX=1,LQX=1,C=-40
// 270:  Z←NOT Q+Z, Q←24
	BR=14,BL=5,TCY=1,TAX=1,LQY=1,LZX=1,VCY=1,C=30
// 271:  SHIFT←IR←Q-Z, Q←IR
	RRN=4,BR=3,BL=12,SSP=13,LOC=1,THY=1,TXW=1,TAX=1,LQY=1,LRN=4,LSPX=1,VCY=1
// 272:  IR, GOTO TI IF Y<0
	RRN=4,THY=1,MC=53,VCY=1,B=1400
// 273:  DGOTO Q MRG BASEMSK
	MCONT=3,BL=12,TCX=1,MC=20,DGO=1,C=140
// 274:  M←M LCL Z, DGOTO IAF2, IR←U
	BL=14,SSP=24,MS=11,TSPY=1,TYW=1,LMX=1,LRN=4,MC=1,DGO=1,B=275
// 275:  IAF2:      WORD←M←M LCH Z, Z←IR
	RRN=4,BL=14,SSP=14,MS=12,THY=1,LMX=1,LZY=1,LSPX=1
// 276:  IR←M AND Q, M←R6, DGOTO IAF5 IF Z[18]
	RRN=6,BL=10,THY=1,TXW=1,LMY=1,LRN=4,MC=14,DGO=1,B=303
// 277:  IAF3:      MASK←Q, Z←S, SETB
//   THE FOLLOWING IS A COPY OF THE ENDA CODE
	RRN=2,BL=12,SSP=15,MS=26,THY=1,LZY=1,LSPX=1
// 300:  IAF4:      M←M LCY 8, Q←40000037B, GOTO IAF6 IF C
	BL=14,MS=5,TCY=1,LMX=1,LQY=1,MC=35,B=212,C=-37777741
// 301:  DGOTO K←Q AND M LCY 2 MRG BASEINST, M←IR
	MCONT=3,RRN=4,BL=10,MS=2,TCX=1,THY=1,TXW=1,LMY=1,LRN=3,MC=20,DGO=1,C=1400
// 302:  Q←AR, R6←Z
//   SE=1
	BR=14,SSP=1,TSPY=1,TXW=1,LQY=1,LRN=6
// 303:  IAF5:      M←IR
	RRN=4,THY=1,LMY=1
// 304:  M←M LCY 1
	BL=14,MS=1,LMX=1
// 305:  M←NOT Q AND M, DGOTO IAF4 IF LB=0
	BL=4,LMX=1,MC=22,DGO=1,B=300
// 306:  M←R6, M, DGOTO IAF4 IF LB#0
	RRN=6,BL=14,THY=1,LMY=1,MC=23,DGO=1,B=300
// 307:  IR←NOT Q, IR, .TYW
// 
//   PD OR PDI ADDRESSING MODE (A IS SET IF PDI)
//     NOTE THE TRICK AT PD4.  BIT 18 IS 0 IN -64.
	RRN=4,BL=5,THY=1,TXW=1,TYW=1,LRN=4
// 310:  PD1:       Q←Z AND Q, Z←LR, DGOTO PD2 IF NZ[16]
	BR=10,SSP=7,TSPY=1,LQX=1,LZY=1,MC=10,DGO=1,B=311
// 311:  PD2:       R0←Z+Q,Z←GR
	BR=14,BL=12,SSP=10,TSPY=1,TXW=1,TAX=1,LZY=1,LR0=1,VCY=1
// 312:  MFETCH, Q←M, .VCY, R0←E1, GOTO PAGEF IF Y<0
	BL=14,MS=34,TYW=1,LQX=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 313:  PD3:       Z←37400B
	TCX=1,LZX=1,C=37400
// 314:  Q←Q AND Z
	BR=10,LQX=1
// 315:  Z←Q LCY 16
	BL=12,MS=7,LZX=1
// 316:  Z← NOT Z, DGOTO PD4 IF Z[18]
	BR=3,LZX=1,MC=14,DGO=1,B=317
// 317:  PD4:       M←S←R0←M+ NOT Z, Z←77B, DGOTO ENDA IF Z[18]
	BR=3,BL=14,TCY=1,TXW=1,TAX=1,LMX=1,LZY=1,LRN=2,LR0=1,MC=14,DGO=1,VCY=1,B=336,C=77
// 320:  CLEARA, GOTO IA IF A
// 
//   BX ADDRESSING MODE (TAG=3)
// 
	MS=50,MC=33,B=101
// 321:  BX1:       Q←Q AND Z, Z←LR, DGOTO BX2 IF NZ[18]
	BR=10,SSP=7,TSPY=1,LQX=1,LZY=1,MC=15,DGO=1,B=322
// 322:  BX2:       R0←Q+Z, Z←GR
	BR=14,BL=12,SSP=10,TSPY=1,TXW=1,TAX=1,LZY=1,LR0=1,VCY=1
// 323:  Q←M LCY 8
	BL=14,MS=5,LQX=1
// 324:  MFETCH, .VCY, R0←E1, GOTO PAGEF IF Y<0
	MS=34,TYW=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 325:  BX3:       Z←377B
	TCX=1,LZX=1,C=377
// 326:  Z←Q AND Z, Q←177B
	BR=10,TCY=1,LQY=1,LZX=1,C=177
// 327:  GOTO BXIR1 IF Z=0
	MC=2,B=335
// 330:  Q←Q AND Z,Z←LR, DGOTO BX4 IF NZ[16]
	BR=10,SSP=7,TSPY=1,LQX=1,LZY=1,MC=10,DGO=1,B=331
// 331:  BX4:       S←R0←Q+Z, Z←GR
	BR=14,BL=12,SSP=10,TSPY=1,TXW=1,TAX=1,LZY=1,LRN=2,LR0=1,VCY=1
// 332:  IR←M, DGOTO IA1
	BL=14,TXW=1,LRN=4,MC=1,DGO=1,B=102
// 333:  MAPSS, .VCY, R0←E1, GOTO PAGEF IF Y<0
	MS=51,TYW=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 334:  BXIR:      M←IR, Q←M LCY 8, GOTO BX3
	RRN=4,BL=14,MS=5,THY=1,LMY=1,LQX=1,MC=1,B=325
// 335:  BXIR1:     S←R0←IR, GOTO BX4+1
// 
// 
//   DISPATCH ON THE INSTRUCTION CODE
//     INSTRUCTIONS RECEIVE THE FOLLOWING INFORMATION
//     IN THE REGISTERS:
//       M=OPERAND, UNLESS THE INSTRUCTION IS A STORE
//       R6=Q=Z, UNLESS THE ADDRESS IS IMMEDIATE
//       Q=A REGISTER, R0[2]=PMRO OR NOT DB
//     BIT A IS SET IF THE ADDRESS IS IMMEDIATE, BIT B IF
//     IT CONTAINS A FIELD AND BIT D IF THE ADDRESS
//     IS READ ONLY. (SEE ALSO IAF4)
//     THE SETTINGS OF A AND B ARE ALSO REFLECTED IN
//     K[0] AND K[1]. P IS SAVED IN S IF A IS SET. (SEE BRU1)
// 
	RRN=4,THY=1,TYW=1,LRN=2,LR0=1,MC=20,B=332
// 336:  ENDA:      M←R6, RETURN IF C
	MCONT=2,RRN=6,THY=1,LMY=1,MC=35
// 337:  ENDA1:     Z←R6←R0, Q←77B5, MAP, GOTO ENDA3 IF STINST
	MS=37,TCX=1,THY=1,TYW=1,LQX=1,LZY=1,LRN=6,MC=54,B=343,C=7700000
// 340:  R0←E1, Q←M AND Q, FETCH, GOTO PAGEF IF Y<0
	BL=10,MS=44,TYW=1,LQX=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 341:  Q←Q LCY 8
	BL=12,MS=5,LQX=1
// 342:  GOTO K←Q LCY 2 MRG BASEINST+4B7, Q←AR
	MCONT=3,BL=12,SSP=1,MS=2,TCX=1,TSPY=1,TXW=1,LQY=1,LRN=3,MC=1,C=-37776400
// 343:  ENDA3:     Q←M AND Q LCY 8, R0←E1
	BL=10,MS=5,TYW=1,LQX=1,LR0=1,TE1Y=1
// 344:  DGOTO K←Q LCY 2 MRG BASEINST+2B7, Q←AR
	MCONT=3,BL=12,SSP=1,MS=2,TCX=1,TSPY=1,TXW=1,LQY=1,LRN=3,MC=1,DGO=1,C=20001400
// 345:  M←Z, S←P
// 
//   ARRAY INDIRECT ADDRESSING WITH LEB=1
// 
	RRN=1,BR=14,THY=1,TYW=1,LMX=1,LRN=2
// 346:  IAA3:      Q←7776B4, IR←R0, DGOTO IAA5
	TCX=1,THY=1,TYW=1,LQX=1,LRN=4,MC=1,DGO=1,B=171,C=-20000
// 347:  Q←NOT Q AND M, S←R0←S+1, DGOTO IAA4 IF NR0[2]
// 
// 
//   ENTRY TO THE MAIN INSTRUCTION LOOP AT AN ARBITRARY ADDRESS
//   ADDRESS IS IN R0,P AND Z; TO, SP AND 940 MODE ARE CHECKED
//   NOTE THAT THE FLAGS ARE PRESUMED TO BE CLEARED
// 
	RRN=2,BL=4,IHR=1,THY=1,TYW=1,LQX=1,LRN=2,LR0=1,MC=25,DGO=1,B=173
// 350:  NX5:       MFETCH, R0←E1, .VCY, GOTO PAGEF IF Y<0
	MS=34,TYW=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 351:  R0+1, TAKE, DGOTO NX3
	MS=75,IHR=1,THY=1,MC=20,DGO=1,B=36
// 352:  R6←M, Q←7B7, SSOURCE, GOTO NX4 IF INTRPT
// 
//   POP-S EXECUTE AS A BLL $:G[0] WITH THE OPCODE IN IR.
//   THE EFFECTIVE ADDRESS WILL BE CALCULATED IN THEBLL CODE.
//   (SPEC=1, MCAL=0)
// 
	BL=14,MS=52,TCY=1,TXW=1,LQY=1,LRN=6,MC=41,B=31,C=-10000000
// 353:  POP:       POPW←M, Q←77B5, SETC
	BL=14,SSP=24,MS=35,TCY=1,LQY=1,LSPX=1,C=7700000
// 354:  M←M AND Q LCY 8, S←R0←GR
	BL=10,SSP=10,MS=5,TSPY=1,TYW=1,LMX=1,LRN=2,LR0=1
// 355:  IR←M LCY 1, CALL IA
	MCONT=1,BL=14,MS=1,TXW=1,LRN=4,MC=20,B=101
// 356:  R6←R0, Z←0, GOTO TI IF A
	THY=1,TYW=1,LZX=1,LRN=6,MC=33,B=1400
// 357:  MFETCH, .VCY, R0←E1, GOTO PAGEF IF Y<0
	MS=34,TYW=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 360:  SETBB, Q←GR, DGOTO BLL1
	SSP=10,MS=60,TSPY=1,LQY=1,MC=1,DGO=1,B=12
// 361:  NEWG←Q, Q←77B6
// 
//   IF THERE IS ANYTHING FISHY ABOUT A STORE (PRECISELY
//     IF R0[2]=1 OR A=1 OR B=1 OR D=1), THE FOLLOWING
//     CODE IS ENTERED:
// 
	BL=12,SSP=25,TCY=1,LQY=1,LSPX=1,C=-1000000
// 362:  STRFLD:    Q←MASK, GOTO TI IF A
	SSP=15,TSPY=1,LQY=1,MC=33,B=1400
// 363:  M←WORD, Z←M AND Q
	BL=10,SSP=14,TSPY=1,LMY=1,LZX=1
// 364:  Z←SHIFT, M←M AND NOT Q ! Z, GOTO ROIA IF D
	BR=14,BL=4,SSP=13,TSPY=1,LMX=1,LZY=1,MC=47,B=372
// 365:  M←M LCL Z, R0, GOTO CSTORE IF STERR, .VCY
	BL=14,MS=11,THY=1,LMX=1,MC=32,VCY=1,B=701
// 366:  M←M LCH Z, DGOTO NX2
	BL=14,MS=12,LMX=1,MC=1,DGO=1,B=35
// 367:  STORE, Z←P←P+1
// 
//   VARIOUS TRAPS IN THE ADDRESSING MECHANISM.
//     IR←TRAP NUMBER, Q←PARAMETER FOR THE TRAP.
// 
	RRN=1,MS=42,IHR=1,THY=1,TYW=1,LZY=1,LRN=1
// 370:  IATRAP:    IR←X←5, Q←S, GOTO RDTRAP
	RRN=2,TCX=1,THY=1,TXW=1,LQY=1,LRN=4,MC=1,B=1041,C=5
// 371:  IATRP:     IR←X←5, Q←S, GOTO ABE1
	RRN=2,TCX=1,THY=1,TXW=1,LQY=1,LRN=4,MC=20,B=375,C=5
// 372:  ROIA:      IR←X←4, DGOTO RDTRAP
	TCX=1,TXW=1,LRN=4,MC=1,DGO=1,B=1041,C=4
// 373:  Q←ROIAD
	SSP=16,TSPY=1,LQY=1
// 374:  ABE:       IR←X←1, Q←S
	RRN=2,LOC=1,THY=1,TXW=1,TAX=1,LQY=1,LRN=4
// 375:  ABE1:      Q←Q-1, GOTO RDTRAP
	BR=17,BL=12,TAX=1,LQX=1,MC=20,VCY=1,B=1041
// 376:

// 377:   CALL 1776B
	MCONT=1,MC=20,B=1776
