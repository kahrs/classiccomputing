.fields
	MC = 5:0
	MCONT = 7:6
	B = 17:8
	C = 41:18
	IHR = 42
	TCX = 43
	TCY = 44
	TSPY = 45
	THY = 46
	TXW = 47
	TYW = 48
	TAX = 49
	LOC = 50
	SSP = 56:51
	TOSY = 57
	LR0 = 58
	LSPX = 59
	MS = 65:60
	RRN = 68:66
	LRN = 71:69
	LMX = 72
	LMY = 73
	LQX = 74
	LQY = 75
	LZX = 76
	LZY = 77
	BL = 81:78
	BR = 85:82
	VCY = 86
	DGO = 87
	TE1Y = 88
	TE2Y = 89
.code
// 
// 
// 
// 
//   START OF THE CPU MICROCODE..

// 0:  GOTO RSET1, E1
	MC=1,TE1Y=1,B=1106
// 1:  P←Z←0, GOTO NX2
// 
// 
// 
//   THE FOLLOWING ACTIONS IMPLEMENT REL (TAG=7)
//     ADDRESSING MODE.  TABLE BASEREL IS INDEXED
//     EITHER WITH W[10,11] OR IAW[6,8].  TABLE
//     BASEREL1 IS INDEXED WITH W[10,12] OR IAW[7,9].
//     NOTE THAT BBASEREL = ABASEREL LCY1
//     Z CONTAINS A MASK FOR THE CONSTANT DISPLACEMENT
	TXW=1,LZX=1,LRN=1,MC=20,B=35
// 2:  XIANREL:   Z←R0, R0←Z
	BR=14,THY=1,TXW=1,LZY=1,LR0=1
// 3:  Z←IR, DGOTO Z
	MCONT=3,RRN=4,BR=14,THY=1,LZY=1,MC=20,DGO=1
// 4:  Z←Q+Z, Q←R0, DGOTO ENDA1
	BR=14,BL=12,THY=1,TAX=1,LQY=1,LZX=1,MC=1,DGO=1,VCY=1,B=337
// 5:  XIIANREL:  Z←R0, R0←Z
	BR=14,THY=1,TXW=1,LZY=1,LR0=1
// 6:  Z←IR, DGOTO Z
	MCONT=3,RRN=4,BR=14,THY=1,LZY=1,MC=1,DGO=1
// 7:  Z←Q+Z, Q←R0, DGOTO IA
	BR=14,BL=12,THY=1,TAX=1,LQY=1,LZX=1,MC=20,DGO=1,VCY=1,B=101
// 10:  ABASEREL:  Z←LR, Q←Z, DGOTO ENDA1
	BR=14,SSP=7,TSPY=1,LQX=1,LZY=1,MC=1,DGO=1,B=337
// 11:  Z←S, Q←Z, DGOTO ENDA1
	RRN=2,BR=14,THY=1,LQX=1,LZY=1,MC=20,DGO=1,B=337
// 12:  Z←S, Q←Z, DGOTO IA
	RRN=2,BR=14,THY=1,LQX=1,LZY=1,MC=1,DGO=1,B=101
// 13:  Q←NOT M MRG 77774000B, Z←IR, SETA, DGOTO ENDA IF NM[13]
	RRN=4,BL=3,MS=30,TCX=1,THY=1,LQX=1,LZY=1,MC=40,DGO=1,B=336,C=-4000
// 14:  Q←LR, GOTO XIANREL
	SSP=7,TSPY=1,LQY=1,MC=1,B=2
// 15:  Q←S, GOTO XIANREL
	RRN=2,THY=1,LQY=1,MC=20,B=2
// 16:  Q←S, GOTO XIIANREL
	RRN=2,THY=1,LQY=1,MC=1,B=5
// 17:  Q←NOT M MRG 77774000B, Z←IR, SETA, DGOTO ENDA IF NM[13]
	RRN=4,BL=3,MS=30,TCX=1,THY=1,LQX=1,LZY=1,MC=40,DGO=1,B=336,C=-4000
// 20:  BBASEREL:  R0←M AND Q+Z, M←R6, RETURN IF C
	MCONT=2,RRN=6,BR=14,BL=10,THY=1,TXW=1,TAX=1,LMY=1,LR0=1,MC=35,VCY=1
// 21:  S←R0←M AND Q+Z, GOTO IA
	BR=14,BL=10,TXW=1,TAX=1,LRN=2,LR0=1,MC=20,VCY=1,B=101
// 22:  R0←M AND Q+Z, M←R6, RETURN IF C
	MCONT=2,RRN=6,BR=14,BL=10,THY=1,TXW=1,TAX=1,LMY=1,LR0=1,MC=35,VCY=1
// 23:  R0←M OR NOT Q+Z,M←R6,RETURN IF C
	MCONT=2,RRN=6,BR=14,BL=15,THY=1,TXW=1,TAX=1,LMY=1,LR0=1,MC=35,VCY=1
// 24:  S←R0←M AND Q+Z
	BR=14,BL=10,TXW=1,TAX=1,LRN=2,LR0=1,VCY=1
// 25:  S←R0←M OR NOT Q+Z
	BR=14,BL=15,TXW=1,TAX=1,LRN=2,LR0=1,VCY=1
// 26:  Q←R0← NOT Q+Z, Z←77774B3, GOTO IMX1 IF M[13]
	BR=14,BL=5,TCY=1,TXW=1,TAX=1,LQX=1,LZY=1,LR0=1,MC=75,VCY=1,B=30,C=-4000
// 27:  Q←R0← NOT Q, Z←77774000B, DGOTO ENDA IF M[13]
	BL=5,TCY=1,TXW=1,LQX=1,LZY=1,LR0=1,MC=75,DGO=1,B=336,C=-4000
// 30:  IMX1:      R0←Q+Z, GOTO ENDA
// 
//   START OF THE MAIN INSTRUCTION LOOP:
//     SOME INSTRUCTIONS INCLUDE NX1 AND RETURN TO NX2. JUMPS
//     RETURN TO NX3, LOADS RETURNS TO NX3.
	BR=14,BL=12,TXW=1,TAX=1,LR0=1,MC=1,VCY=1,B=336
// 31:  NX4:       R0←P+1, GOTO T940 IF INTRPT2
	RRN=1,IHR=1,THY=1,TYW=1,LR0=1,MC=65,B=1056
// 32:  NX6:       Q←7B7, MAP, DGOTO NX3
	MS=37,TCX=1,LQX=1,MC=1,DGO=1,B=36,C=-10000000
// 33:  R0←E1, TAKE, GOTO PAGEF IF Y<0
	MS=75,TYW=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 34:  NX1:       Z←P←P+1, GOTO NY2 IF M940
	RRN=1,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=43,B=1153
// 35:  NX2:   R6←M←NI, Q←7B7, SABCDE0, GOTO NX4 IF INTRPT, .TSPY←0
	SSP=50,MS=33,TCX=1,TYW=1,LMY=1,LQX=1,LRN=6,MC=41,B=31,C=-10000000
// 36:  NX3:       IR←XR, DGOTO M AND Q LCY 4 MRG BASEAD
	MCONT=3,BL=10,SSP=6,MS=4,TCX=1,TSPY=1,TYW=1,LRN=4,MC=1,DGO=1,C=40
// 37:  Q←ILIM←37777B, S←P, GOTO POP IF M[9]
//   DISPATCH ON TAG
//     M CONTAINS W, S CONTAINS THE SOURCE OF W. Q=37777B, ILIM=0
// 
	RRN=1,SSP=20,TCX=1,THY=1,TYW=1,LQX=1,LRN=2,LSPX=1,MC=71,B=353,C=37777
// 40:  BASEAD:    Z←GR, DGOTO ENDA1
	SSP=10,TSPY=1,LZY=1,MC=1,DGO=1,B=337
// 41:  R0←M AND Q+Z, RETURN IF C
	MCONT=2,BR=14,BL=10,TXW=1,TAX=1,LR0=1,MC=35,VCY=1
// 42:  Z←GR, DGOTO IA
	SSP=10,TSPY=1,LZY=1,MC=1,DGO=1,B=101
// 43:  S←R0←M AND Q+Z
	BR=14,BL=10,TXW=1,TAX=1,LRN=2,LR0=1,VCY=1
// 44:  Z←IR, DGOTO ENDA1
	RRN=4,THY=1,LZY=1,MC=1,DGO=1,B=337
// 45:  R0←M AND Q+Z, RETURN IF C
	MCONT=2,BR=14,BL=10,TXW=1,TAX=1,LR0=1,MC=35,VCY=1
// 46:  M←M LCY 16, Q←77B, DGOTO BX1
	BL=14,MS=7,TCY=1,LMX=1,LQY=1,MC=1,DGO=1,B=321,C=77
// 47:  Z←M AND Q, Q←37B, GOTO BXIR IF LB=0
	BL=10,TCY=1,LQY=1,LZX=1,MC=22,B=334,C=37
// 50:  Q←377B, DGOTO PD1
	TCX=1,LQX=1,MC=1,DGO=1,B=310,C=377
// 51:  Z←M AND Q, Q←177B, GOTO PDIR IF LB=0
	BL=10,TCY=1,LQY=1,LZX=1,MC=22,B=237,C=177
// 52:  Q←377B, SETA, DGOTO PD1
	MS=30,TCX=1,LQX=1,MC=1,DGO=1,B=310,C=377
// 53:  Z←M AND Q, Q←177B, GOTO PDIR IF LB=0
	BL=10,TCY=1,LQY=1,LZX=1,MC=22,B=237,C=177
// 54:  Q←377B, DGOTO BXD1
	TCX=1,LQX=1,MC=1,DGO=1,B=126,C=377
// 55:  Z←M AND Q, Q←177B, GOTO BXDIR IF LB=0
	BL=10,TCY=1,LQY=1,LZX=1,MC=22,B=177,C=177
// 56:  DGOTO Q←M AND Q LCY 12 MRG ABASEREL
	MCONT=3,BL=10,MS=6,TCX=1,LQX=1,MC=1,DGO=1,C=10
// 57:  DGOTO Q LCY 1, Z←3777B
// 
//   THE FOLLOWING TABLE IS INDEXED WITH THE TAG FIELD OF
//   AN IAW.  (IAW[2,4])
//   R0 AND Z ARE INITIALIZED FOR THE REL (7) ACTION.
//   ROIAD IS USED BY TRAP ROIA
	MCONT=3,BL=12,MS=1,TCY=1,LZY=1,MC=20,DGO=1,C=3777
// 60:  IAN:       Q←77B6, DGOTO ENDA1
	TCX=1,LQX=1,MC=1,DGO=1,B=337,C=-1000000
// 61:  R0←M AND NOT Q, RETURN IF C, M←R6
	MCONT=2,RRN=6,BL=4,THY=1,TXW=1,LMY=1,LR0=1,MC=35
// 62:  Q←77B6, DGOTO IA
	TCX=1,LQX=1,MC=1,DGO=1,B=101,C=-1000000
// 63:  S←R0←M AND NOT Q
	BL=4,TXW=1,LRN=2,LR0=1
// 64:  Z←IR, Q←77B6, DGOTO ENDA1
	RRN=4,TCX=1,THY=1,LQX=1,LZY=1,MC=1,DGO=1,B=337,C=-1000000
// 65:  R0←M AND NOT Q+Z, RETURN IF C, M←R6
	MCONT=2,RRN=6,BR=14,BL=4,THY=1,TXW=1,TAX=1,LMY=1,LR0=1,MC=35,VCY=1
// 66:  M←M LCY 16, Q←77B, DGOTO BX1
	BL=14,MS=7,TCY=1,LMX=1,LQY=1,MC=1,DGO=1,B=321,C=77
// 67:  Z←M AND Q, Q←37B, GOTO BXIR IF LB=0
	BL=10,TCY=1,LQY=1,LZX=1,MC=22,B=334,C=37
// 70:  Q←77B6, SETD, DGOTO ENDA1
	MS=36,TCX=1,LQX=1,MC=1,DGO=1,B=337,C=-1000000
// 71:  ROIAD←R0←M AND NOT Q, M←R6, RETURN IF C
	MCONT=2,RRN=6,BL=4,SSP=16,THY=1,TXW=1,LMY=1,LR0=1,LSPX=1,MC=35
// 72:  Z←IR, Q←77B6, SETD, DGOTO ENDA1
	RRN=4,MS=36,TCX=1,THY=1,LQX=1,LZY=1,MC=1,DGO=1,B=337,C=-1000000
// 73:  ROIAD←R0←M AND NOT Q+Z, M←R6, RETURN IF C
	MCONT=2,RRN=6,BR=14,BL=4,SSP=16,THY=1,TXW=1,TAX=1,LMY=1,LR0=1,LSPX=1,MC=35,VCY=1
// 74:  Q←377B, DGOTO BXD1
	TCX=1,LQX=1,MC=1,DGO=1,B=126,C=377
// 75:  Z←M AND Q, Q←177B, GOTO BXDIR IF LB=0
	BL=10,TCY=1,LQY=1,LZX=1,MC=22,B=177,C=177
// 76:  M←M LCY 8, Q←60000003B
	BL=14,MS=5,TCY=1,LMX=1,LQY=1,C=-17777775
// 77:  DGOTO M←M AND Q LCY 1 MRG ABASEREL
	MCONT=3,BL=10,MS=1,TCX=1,LMX=1,MC=20,DGO=1,C=10
// 100:  M←R0, DGOTO R0←M AND Q LCY 1 MRG BBASEREL
// 
//   START OF THE PROCEDURE IA().
//     THE PROCEDURE CAN BE CALLED BY THE MICRO INSTRUCTION:
//       SETC, CALL IASUB, ILIM←0
//     M HAS TO CONTAIN THE IAW. S=SOURCE OF IAW
// 
	MCONT=3,BL=10,MS=1,TCX=1,THY=1,TXW=1,LMY=1,LR0=1,MC=1,DGO=1,C=20
// 101:  IA:        MAPSS,.VCY, R0←E1, GOTO PAGEF IF Y<0
	MS=51,TYW=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 102:  IA1:       FETCH
	MS=44
// 103:  IASUB:     Z←ILIM, Q←2B6
	SSP=20,TCX=1,TSPY=1,LQX=1,LZY=1,C=2000000
// 104:  Z←ILIM←X←Z+Q, Q←6B7
	BR=14,BL=12,SSP=20,TCY=1,TAX=1,LQY=1,LZX=1,LSPX=1,VCY=1,C=-20000000
// 105:  DGOTO M AND Q LCY 3 MRG *+3 IF Z>=0
	MCONT=3,BL=10,MS=3,TCX=1,MC=5,DGO=1,C=110
// 106:  Q←NOT M LCY 2 MRG 7777777B
	BL=3,MS=2,TCX=1,LQX=1,C=7777777
// 107:  IR←X←11, Q←S, GOTO FIXTRP
// 
//   TABLE FOR THE 4 INDIRECT ADDRESSING TYPES FOLLOWS:
// 
	RRN=2,TCX=1,THY=1,TXW=1,LQY=1,LRN=4,MC=20,B=1046,C=13
// 110:  BASEIA:    DGOTO NOT Q LCY4 MRG IAN
	MCONT=3,BL=5,MS=4,TCX=1,MC=1,DGO=1,C=60
// 111:  R0←M, Z←37777B, GOTO IATRAP IF M[5]
	BL=14,TCY=1,TXW=1,LZY=1,LR0=1,MC=50,B=370,C=37777
// 112:  Z←IR, Q←3777B, DGOTO IAF1
	RRN=4,TCX=1,THY=1,LQX=1,LZY=1,MC=1,DGO=1,B=262,C=3777
// 113:  Q←M AND Q, DGOTO IAF1 IF M[13]
	BL=10,LQX=1,MC=75,DGO=1,B=262
// 114:  S←R0←M, Q←74B6, DGOTO IAS1
	BL=14,TCY=1,TXW=1,LQY=1,LRN=2,LR0=1,MC=1,DGO=1,B=260,C=-4000000
// 115:  M←M LCY 2
	BL=14,MS=2,LMX=1
// 116:  R0←M, Q←774B5, DGOTO IAA3 IF M[4]
	BL=14,TCY=1,TXW=1,LQY=1,LR0=1,MC=74,DGO=1,B=346,C=-400000
// 117:  Q←M AND NOT Q, Z←IR, GOTO IAA0 IF Y<0, .VCY
//   THE LARGE ELEMENT BIT (LEB) IS 0.
	RRN=4,BL=4,THY=1,LQX=1,LZY=1,MC=53,VCY=1,B=122
// 120:  IR←R0, M←M LCY 4, DGOTO IAA1 IF NR0[2]
	BL=14,MS=4,THY=1,TYW=1,LMX=1,LRN=4,MC=25,DGO=1,B=123
// 121:  R0←Q-Z, Q←3B7
	BR=3,BL=12,LOC=1,TCY=1,TXW=1,TAX=1,LQY=1,LR0=1,VCY=1,C=30000000
// 122:  IAA0:      R0←Z←Z-1, DGOTO ABE IF R0<0
	BR=14,BL=17,TXW=1,TAX=1,LZX=1,LR0=1,MC=11,DGO=1,VCY=1,B=374
// 123:  IAA1:      S←R0←S+1, Q←NOT M AND Q LCY 3 MRG *+65, GOTO ABE IF R0<0
	RRN=2,BL=2,MS=3,IHR=1,TCX=1,THY=1,TYW=1,LQX=1,LRN=2,LR0=1,MC=11,B=374,C=224
// 124:  MAPSS, .VCY, R0←E1, DGOTO Q
	MCONT=3,BL=12,MS=51,TYW=1,LR0=1,MC=1,DGO=1,VCY=1,TE1Y=1
// 125:  Q←Z, FETCH, GOTO PAGEF IF R0<0
//   BXD ADDRESSING.  THE LAST INSTRUCTION IS A DUMMY
	BR=14,MS=44,LQX=1,MC=11,B=700
// 126:  BXD1:      Q←Q AND Z, Z←LR, DGOTO BXD2 IF NZ[16]
	BR=10,SSP=7,TSPY=1,LQX=1,LZY=1,MC=10,DGO=1,B=127
// 127:  BXD2:      R0←Z+Q, Z←GR
	BR=14,BL=12,SSP=10,TSPY=1,TXW=1,TAX=1,LZY=1,LR0=1,VCY=1
// 130:  MFETCH, Q←M, .VCY, R0←E1, GOTO PAGEF IF Y<0
	BL=14,MS=34,TYW=1,LQX=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 131:  BXD3:      Z←37400B
	TCX=1,LZX=1,C=37400
// 132:  Q←Q AND Z
	BR=10,LQX=1
// 133:  Z←Q LCY 16
	BL=12,MS=7,LZX=1
// 134:  S←R0←IR, Z← NOT Z, DGOTO BXD4 IF Z[18]
	RRN=4,BR=3,THY=1,TYW=1,LZX=1,LRN=2,LR0=1,MC=14,DGO=1,B=135
// 135:  BXD4:      M←IR←M+ NOT Z, Z←77B, DGOTO IA IF Z[18]
	BR=3,BL=14,TCY=1,TXW=1,TAX=1,LMX=1,LZY=1,LRN=4,MC=14,DGO=1,VCY=1,B=101,C=77
// 136:  R0←R0
	THY=1,TYW=1,LR0=1
// 137:   CALL 1776B
//   MASK TABLE:
//     EXECUTING THE N-TH INSTRUCTION IN THIS TABLE
//     WILL PUT 2↑N-1 INTO Q
// 
//   THE MICROSTORE ADDRESS IS 140B NOW
//                                               WIDTH IN BITS
	MCONT=1,MC=20,B=1776
// 140:  Q←0
	LQX=1
// 141:  Q←1B
	LOC=1,TAX=1,LQX=1
// 142:  Q←3B
	TCX=1,LQX=1,C=3
// 143:  Q←7B
	TCX=1,LQX=1,C=7
// 144:  Q←17B
	TCX=1,LQX=1,C=17
// 145:  Q←37B
	TCX=1,LQX=1,C=37
// 146:  Q←77B
	TCX=1,LQX=1,C=77
// 147:  Q←177B
	TCX=1,LQX=1,C=177
// 150:  Q←377B
	TCX=1,LQX=1,C=377
// 151:  Q←777B
	TCX=1,LQX=1,C=777
// 152:  Q←1777B
	TCX=1,LQX=1,C=1777
// 153:  Q←3777B
	TCX=1,LQX=1,C=3777
// 154:  Q←Y←7777B
	TCY=1,LQY=1,C=7777
// 155:  Q←Y←17777B
	TCY=1,LQY=1,C=17777
// 156:  Q←Y←37777B
	TCY=1,LQY=1,C=37777
// 157:  Q←Y←77777B
	TCY=1,LQY=1,C=77777
// 160:  Q←Y←177777B
	TCY=1,LQY=1,C=177777
// 161:  Q←Y←377777B
	TCY=1,LQY=1,C=377777
// 162:  Q←Y←777777B
	TCY=1,LQY=1,C=777777
// 163:  Q←Y←1777777B
	TCY=1,LQY=1,C=1777777
// 164:  Q←Y←3777777B
	TCY=1,LQY=1,C=3777777
// 165:  Q←Y←7777777B
	TCY=1,LQY=1,C=7777777
// 166:  Q←Y←17777777B
	TCY=1,LQY=1,C=17777777
// 167:  Q←Y←37777777B
	TCY=1,LQY=1,C=37777777
// 170:  Q←-1
// 
// 
//   ARRAY INDIRECT ADDRESSING WITH LEB=1
//     ( SEE ALSO ENDA-2 )
// 
	BL=17,LQX=1
// 171:  IAA5:      R0←Q-Z,Q←16B4
	BR=3,BL=12,LOC=1,TCY=1,TXW=1,TAX=1,LQY=1,LR0=1,VCY=1,C=160000
// 172:  R0←Z←Z-1,GOTO ABE IF R0<0
	BR=14,BL=17,TXW=1,TAX=1,LZX=1,LR0=1,MC=11,VCY=1,B=374
// 173:  IAA4:      M←NOT M AND Q LCY 3, R0←S, GOTO ABE IF R0<0
	RRN=2,BL=2,MS=3,THY=1,TYW=1,LMX=1,LR0=1,MC=11,B=374
// 174:  MAPSS
	MS=51
// 175:  DGOTO M LCY 8 MRG *+3, R0←E1
	MCONT=3,BL=14,MS=5,TCX=1,TYW=1,LR0=1,MC=20,DGO=1,TE1Y=1,C=200
// 176:  U←Q←Z, FETCH, GOTO PAGEF IF R0<0
// 
//   PART OF BXD CODE
	BR=14,SSP=24,MS=44,LQX=1,LSPX=1,MC=11,B=700
// 177:  BXDIR:     Q←M, M←0, GOTO BXD3
// 
// 
//   ARRAY MULTIPLIER TABLE 1.  THE TABLE IS ENTERED
//     AT BASE + NOT IAW[8,10] IF LEB=1. Z IS IR-LB
// 
	BL=14,LMY=1,LQX=1,MC=20,B=131
// 200:  AM1BASE:   Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 201:  Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 202:  Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 203:  Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 204:  Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 205:  Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 206:  Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 207:  Q←IR MRG 76177777B, R0←Q
//   DISPATCH TO MULTIPLY BY IAW[5,7]
	RRN=4,BL=12,TCY=1,THY=1,TXW=1,LQY=1,LR0=1,C=-1600001
// 210:  DGOTO NOT Q LCY 8 MRG *+8, Q←U
	MCONT=3,BL=5,SSP=24,MS=5,TCX=1,TSPY=1,LQY=1,MC=1,DGO=1,C=220
// 211:  Q←R0, Z←Q LCY 3
// 
//   PART OF FIELD INDIRECTION CODE
// 
	BL=12,MS=3,THY=1,LQY=1,LZX=1
// 212:  IAF6:      M←IR, R0←Z, RETURN
// 
//   STRING INDIRECT ADDRESSING.  NOTE HOW CHECKING
//     FOR MAPPING ERRORS OCCURS AT IASTR.  THE PROPER
//     FIELD DESCRIPTORS ARE UNPACKED FROM A TABLE
//     INDEXED BY IAW[2,5].  (CSIZE CONCAT CPOS)
// 
	MCONT=2,RRN=4,BR=14,THY=1,TXW=1,LMY=1,LR0=1,MC=1
// 213:  IAS4:      FETCH, DGOTO IAS2 IF R0>=0
	MS=44,MC=12,DGO=1,B=214
// 214:  IAS2:      SHIFT←Q, Z←7617400B
	BL=12,SSP=13,TCY=1,LZY=1,LSPX=1,C=7617400
// 215:  Q←Q AND Z
	BR=10,LQX=1
// 216:  DGOTO Q LCY 8 MRG BASEMSK
	MCONT=3,BL=12,MS=5,TCX=1,MC=1,DGO=1,C=140
// 217:  Z←Q LCY 16, DGOTO IAS3
// 
//   ARRAY MULTIPLIER TABLE 2.  THE TABLE IS ENTERED
//     AT BASE + NOT IAW[5,7] IF LEB=1 OTHERWISE
//     AT BASE + NOT IAW[5,6] +4. Z IS IR-LB
// 
	BL=12,MS=7,LZX=1,MC=20,DGO=1,B=232
// 220:  AM2BASE:   Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 221:  Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 222:  Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 223:  Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 224:  AM3BASE:   Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 225:  Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 226:  Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 227:  Z←IR,IR←Q
	RRN=4,BL=12,THY=1,TXW=1,LZY=1,LRN=4
// 230:  Q←NOT M LCY 2 MRG 4000177B, R0←R6, DGOTO BASEIA
	RRN=6,BL=3,MS=2,TCX=1,THY=1,TYW=1,LQX=1,LR0=1,MC=1,DGO=1,B=110,C=4000177
// 231:  GOTO IATRP IF Z[3]#R0=LAX
// 
//   CONCLUSION OF STRING INDIRECT ADDRESSING.
// 
	MC=55,B=371
// 232:  IAS3:      M←M LCL Z
	BL=14,MS=11,LMX=1
// 233:  M←WORD←M LCH Z, DGOTO IAF3
	BL=14,SSP=14,MS=12,LMX=1,LSPX=1,MC=20,DGO=1,B=277
// 234:  IR←M AND Q, M←R6
	RRN=6,BL=10,THY=1,TXW=1,LMY=1,LRN=4
// 235:  IASTR:     GOTO PAGEF IF R0<0
	MC=11,B=700
// 236:  GOTO TI
//   PART OF PD CODE
// 
	MC=1,B=1400
// 237:  PDIR:      Q←M, M←IR, GOTO PD3
// 
//   TABLE TO DESCRIBE STRING CHARACTERS.  THE TABLE
//     CONSISTS OF 16 ENTRIES EACH WITH 3, 8 BITS WIDE FIELDS.
//                              CSIZE,CPOS    SIZE/POS/SHIFT
	RRN=4,BL=14,THY=1,LMY=1,LQX=1,MC=20,B=313
// 240:  BASECHAR:  Q←1403022B
	TCX=1,LQX=1,C=1403022
// 241:  Q←1406014B
	TCX=1,LQX=1,C=1406014
// 242:  Q←1411006B
	TCX=1,LQX=1,C=1411006
// 243:  Q←1400000B
	TCX=1,LQX=1,C=1400000
// 244:  Q←2004020B
	TCX=1,LQX=1,C=2004020
// 245:  Q←2010010B
	TCX=1,LQX=1,C=2010010
// 246:  Q←2000000B
	TCX=1,LQX=1,C=2000000
// 247:  GOTO IASTR
	MC=20,B=235
// 250:  Q←3006014B
	TCX=1,LQX=1,C=3006014
// 251:  Q←3000000B
	TCX=1,LQX=1,C=3000000
// 252:  GOTO IASTR
	MC=1,B=235
// 253:  GOTO IASTR
	MC=20,B=235
// 254:  Q←6000000B
	TCX=1,LQX=1,C=6000000
// 255:  GOTO IASTR
	MC=20,B=235
// 256:  GOTO IASTR
	MC=1,B=235
// 257:  GOTO IASTR
// 
//   STRING INDIRECT ADDRESSING (SEE ALSO IAS4)
// 
	MC=20,B=235
// 260:  IAS1:      MAP, DGOTO IAS4
	MS=37,MC=1,DGO=1,B=213
// 261:  R0←E1, DGOTO M AND Q LCY 4 MRG BASECHAR
// 
//   FIELD INDIRECT ADDRESSING
//     Z=IR, M=IAW, Q=DISP
// 
	MCONT=3,BL=10,MS=4,TCX=1,TYW=1,LR0=1,MC=20,DGO=1,TE1Y=1,C=240
// 262:  IAF1:      Q←S←R0←Z+Q, Z←77774000B
	BR=14,BL=12,TCY=1,TXW=1,TAX=1,LQX=1,LZY=1,LRN=2,LR0=1,VCY=1,C=-4000
// 263:  MFETCH, Q←M, .VCY, R0←E1, GOTO PAGEF IF Y<0
	BL=14,MS=34,TYW=1,LQX=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 264:  U←Q←Q LCY 8, Z←37B
	BL=12,SSP=24,MS=5,TCY=1,LQX=1,LZY=1,LSPX=1,C=37
// 265:  IR←Z←Q AND Z
	BR=10,TXW=1,LZX=1,LRN=4
// 266:  Q←Q LCY 4
	BL=12,MS=4,LQX=1
// 267:  Q←NOT Q LCY 1 MRG 77777740B
	BL=5,MS=1,TCX=1,LQX=1,C=-40
// 270:  Z←NOT Q+Z, Q←24
	BR=14,BL=5,TCY=1,TAX=1,LQY=1,LZX=1,VCY=1,C=30
// 271:  SHIFT←IR←Q-Z, Q←IR
	RRN=4,BR=3,BL=12,SSP=13,LOC=1,THY=1,TXW=1,TAX=1,LQY=1,LRN=4,LSPX=1,VCY=1
// 272:  IR, GOTO TI IF Y<0
	RRN=4,THY=1,MC=53,VCY=1,B=1400
// 273:  DGOTO Q MRG BASEMSK
	MCONT=3,BL=12,TCX=1,MC=20,DGO=1,C=140
// 274:  M←M LCL Z, DGOTO IAF2, IR←U
	BL=14,SSP=24,MS=11,TSPY=1,TYW=1,LMX=1,LRN=4,MC=1,DGO=1,B=275
// 275:  IAF2:      WORD←M←M LCH Z, Z←IR
	RRN=4,BL=14,SSP=14,MS=12,THY=1,LMX=1,LZY=1,LSPX=1
// 276:  IR←M AND Q, M←R6, DGOTO IAF5 IF Z[18]
	RRN=6,BL=10,THY=1,TXW=1,LMY=1,LRN=4,MC=14,DGO=1,B=303
// 277:  IAF3:      MASK←Q, Z←S, SETB
//   THE FOLLOWING IS A COPY OF THE ENDA CODE
	RRN=2,BL=12,SSP=15,MS=26,THY=1,LZY=1,LSPX=1
// 300:  IAF4:      M←M LCY 8, Q←40000037B, GOTO IAF6 IF C
	BL=14,MS=5,TCY=1,LMX=1,LQY=1,MC=35,B=212,C=-37777741
// 301:  DGOTO K←Q AND M LCY 2 MRG BASEINST, M←IR
	MCONT=3,RRN=4,BL=10,MS=2,TCX=1,THY=1,TXW=1,LMY=1,LRN=3,MC=20,DGO=1,C=1400
// 302:  Q←AR, R6←Z
//   SE=1
	BR=14,SSP=1,TSPY=1,TXW=1,LQY=1,LRN=6
// 303:  IAF5:      M←IR
	RRN=4,THY=1,LMY=1
// 304:  M←M LCY 1
	BL=14,MS=1,LMX=1
// 305:  M←NOT Q AND M, DGOTO IAF4 IF LB=0
	BL=4,LMX=1,MC=22,DGO=1,B=300
// 306:  M←R6, M, DGOTO IAF4 IF LB#0
	RRN=6,BL=14,THY=1,LMY=1,MC=23,DGO=1,B=300
// 307:  IR←NOT Q, IR, .TYW
// 
//   PD OR PDI ADDRESSING MODE (A IS SET IF PDI)
//     NOTE THE TRICK AT PD4.  BIT 18 IS 0 IN -64.
	RRN=4,BL=5,THY=1,TXW=1,TYW=1,LRN=4
// 310:  PD1:       Q←Z AND Q, Z←LR, DGOTO PD2 IF NZ[16]
	BR=10,SSP=7,TSPY=1,LQX=1,LZY=1,MC=10,DGO=1,B=311
// 311:  PD2:       R0←Z+Q,Z←GR
	BR=14,BL=12,SSP=10,TSPY=1,TXW=1,TAX=1,LZY=1,LR0=1,VCY=1
// 312:  MFETCH, Q←M, .VCY, R0←E1, GOTO PAGEF IF Y<0
	BL=14,MS=34,TYW=1,LQX=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 313:  PD3:       Z←37400B
	TCX=1,LZX=1,C=37400
// 314:  Q←Q AND Z
	BR=10,LQX=1
// 315:  Z←Q LCY 16
	BL=12,MS=7,LZX=1
// 316:  Z← NOT Z, DGOTO PD4 IF Z[18]
	BR=3,LZX=1,MC=14,DGO=1,B=317
// 317:  PD4:       M←S←R0←M+ NOT Z, Z←77B, DGOTO ENDA IF Z[18]
	BR=3,BL=14,TCY=1,TXW=1,TAX=1,LMX=1,LZY=1,LRN=2,LR0=1,MC=14,DGO=1,VCY=1,B=336,C=77
// 320:  CLEARA, GOTO IA IF A
// 
//   BX ADDRESSING MODE (TAG=3)
// 
	MS=50,MC=33,B=101
// 321:  BX1:       Q←Q AND Z, Z←LR, DGOTO BX2 IF NZ[18]
	BR=10,SSP=7,TSPY=1,LQX=1,LZY=1,MC=15,DGO=1,B=322
// 322:  BX2:       R0←Q+Z, Z←GR
	BR=14,BL=12,SSP=10,TSPY=1,TXW=1,TAX=1,LZY=1,LR0=1,VCY=1
// 323:  Q←M LCY 8
	BL=14,MS=5,LQX=1
// 324:  MFETCH, .VCY, R0←E1, GOTO PAGEF IF Y<0
	MS=34,TYW=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 325:  BX3:       Z←377B
	TCX=1,LZX=1,C=377
// 326:  Z←Q AND Z, Q←177B
	BR=10,TCY=1,LQY=1,LZX=1,C=177
// 327:  GOTO BXIR1 IF Z=0
	MC=2,B=335
// 330:  Q←Q AND Z,Z←LR, DGOTO BX4 IF NZ[16]
	BR=10,SSP=7,TSPY=1,LQX=1,LZY=1,MC=10,DGO=1,B=331
// 331:  BX4:       S←R0←Q+Z, Z←GR
	BR=14,BL=12,SSP=10,TSPY=1,TXW=1,TAX=1,LZY=1,LRN=2,LR0=1,VCY=1
// 332:  IR←M, DGOTO IA1
	BL=14,TXW=1,LRN=4,MC=1,DGO=1,B=102
// 333:  MAPSS, .VCY, R0←E1, GOTO PAGEF IF Y<0
	MS=51,TYW=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 334:  BXIR:      M←IR, Q←M LCY 8, GOTO BX3
	RRN=4,BL=14,MS=5,THY=1,LMY=1,LQX=1,MC=1,B=325
// 335:  BXIR1:     S←R0←IR, GOTO BX4+1
// 
// 
//   DISPATCH ON THE INSTRUCTION CODE
//     INSTRUCTIONS RECEIVE THE FOLLOWING INFORMATION
//     IN THE REGISTERS:
//       M=OPERAND, UNLESS THE INSTRUCTION IS A STORE
//       R6=Q=Z, UNLESS THE ADDRESS IS IMMEDIATE
//       Q=A REGISTER, R0[2]=PMRO OR NOT DB
//     BIT A IS SET IF THE ADDRESS IS IMMEDIATE, BIT B IF
//     IT CONTAINS A FIELD AND BIT D IF THE ADDRESS
//     IS READ ONLY. (SEE ALSO IAF4)
//     THE SETTINGS OF A AND B ARE ALSO REFLECTED IN
//     K[0] AND K[1]. P IS SAVED IN S IF A IS SET. (SEE BRU1)
// 
	RRN=4,THY=1,TYW=1,LRN=2,LR0=1,MC=20,B=332
// 336:  ENDA:      M←R6, RETURN IF C
	MCONT=2,RRN=6,THY=1,LMY=1,MC=35
// 337:  ENDA1:     Z←R6←R0, Q←77B5, MAP, GOTO ENDA3 IF STINST
	MS=37,TCX=1,THY=1,TYW=1,LQX=1,LZY=1,LRN=6,MC=54,B=343,C=7700000
// 340:  R0←E1, Q←M AND Q, FETCH, GOTO PAGEF IF Y<0
	BL=10,MS=44,TYW=1,LQX=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 341:  Q←Q LCY 8
	BL=12,MS=5,LQX=1
// 342:  GOTO K←Q LCY 2 MRG BASEINST+4B7, Q←AR
	MCONT=3,BL=12,SSP=1,MS=2,TCX=1,TSPY=1,TXW=1,LQY=1,LRN=3,MC=1,C=-37776400
// 343:  ENDA3:     Q←M AND Q LCY 8, R0←E1
	BL=10,MS=5,TYW=1,LQX=1,LR0=1,TE1Y=1
// 344:  DGOTO K←Q LCY 2 MRG BASEINST+2B7, Q←AR
	MCONT=3,BL=12,SSP=1,MS=2,TCX=1,TSPY=1,TXW=1,LQY=1,LRN=3,MC=1,DGO=1,C=20001400
// 345:  M←Z, S←P
// 
//   ARRAY INDIRECT ADDRESSING WITH LEB=1
// 
	RRN=1,BR=14,THY=1,TYW=1,LMX=1,LRN=2
// 346:  IAA3:      Q←7776B4, IR←R0, DGOTO IAA5
	TCX=1,THY=1,TYW=1,LQX=1,LRN=4,MC=1,DGO=1,B=171,C=-20000
// 347:  Q←NOT Q AND M, S←R0←S+1, DGOTO IAA4 IF NR0[2]
// 
// 
//   ENTRY TO THE MAIN INSTRUCTION LOOP AT AN ARBITRARY ADDRESS
//   ADDRESS IS IN R0,P AND Z; TO, SP AND 940 MODE ARE CHECKED
//   NOTE THAT THE FLAGS ARE PRESUMED TO BE CLEARED
// 
	RRN=2,BL=4,IHR=1,THY=1,TYW=1,LQX=1,LRN=2,LR0=1,MC=25,DGO=1,B=173
// 350:  NX5:       MFETCH, R0←E1, .VCY, GOTO PAGEF IF Y<0
	MS=34,TYW=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 351:  R0+1, TAKE, DGOTO NX3
	MS=75,IHR=1,THY=1,MC=20,DGO=1,B=36
// 352:  R6←M, Q←7B7, SSOURCE, GOTO NX4 IF INTRPT
// 
//   POP-S EXECUTE AS A BLL $:G[0] WITH THE OPCODE IN IR.
//   THE EFFECTIVE ADDRESS WILL BE CALCULATED IN THEBLL CODE.
//   (SPEC=1, MCAL=0)
// 
	BL=14,MS=52,TCY=1,TXW=1,LQY=1,LRN=6,MC=41,B=31,C=-10000000
// 353:  POP:       POPW←M, Q←77B5, SETC
	BL=14,SSP=24,MS=35,TCY=1,LQY=1,LSPX=1,C=7700000
// 354:  M←M AND Q LCY 8, S←R0←GR
	BL=10,SSP=10,MS=5,TSPY=1,TYW=1,LMX=1,LRN=2,LR0=1
// 355:  IR←M LCY 1, CALL IA
	MCONT=1,BL=14,MS=1,TXW=1,LRN=4,MC=20,B=101
// 356:  R6←R0, Z←0, GOTO TI IF A
	THY=1,TYW=1,LZX=1,LRN=6,MC=33,B=1400
// 357:  MFETCH, .VCY, R0←E1, GOTO PAGEF IF Y<0
	MS=34,TYW=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 360:  SETBB, Q←GR, DGOTO BLL1
	SSP=10,MS=60,TSPY=1,LQY=1,MC=1,DGO=1,B=12
// 361:  NEWG←Q, Q←77B6
// 
//   IF THERE IS ANYTHING FISHY ABOUT A STORE (PRECISELY
//     IF R0[2]=1 OR A=1 OR B=1 OR D=1), THE FOLLOWING
//     CODE IS ENTERED:
// 
	BL=12,SSP=25,TCY=1,LQY=1,LSPX=1,C=-1000000
// 362:  STRFLD:    Q←MASK, GOTO TI IF A
	SSP=15,TSPY=1,LQY=1,MC=33,B=1400
// 363:  M←WORD, Z←M AND Q
	BL=10,SSP=14,TSPY=1,LMY=1,LZX=1
// 364:  Z←SHIFT, M←M AND NOT Q ! Z, GOTO ROIA IF D
	BR=14,BL=4,SSP=13,TSPY=1,LMX=1,LZY=1,MC=47,B=372
// 365:  M←M LCL Z, R0, GOTO CSTORE IF STERR, .VCY
	BL=14,MS=11,THY=1,LMX=1,MC=32,VCY=1,B=701
// 366:  M←M LCH Z, DGOTO NX2
	BL=14,MS=12,LMX=1,MC=1,DGO=1,B=35
// 367:  STORE, Z←P←P+1
// 
//   VARIOUS TRAPS IN THE ADDRESSING MECHANISM.
//     IR←TRAP NUMBER, Q←PARAMETER FOR THE TRAP.
// 
	RRN=1,MS=42,IHR=1,THY=1,TYW=1,LZY=1,LRN=1
// 370:  IATRAP:    IR←X←5, Q←S, GOTO RDTRAP
	RRN=2,TCX=1,THY=1,TXW=1,LQY=1,LRN=4,MC=1,B=1041,C=5
// 371:  IATRP:     IR←X←5, Q←S, GOTO ABE1
	RRN=2,TCX=1,THY=1,TXW=1,LQY=1,LRN=4,MC=20,B=375,C=5
// 372:  ROIA:      IR←X←4, DGOTO RDTRAP
	TCX=1,TXW=1,LRN=4,MC=1,DGO=1,B=1041,C=4
// 373:  Q←ROIAD
	SSP=16,TSPY=1,LQY=1
// 374:  ABE:       IR←X←1, Q←S
	RRN=2,LOC=1,THY=1,TXW=1,TAX=1,LQY=1,LRN=4
// 375:  ABE1:      Q←Q-1, GOTO RDTRAP
	BR=17,BL=12,TAX=1,LQX=1,MC=20,VCY=1,B=1041
// 376:

// 377:   CALL 1776B
	MCONT=1,MC=20,B=1776
// 
//   SUBROUTINE M←CONTENTS(R0)

// 400:  LODX:      MFETCH, R0←E1, .VCY, DRETURN
	MCONT=2,MS=34,TYW=1,LR0=1,MC=1,DGO=1,VCY=1,TE1Y=1
// 401:  GOTO PAGEF IF R0<0
// 
//   SUBROUTINE CONTENTS(K←K+1)←M
	MC=11,B=700
// 402:  STORX:     R0←K←K+1
	RRN=3,IHR=1,THY=1,TYW=1,LRN=3,LR0=1
// 403:  STOR1:     MAP, .VCY, R0←E1, GOTO CSTORE IF STERR
	MS=37,TYW=1,LR0=1,MC=32,VCY=1,TE1Y=1,B=701
// 404:  STORE, RETURN
// 
//   CHECK MULTIPLE WORD OPERAND
	MCONT=2,MS=42,MC=1
// 405:  DBL:       CLEARA, GOTO TI IF A
	MS=50,MC=33,B=1400
// 406:  FETCH, RETURN
// 
	MCONT=2,MS=44,MC=1
// 407:  TI1:       GOTO TI
// 
	MC=20,B=1400
// 410:  SKIP:       Z←P←P+1, RESETCM, DGOTO NX3
	RRN=1,MS=24,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=1,DGO=1,B=36
// 411:  R6←M←NI, Q←7B7, GOTO NX4 IF INTRPT, .TSPY←0
// 
//   THE SPECIAL CASES IN BRU ARE HANDLED HERE:
//   K[0]= NOT A AND NOT B, K[1]=A
//   NOTE HOW P IS RESTORED IF A TRAP SHOULD OCCUR
// 
	SSP=50,TCX=1,TYW=1,LMY=1,LQX=1,LRN=6,MC=41,B=31,C=-10000000
// 412:  BRUA:      Q←K, GOTO NX4 IF Y<0
	RRN=3,THY=1,LQY=1,MC=53,VCY=1,B=31
// 413:  P←S, Q LCY 1, GOTO TI IF X<0
	RRN=2,BL=12,MS=1,THY=1,TYW=1,LRN=1,MC=17,VCY=1,B=1400
// 414:  R0←P←Z, GOTO NX5
// 
	BR=14,TXW=1,LRN=1,LR0=1,MC=1,B=350
// 415:  EXUA:      DGOTO M AND Q LCY 4 MRG BASEAD, IR←XR
	MCONT=3,BL=10,SSP=6,MS=4,TCX=1,TSPY=1,TYW=1,LRN=4,MC=20,DGO=1,C=40
// 416:  R6←M, Q←37777B, GOTO POP IF M[9]
// 
// 
//   LDD, Q=SR, S=Q+1
// 
	BL=14,TCY=1,TXW=1,LQY=1,LRN=6,MC=71,B=353,C=37777
// 417:  LDD1:      MFETCH, R0←E1, Z←40B, GOTO PAGEF IF Y<0
	MS=34,TCX=1,TYW=1,LZX=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700,C=40
// 420:  RES←AR, Z←Q AND Z, DGOTO NX1
	BR=10,SSP=1,TSPY=1,TYW=1,LZX=1,LRN=5,MC=1,DGO=1,B=34
// 421:  BR←M, R0←S←S+1, GOTO LDD2 IF Z#0
	RRN=2,BL=14,SSP=2,IHR=1,THY=1,TYW=1,LRN=2,LR0=1,LSPX=1,MC=3,B=422
// 422:  LDD2:      MFETCH, R0←E1, .VCY, GOTO PAGEF IF Y<0
	MS=34,TYW=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 423:  CR←M, R0←S←S+1, CALL LODX
	MCONT=1,RRN=2,BL=14,SSP=3,IHR=1,THY=1,TYW=1,LRN=2,LR0=1,LSPX=1,MC=20,B=400
// 424:  DR←M, Z←P←P+1, GOTO NX2
// 
//   XMA
	RRN=1,BL=14,SSP=4,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1,MC=1,B=35
// 425:  XMAA:      GOTO CSTORE IF R0[2]
	MC=24,B=701
// 426:  Z←M, GOTO ROIA IF D
	BL=14,LZX=1,MC=47,B=372
// 427:  RES←AR←Z, M←K, GOTO STRFLD IF B
	RRN=3,BR=14,SSP=1,THY=1,TXW=1,LMY=1,LRN=5,LSPX=1,MC=34,B=362
// 430:  STORE, Z←P←P+1, GOTO NX2
// 
// 
//   STD, M=SR AND NOT TDFLAG, Z[18]=TDFLAG, K=Q+1
// 
	RRN=1,MS=42,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=1,B=35
// 431:  STD1:      IR←M, Q←20B, GOTO CSTORE IF R0<0
	BL=14,TCY=1,TXW=1,LQY=1,LRN=4,MC=11,B=701,C=20
// 432:  Q←Q AND M LCY 1, Q←IR, GOTO ROIA IF D
	RRN=4,BL=10,MS=1,THY=1,LQX=1,LQY=1,MC=47,B=372
// 433:  STORE, M←AR, DGOTO STD2 IF NZ[18]
	SSP=1,MS=42,TSPY=1,LMY=1,MC=15,DGO=1,B=437
// 434:  M←BR, CALL STORX
	MCONT=1,SSP=2,TSPY=1,LMY=1,MC=1,B=402
// 435:  M←CR, CALL STORX
	MCONT=1,SSP=3,TSPY=1,LMY=1,MC=20,B=402
// 436:  M←DR, CALL STORX
	MCONT=1,SSP=4,TSPY=1,LMY=1,MC=1,B=402
// 437:  STD2:      Z←P←P+1, SR←Q, GOTO NX2
// 
//   CYCLIC SINGLE LEFT SHIFT
	RRN=1,BL=12,SSP=11,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1,MC=20,B=35
// 440:  CYAL1:     Z←R0, M←24
	TCX=1,THY=1,LMX=1,LZY=1,C=30
// 441:  CYAL:      R0←Z-M, Q←AR
	BR=14,BL=3,SSP=1,LOC=1,TSPY=1,TXW=1,TAX=1,LQY=1,LR0=1,VCY=1
// 442:  M←Q LCL Z, GOTO CYAL1 IF R0>=0
	BL=12,MS=11,LMX=1,MC=12,B=440
// 443:  RES←AR←M LCH Z, GOTO NX1
// 
//   CYCLIC SINGLE RIGHT SHIFT
// 
	BL=14,SSP=1,MS=12,TXW=1,LRN=5,LSPX=1,MC=20,B=34
// 444:  CYAR2:     Z←Z+M, Q←AR, GOTO CYAR1
	BR=14,BL=14,SSP=1,TSPY=1,TAX=1,LQY=1,LZX=1,MC=1,VCY=1,B=446
// 445:  CYAR:      Z←M+ NOT Q OR Z, Q←AR
	BR=15,BL=14,SSP=1,TSPY=1,TAX=1,LQY=1,LZX=1,VCY=1
// 446:  CYAR1:     Q←Q LCL Z, GOTO CYAR2 IF Z<0
	BL=12,MS=11,LQX=1,MC=4,B=444
// 447:  RES←AR←Q LCH Z, GOTO NX1
// 
//   CYCLIC DOUBLE LEFT SHIFT
// 
	BL=12,SSP=1,MS=12,TXW=1,LRN=5,LSPX=1,MC=20,B=34
// 450:  CYDL1:     Z←R0, BR←M, DGOTO CYDL3
	BL=14,SSP=2,THY=1,LZY=1,LSPX=1,MC=1,DGO=1,B=453
// 451:  M←Q, Q←24
	BL=12,TCY=1,LMX=1,LQY=1,C=30
// 452:  CYDL:      Q←24, M←AR
	SSP=1,TCX=1,TSPY=1,LMY=1,LQX=1,C=30
// 453:  CYDL3:     R0←Z-Q
	BR=14,BL=5,LOC=1,TXW=1,TAX=1,LR0=1,VCY=1
// 454:  R6←M LCL Z, Q←BR, GOTO CYDL1 IF R0>=0
	BL=14,SSP=2,MS=11,TSPY=1,TXW=1,LQY=1,LRN=6,MC=12,B=450
// 455:  M←R6, DGOTO Z MRG BASEMSK
	MCONT=3,RRN=6,BR=14,TCX=1,THY=1,LMY=1,MC=20,DGO=1,C=140
// 456:  R6←M LCH Z, M←BR, DGOTO CYDL2
	BL=14,SSP=2,MS=12,TSPY=1,TXW=1,LMY=1,LRN=6,MC=1,DGO=1,B=457
// 457:  CYDL2:     M←M LCL Z
	BL=14,MS=11,LMX=1
// 460:  M←M LCH Z, Z←R6
	RRN=6,BL=14,MS=12,THY=1,LMX=1,LZY=1
// 461:  BR←M AND NOT Q ! Q AND Z, DGOTO NX1
	BR=10,BL=4,SSP=2,LSPX=1,MC=20,DGO=1,B=34
// 462:  RES←AR←M AND Q ! NOT Q AND Z
// 
//   CYCLIC DOUBLE RIGHT SHIFT
//     SHIFT LEFT 48-COUNT.
// 
	BR=4,BL=10,SSP=1,TXW=1,LRN=5,LSPX=1
// 463:  CYDR:      M←48, DGOTO CYDL
	TCX=1,LMX=1,MC=20,DGO=1,B=452,C=60
// 464:  Z←M+NOT Q OR Z
// 
//   ARITHMETIC SINGLE LEFT SHIFT (LOGICAL IF A)
//   Z=SHIFT COUNT
	BR=15,BL=14,TAX=1,LZX=1,VCY=1
// 465:  ASAL1:     Z←24
	TCX=1,LZX=1,C=30
// 466:  ASAL:      M←AR, Q←24
	SSP=1,TCX=1,TSPY=1,LMY=1,LQX=1,C=30
// 467:  R0←Z-Q
	BR=14,BL=5,LOC=1,TXW=1,TAX=1,LR0=1,VCY=1
// 470:  M←M LCL Z, GOTO ASAL5 IF R0>=0
	BL=14,MS=11,LMX=1,MC=12,B=675
// 471:  DGOTO Z MRG BASEMSK
	MCONT=3,BR=14,TCX=1,MC=20,DGO=1,C=140
// 472:  M←M LCH Z, DGOTO ASAL2
	BL=14,MS=12,LMX=1,MC=1,DGO=1,B=473
// 473:  ASAL2:     RES←AR←M AND NOT Q, GOTO NX1 IF A
	BL=4,SSP=1,TXW=1,LRN=5,LSPX=1,MC=33,B=34
// 474:  ASAL3:     Q←Q MRG 4B7, DGOTO ASAL4
	BL=12,TCX=1,LQX=1,MC=1,DGO=1,B=673,C=-40000000
// 475:  NOT M AND Q, GOTO NX1 IF LB=0
	BL=2,MC=22,B=34
// 476:  SPILL:     M←Q←4B7, DGOTO NX1
	TCX=1,LMX=1,LQX=1,MC=1,DGO=1,B=34,C=-40000000
// 477:  M+Q, ROV
// 
//   ARITHMETIC SINGLE RIGHT SHIFT, (LOGICAL IF A)
// 
	BR=12,BL=14,MS=66,TAX=1,VCY=1
// 500:  ASAR:      M←24
	TCX=1,LMX=1,C=30
// 501:  Z←M+NOT Q OR Z, R0←M←AR
	BR=15,BL=14,SSP=1,TSPY=1,TYW=1,TAX=1,LMY=1,LZX=1,LR0=1,VCY=1
// 502:  M←M LCL Z, Q←0, GOTO ASAR1 IF Z<0
	BL=14,MS=11,LMX=1,LQY=1,MC=4,B=505
// 503:  DGOTO Z MRG BASEMSK
	MCONT=3,BR=14,TCX=1,MC=20,DGO=1,C=140
// 504:  M←M LCH Z, DGOTO ASAR1
	BL=14,MS=12,LMX=1,MC=1,DGO=1,B=505
// 505:  ASAR1:     RES←AR←M AND Q, DGOTO NX1 IF A
	BL=10,SSP=1,TXW=1,LRN=5,LSPX=1,MC=33,DGO=1,B=34
// 506:  GOTO NX1 IF R0>=0
	MC=12,B=34
// 507:  RES←AR←M OR NOT Q, GOTO NX1
// 
//   ARITHMETIC DOUBLE LEFT SHIFT, (LOGICAL IF A)
//   M=BR, Z=SHIFT COUNT
// 
	BL=15,SSP=1,TXW=1,LRN=5,LSPX=1,MC=20,B=34
// 510:  LSHDL:     Z←R0, M←0
	THY=1,LMX=1,LZY=1
// 511:  ASDL:      BR←0, Q←24
	SSP=2,TCY=1,LQY=1,LSPX=1,C=30
// 512:  ASDL1:     R0←Z-Q
	BR=14,BL=5,LOC=1,TXW=1,TAX=1,LR0=1,VCY=1
// 513:  Q←M LCL Z, GOTO ASDL3 IF R0>=0
	BL=14,MS=11,LQX=1,MC=12,B=524
// 514:  DGOTO Z MRG BASEMSK
	MCONT=3,BR=14,TCX=1,MC=1,DGO=1,C=140
// 515:  M←Q LCH Z, DGOTO ASDL2
	BL=12,MS=12,LMX=1,MC=20,DGO=1,B=516
// 516:  ASDL2:     BR←M AND NOT Q
	BL=4,SSP=2,LSPX=1
// 517:  R6←M AND Q, M←AR
	BL=10,SSP=1,TSPY=1,TXW=1,LMY=1,LRN=6
// 520:  M←M LCL Z
	BL=14,MS=11,LMX=1
// 521:  M←M LCH Z, Z←R6
	RRN=6,BL=14,MS=12,THY=1,LMX=1,LZY=1
// 522:  DGOTO ASAL3
	MC=1,DGO=1,B=474
// 523:  RES←AR←M AND NOT Q+Z, GOTO NX1 IF A
// 
//   SHIFT COUNT>24, OVERFLOW IF NOT(AR=0 OR
//     AR=-1 AND ((AR EOR BR) AND 4B7=0));
// 
	BR=14,BL=4,SSP=1,TXW=1,TAX=1,LRN=5,LSPX=1,MC=33,VCY=1,B=34
// 524:  ASDL3:     Z←AR
	SSP=1,TSPY=1,LZY=1
// 525:  AR←M, GOTO LSHDL IF A
	BL=14,SSP=1,LSPX=1,MC=33,B=510
// 526:  Q←Z←NOT Z, GOTO ASDL4 IF Z=0
	BR=3,LQX=1,LZX=1,MC=2,B=532
// 527:  GOTO ASDL4 IF Z=0
	MC=2,B=532
// 530:  ASDL5:     Z←M←4B7, DGOTO ASDL
	TCX=1,LMX=1,LZX=1,MC=1,DGO=1,B=511,C=-40000000
// 531:  Z←R0, M←Z+M, ROV
	BR=14,BL=14,MS=66,THY=1,TAX=1,LMX=1,LZY=1,VCY=1
// 532:  ASDL4:     Z←Q EOR M, DGOTO ASDL
	BL=6,LZX=1,MC=1,DGO=1,B=511
// 533:  Z←R0, M←0, GOTO ASDL5 IF Z>=0
// 
//   ARITHMETIC DOUBLE RIGHT SHIFT
//   M=BR, Z=NEGATIVE SHIFT COUNT AND 77B, Q=77B
// 
	THY=1,LMX=1,LZY=1,MC=5,B=530
// 534:  ASDR:      Z←Z OR NOT Q, Q←24, GOTO NX1 IF Z=0
	BR=15,TCY=1,LQY=1,LZX=1,MC=2,B=34,C=30
// 535:  Z←Q+Z
	BR=14,BL=12,TAX=1,LZX=1,VCY=1
// 536:  ASDR1:     M←M LCL Z, GOTO ASDR3 IF Z<=0
	BL=14,MS=11,LMX=1,MC=13,B=547
// 537:  DGOTO Z MRG BASEMSK
	MCONT=3,BR=14,TCX=1,MC=20,DGO=1,C=140
// 540:  M←M LCH Z, DGOTO ASDR2
	BL=14,MS=12,LMX=1,MC=1,DGO=1,B=541
// 541:  ASDR2:     R6←M AND Q, M←AR
	BL=10,SSP=1,TSPY=1,TXW=1,LMY=1,LRN=6
// 542:  M←M LCL Z, R0←AR
	BL=14,SSP=1,MS=11,TSPY=1,TYW=1,LMX=1,LR0=1
// 543:  M←M LCH Z, Z←R6
	RRN=6,BL=14,MS=12,THY=1,LMX=1,LZY=1
// 544:  BR←M AND NOT Q ! Z, DGOTO NX1 IF A
	BR=14,BL=4,SSP=2,LSPX=1,MC=33,DGO=1,B=34
// 545:  RES←AR←M AND Q, GOTO NX1 IF R0>=0
	BL=10,SSP=1,TXW=1,LRN=5,LSPX=1,MC=12,B=34
// 546:  RES←AR←M OR NOT Q, GOTO NX1
// 
//   SHIF COUNT>24.  EXTEND THE SIGN OF AR.
// 
	BL=15,SSP=1,TXW=1,LRN=5,LSPX=1,MC=1,B=34
// 547:  ASDR3:     R0←M←AR, Z←Q+Z, GOTO *+2 IF A
	BR=14,BL=12,SSP=1,TSPY=1,TYW=1,TAX=1,LMY=1,LZX=1,LR0=1,MC=33,VCY=1,B=551
// 550:  AR←-1, GOTO ASDR1 IF R0<0
	BL=17,SSP=1,LSPX=1,MC=11,B=536
// 551:  AR←0, GOTO ASDR1
//   MULTIPLY NEGATIVE MULTIPLIER
	SSP=1,LSPX=1,MC=20,B=536
// 552:  MUL2:      M←NOT M+1, HROV, DGOTO MUL1
	BL=3,MS=57,LOC=1,TAX=1,LMX=1,MC=1,DGO=1,VCY=1,B=557
// 553:  K←4B7, GOTO MUL6 IF OVFLW
//   MULTIPLY NEGATIVE MULTIPLICAND
	TCX=1,TXW=1,LRN=3,MC=57,B=570,C=-40000000
// 554:  MUL3:      K←NOT Z, Q←0, GOTO MUL5 IF OVFLW
	BR=3,TXW=1,LQY=1,LRN=3,MC=57,B=563
// 555:  Q←R0, DGOTO MUL4
	THY=1,LQY=1,MC=20,DGO=1,B=560
// 556:  MH1←Q, .LSPX←0
//   MULTIPLY POSITIVE MULTIPLIER
	BL=12,SSP=40
// 557:  MUL1:      Z←K, R0←NOT Q+1, HROV, GOTO MUL3 IF R0<0
	RRN=3,BL=5,MS=57,LOC=1,THY=1,TXW=1,TAX=1,LZY=1,LR0=1,MC=11,B=554
// 560:  MUL4:      MH2←M LCY 1, .LSPX←0
	BL=14,SSP=43,MS=1
// 561:  M←MHR, .TSPY←0
	SSP=44,LMY=1
// 562:  Q←MMR, .TSPY←0
	SSP=45,LQY=1
// 563:  MUL5:      IR←AR←M, K, GOTO MUL10 IF Y<0
	RRN=3,BL=14,SSP=1,THY=1,TXW=1,LRN=4,LSPX=1,MC=53,VCY=1,B=571
// 564:  MUL7:      BR←Q, M←IR
	RRN=4,BL=12,SSP=2,THY=1,LMY=1,LSPX=1
// 565:  Q←Q LCY 20
	BL=12,MS=10,LQX=1
// 566:  Q←Q LCY 3, Z←P←P+1, DGOTO NX2
	RRN=1,BL=12,MS=3,IHR=1,THY=1,TYW=1,LQX=1,LZY=1,LRN=1,MC=1,DGO=1,B=35
// 567:  RES←M OR Q
// 
	BL=16,TXW=1,LRN=5
// 570:  MUL6:      M←Q, Q←0, GOTO MUL5
	BL=12,LMX=1,LQY=1,MC=1,B=563
// 571:  MUL10:     Q←NOT Q+1, HROV
	BL=5,MS=57,LOC=1,TAX=1,LQX=1
// 572:  AR←IR←NOT M+1, ROV, GOTO MUL7 IF CARRY
	BL=3,SSP=1,MS=66,LOC=1,TXW=1,TAX=1,LRN=4,LSPX=1,MC=61,VCY=1,B=564
// 573:  AR←IR←NOT M, GOTO MUL7
// 
	BL=3,SSP=1,TXW=1,LRN=4,LSPX=1,MC=20,B=564
// 574:  DIV4:      IR←Q←NOT Q+1, GOTO DIV5
	BL=5,LOC=1,TXW=1,TAX=1,LQX=1,LRN=4,MC=1,B=602
// 575:  DIV2:      Z←Z+1, HROV, DGOTO DIV1
	BR=14,MS=57,LOC=1,TAX=1,LZX=1,MC=20,DGO=1,VCY=1,B=600
// 576:  M←NOT M, GOTO DIV3 IF CARRY
	BL=3,LMX=1,MC=61,B=577
// 577:  DIV3:      M←M+1
	BL=14,LOC=1,TAX=1,LMX=1,VCY=1
// 600:  DIV1:      IR, Q←40000026B, DGOTO DIV4 IF Y<0
	RRN=4,TCX=1,THY=1,LQX=1,MC=53,DGO=1,VCY=1,B=574,C=-37777752
// 601:  R0←NOT Q, Q←IR
	RRN=4,BL=5,THY=1,TXW=1,LQY=1,LR0=1
// 602:  DIV5:      R6←M-Q, Q←1, GOTO DIV6 IF X<0
	BR=5,BL=14,LOC=1,TCY=1,TXW=1,TAX=1,LQY=1,LRN=6,MC=17,VCY=1,B=607,C=1
// 603:  M←R6, Q←Z MRG 1, GOTO DIV7 IF A
	RRN=6,BR=14,TCX=1,THY=1,LMY=1,LQX=1,MC=33,B=617,C=1
// 604:  Z←Q LCY 1, R0←R0+1, GOTO DIV8 IF R0<0
	BL=12,MS=1,IHR=1,THY=1,TYW=1,LZX=1,LR0=1,MC=11,B=613
// 605:  M←M LCY 1, Q←1, DGOTO DIV5
	BL=14,MS=1,TCY=1,LMX=1,LQY=1,MC=20,DGO=1,B=602,C=1
// 606:  M←M AND NOT Q ! Z AND Q, Q←IR
	RRN=4,BR=10,BL=4,THY=1,LMX=1,LQY=1
// 607:  DIV6:      Q←Z AND NOT Q, CLEARA, R0←R0+1, GOTO DIV8 IF R0<0
	BR=4,MS=50,IHR=1,THY=1,TYW=1,LQX=1,LR0=1,MC=11,B=613
// 610:  M←M LCY 1
	BL=14,MS=1,LMX=1
// 611:  Z←Q LCY 1, Q←1, DGOTO DIV5
	BL=12,MS=1,TCY=1,LQY=1,LZX=1,MC=20,DGO=1,B=602,C=1
// 612:  M←M AND NOT Q ! Z AND Q, Q←IR
	RRN=4,BR=10,BL=4,THY=1,LMX=1,LQY=1
// 613:  DIV8:      AR←RES←Q, S, GOTO DIV9 IF Y<0
	RRN=2,BL=12,SSP=1,THY=1,TXW=1,LRN=5,LSPX=1,MC=53,VCY=1,B=616
// 614:  DIV10:     BR←NOT M+1, GOTO NX1 IF D
	BL=3,SSP=2,LOC=1,TAX=1,LSPX=1,MC=47,VCY=1,B=34
// 615:  BR←M, Z←P←P+1, GOTO NX2
	RRN=1,BL=14,SSP=2,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1,MC=20,B=35
// 616:  DIV9:      AR←RES←NOT Q+1, GOTO DIV10
	BL=5,SSP=1,LOC=1,TXW=1,TAX=1,LRN=5,LSPX=1,MC=1,B=614
// 617:  DIV7:      Q←Q-1
	BR=17,BL=12,TAX=1,LQX=1,VCY=1
// 620:  M OR Q, GOTO SPILL IF LB#0, Z←S
	RRN=2,BL=16,THY=1,LZY=1,MC=23,B=476
// 621:  GOTO SPILL IF Z>=0, M←S←4B7
	TCX=1,TXW=1,LMX=1,LRN=2,MC=5,B=476,C=-40000000
// 622:  RES←AR←M, M←0, GOTO DIV10
// 
//   ISD, IR=MAPPED Q, R0=Q+1
//     Q=Z=CONTENTS(Q)
// 
	BL=14,SSP=1,TXW=1,LMY=1,LRN=5,LSPX=1,MC=1,B=614
// 623:  ISD1:      MFETCH, .VCY, R0←E1, GOTO PAGEF IF Y<0
	MS=34,TYW=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 624:  R6←Z
	BR=14,TXW=1,LRN=6
// 625:  Q←NOT Q LCY 2 MRG 63777777B
	BL=5,MS=2,TCX=1,LQX=1,C=-14000001
// 626:  Q←Z+NOT Q, Z←54B6
	BR=14,BL=5,TCY=1,TAX=1,LQX=1,LZY=1,VCY=1,C=-24000000
// 627:  R0←Q-Z, Q←Z←R6
	RRN=6,BR=3,BL=12,LOC=1,THY=1,TXW=1,TAX=1,LQY=1,LZY=1,LR0=1,VCY=1
// 630:  RES←Z←M-Z, M←1B6, DGOTO ISD2 IF R0<0
	BR=3,BL=14,LOC=1,TCY=1,TXW=1,TAX=1,LMY=1,LZX=1,LRN=5,MC=11,DGO=1,VCY=1,B=635,C=1000000
// 631:  Z←Q, GOTO NX1 IF Z=0
	BL=12,LZX=1,MC=2,B=34
// 632:  R0←IR, Q←3B6, GOTO CSTORE IF STERR, .VCY
	RRN=4,TCX=1,THY=1,TYW=1,LQX=1,LR0=1,MC=32,VCY=1,B=701,C=3000000
// 633:  M←Z AND NOT Q+1, DGOTO NX2
	BR=4,LOC=1,TAX=1,LMX=1,MC=20,DGO=1,B=35
// 634:  STORE, Z←P←P+1
	RRN=1,MS=42,IHR=1,THY=1,TYW=1,LZY=1,LRN=1
// 635:  ISD2:      R0←IR, M←M+Z, GOTO CSTORE IF STERR
	RRN=4,BR=14,BL=14,THY=1,TYW=1,TAX=1,LMX=1,LR0=1,MC=32,VCY=1,B=701
// 636:  STORE, Z←P←P+1, GOTO NX2
// 
//   DSD, R0=Q+1, Z=CONTENTS(Q)
// 
	RRN=1,MS=42,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=1,B=35
// 637:  DSD1:      MFETCH, .VCY, R0←E1, Q←3B6, GOTO PAGEF IF Y<0
	MS=34,TCX=1,TYW=1,LQX=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700,C=3000000
// 640:  R6←Z
	BR=14,TXW=1,LRN=6
// 641:  Z←M AND Q, Q←R6
	RRN=6,BL=10,THY=1,LQY=1,LZX=1
// 642:  RES←Z←Q-M, Q←14B6, DGOTO DSD2 IF Z=0
	BR=12,BL=3,LOC=1,TCY=1,TXW=1,TAX=1,LQY=1,LZX=1,LRN=5,MC=2,DGO=1,VCY=1,B=646,C=14000000
// 643:  Z←1B6, GOTO NX1 IF Z=0
	TCX=1,LZX=1,MC=2,B=34,C=1000000
// 644:  M←M-Z, R0, GOTO CSTORE IF STERR
	BR=3,BL=14,LOC=1,THY=1,TAX=1,LMX=1,MC=32,VCY=1,B=701
// 645:  DSD3:      STORE, Z←P←P+1, GOTO NX2
	RRN=1,MS=42,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=20,B=35
// 646:  DSD2:      Z←M AND Q, R0, GOTO CSTORE IF STERR, .VCY
	BL=10,THY=1,LZX=1,MC=32,VCY=1,B=701
// 647:  Q←Q-Z
	BR=3,BL=12,LOC=1,TAX=1,LQX=1,VCY=1
// 650:  Q←Q LCY 20
	BL=12,MS=10,LQX=1
// 651:  Q←Q LCY 2, DGOTO DSD3
	BL=12,MS=2,LQX=1,MC=20,DGO=1,B=645
// 652:  M←M OR Q-1
// 
	BR=17,BL=16,TAX=1,LMX=1,VCY=1
// 653:  SRS1:      Z←R0
	THY=1,LZY=1
// 654:  M←M, M←Q←IR, GOTO SRS2 IF Z#0
	RRN=4,BL=14,THY=1,LMX=1,LMY=1,LQY=1,MC=3,B=656
// 655:  M←M AND NOT Q
	BL=4,LMX=1
// 656:  SRS2:      CALL LOADSR
	MCONT=1,MC=1,B=666
// 657:  NEXT:      Z←P←P+1, GOTO NX2
// 
	RRN=1,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=20,B=35
// 660:  TSB1:      Q←IR, DGOTO NX1
	RRN=4,THY=1,LQY=1,MC=1,DGO=1,B=34
// 661:  RES←M AND Q
// 
// 
	BL=10,TXW=1,LRN=5
// 662:  GETSR:     Q←4B7, M←Z←RES
	RRN=5,TCX=1,THY=1,LMY=1,LQX=1,LZY=1,C=-40000000
// 663:  GETS1:     M←Z←NOT M AND Q LCY 12, Q←2B7, GOTO GETS1 IF Z=0
	BL=2,MS=6,TCY=1,LMX=1,LQY=1,LZX=1,MC=2,B=663,C=20000000
// 664:  M←SR, Q←7017B, DRETURN
	MCONT=2,SSP=11,TCX=1,TSPY=1,LMY=1,LQX=1,MC=1,DGO=1,C=7017
// 665:  M←M AND NOT Q ! Z, M←E1, GSB
// 
	BR=14,BL=4,MS=27,LMX=1,LMY=1,TE1Y=1
// 666:  LOADSR:    Z←SR←M, Q←6B3
	BL=14,SSP=11,TCY=1,LQY=1,LZX=1,LSPX=1,C=6000
// 667:  M←M AND Q, Q←2B3, PSB, DRETURN
	MCONT=2,BL=10,MS=55,TCY=1,LMX=1,LQY=1,MC=20,DGO=1,C=2000
// 670:  RES←M-Q
// 
// 
	BR=5,BL=14,LOC=1,TXW=1,TAX=1,LRN=5,VCY=1
// 671:  ICP1:      RES←M EOR Q MRG 1, GOTO NX2
	BL=6,TCX=1,TXW=1,LRN=5,MC=20,B=35,C=1
// 672:  DIV11:     Z←NOT Z MRG 1, SETD, GOTO DIV2
	BR=3,MS=36,TCX=1,LZX=1,MC=1,B=575,C=1
// 673:  ASAL4:     M AND Q, M←1, GOTO NX1 IF LB=0
	BL=10,TCY=1,LMY=1,MC=22,B=34,C=1
// 674:  M, GOTO SPILL IF LB#0
	BL=14,MC=23,B=476
// 675:  ASAL5:     RES←AR←0, GOTO NX1 IF A, .VCY
	SSP=1,TXW=1,LRN=5,LSPX=1,MC=33,VCY=1,B=34
// 676:  M, GOTO SPILL IF LB#0
	BL=14,MC=23,B=476
// 677:  GOTO NX1
	MC=20,B=34
// 
// 
// 
// 
//   THE FOLLOWING CODE IS ENTERED IF AN EMPTY
//     PAGE IS REFERENCED, OR THE RING PROTECTION
//     IS VIOLATED.
// 

// 700:  PAGEF:     M←Z←R0 , Q←0, SETA, GOTO PAGE1
// 
//   OR IF A STORE IS ATTEMPTED INTO A PAGE WHICH
//   IS READ-ONLY OR NOT DIRTY.
	MS=30,THY=1,LMY=1,LQX=1,LZY=1,MC=1,B=702
// 701:  CSTORE:    Z←Q←M←R0, CLEARA, GOTO PAGEF IF R0<0
//   PREPARE MACC TRAP (#1)
	MS=50,THY=1,LMY=1,LQY=1,LZY=1,MC=11,B=700
// 702:  PAGE1:     R0←Q LCY 3, Q←3777B, GOTO PAGE5 IF M[4]
	BL=12,MS=3,TCY=1,TXW=1,LQY=1,LR0=1,MC=74,B=751,C=3777
// 703:  MAPAD, M←E1, IR←1, DGOTO MACC IF M[1]
	MS=54,LOC=1,TXW=1,TAX=1,LMY=1,LRN=4,MC=21,DGO=1,TE1Y=1,B=747
// 704:  PARAM←Z AND Q ! M AND NOT Q, Q←77B, GOTO PRO IF R0<0
	BR=10,BL=4,SSP=26,TCY=1,LQY=1,LSPX=1,MC=11,B=746,C=77
// 705:  Z←M LCY 12, M←MBA
	BL=14,MS=6,TSPY=1,LMY=1,LZX=1
// 706:  R0←Z AND Q+M, .VCY, Q←7777B, DGOTO PAGE2 IF Z<0
	BR=10,BL=14,TCY=1,TXW=1,TAX=1,LQY=1,LR0=1,MC=4,DGO=1,VCY=1,B=711,C=7777
// 707:  FETCH
	MS=44
// 710:  M←M LCY 12
	BL=14,MS=6,LMX=1
// 711:  PAGE2:     MAPRO←M←M AND Q, Q←377B
	BL=10,SSP=30,TCY=1,LMX=1,LQY=1,LSPX=1,C=377
// 712:  Z←M AND Q LCY 2, Q←MBA
//   60 IS 300B-200B-4
	BL=10,MS=2,TSPY=1,LQY=1,LZX=1
// 713:  Z←Z+Q, Q←60, GOTO PNIM IF Z=0
	BR=14,BL=12,TCY=1,TAX=1,LQY=1,LZX=1,MC=2,VCY=1,B=745,C=74
// 714:  R0←Z+Q
	BR=14,BL=12,TXW=1,TAX=1,LR0=1,VCY=1
// 715:  FETCH, Z←P
	RRN=1,MS=44,THY=1,LZY=1
// 716:  UN0←Z←M, R0←R0+1, SSOURCE
	BL=14,SSP=24,MS=52,IHR=1,THY=1,TYW=1,LZX=1,LR0=1,LSPX=1
// 717:  FETCH, IR←Q
	BL=12,MS=44,TXW=1,LRN=4
// 720:  UN1←M, R0←R0+1
	BL=14,SSP=25,IHR=1,THY=1,TYW=1,LR0=1,LSPX=1
// 721:  R0←R0+1, Q←2B7, FETCH
	MS=44,IHR=1,TCX=1,THY=1,TYW=1,LQX=1,LR0=1,C=20000000
// 722:  M LCY 12, K←0, GOTO PNIC IF X>=0
	BL=14,MS=6,TYW=1,LRN=3,MC=16,VCY=1,B=740
// 723:  PMTRO←M←M OR Q, STORE, K←0
	BL=16,SSP=27,MS=42,TYW=1,LMX=1,LRN=3,LSPX=1
// 724:  Q←Z, M←UN1, CALL CHTSRCH
	MCONT=1,BR=14,SSP=25,TSPY=1,LMY=1,LQX=1,MC=1,B=756
// 725:  Q←4B7, DGOTO PAGE3 IF A
	TCX=1,LQX=1,MC=33,DGO=1,B=730,C=-40000000
// 726:  IR←M AND Q LCY 8
	BL=10,MS=5,TXW=1,LRN=4
// 727:  M←M OR Q, IR←200B, STORE
	BL=16,MS=42,TCY=1,TYW=1,LMX=1,LRN=4,C=200
// 730:  PAGE3:     M←NOT M LCY 12 MRG 3777700B, Q←MAPRO
	BL=3,SSP=30,MS=6,TCX=1,TSPY=1,LMX=1,LQY=1,C=3777700
// 731:  Z←NOT M LCY 1, M←PMTRO
	BL=3,SSP=27,MS=1,TSPY=1,LMY=1,LZX=1
// 732:  Q←Q LCY 12
	BL=12,MS=6,LQX=1
// 733:  M←M OR Q LCY 8, Q←200B
	BL=16,MS=5,TCY=1,LMX=1,LQY=1,C=200
// 734:  M←M AND Q LCY 1, Q←IR
	RRN=4,BL=10,MS=1,THY=1,LMX=1,LQY=1
// 735:  Q←Q LCY 2, R0←PARAM
	BL=12,SSP=26,MS=2,TSPY=1,TYW=1,LQX=1,LR0=1
// 736:  Z←M OR Q ! Z
	BR=14,BL=16,LZX=1
// 737:  ZTOMAP, .VCY, DGOTO IDLE3
//   BEWARE OF DIRTY TRICK
	MS=53,MC=20,DGO=1,VCY=1,B=1144
// 740:  PNIC:      Q←K, M←2, UNPROTECT
//   NOTE THAT 2 AND 4 = 0 USED AT PAGE4
	RRN=3,MS=20,TCX=1,THY=1,LMX=1,LQY=1,C=2
// 741:  Q, Q←IR←4, GOTO PAGE4 IF X>=0
//   SEND STROBE2 IF UN NOT FOUND AT WAKEUP
	BL=12,TCY=1,TYW=1,LQY=1,LRN=4,MC=16,VCY=1,B=750,C=4
// 742:  M←K, 2, STOP
	RRN=3,MS=76,TCX=1,THY=1,LMY=1,C=2
// 743:  R0←Y←CPUNO*4+2454B, STORE, GOTO 1721B
	MS=42,TCY=1,TYW=1,LR0=1,MC=1,B=1721,C=2454
// 744:  S←3B6, CLEARA, GOTO TOSP2
// 
	MS=50,TCX=1,TXW=1,LRN=2,MC=1,B=1060,C=3000000
// 745:  PNIM:      IR←3, Q←0, GOTO PAGE4
	TCX=1,TXW=1,LQY=1,LRN=4,MC=20,B=750,C=3
// 746:  PRO:       IR←2, Q←0, GOTO PAGE4
	TCX=1,TXW=1,LQY=1,LRN=4,MC=1,B=750,C=2
// 747:  MACC:      M←4B5, Q←E1, READS
	MS=56,TCX=1,LMX=1,LQY=1,TE1Y=1,C=400000
// 750:  PAGE4:     Q←M AND Q LCY 1, Q←PARAM, GOTO FIXTRP
// 
//   SCAN PHYSICAL MAP FOR PAGE
	BL=10,SSP=26,MS=1,TSPY=1,LQX=1,LQY=1,MC=1,B=1046
// 751:  PAGE5:     R0←Y←CPUNO*4+2455B, FETCH
	MS=44,TCY=1,TYW=1,LR0=1,C=2455
// 752:  Z←M
	BL=14,LZX=1
// 753:  SCAN, E1, M←4B7, GOTO PAGE6 IF Y<0
	MS=63,TCX=1,LMX=1,MC=53,VCY=1,TE1Y=1,B=755,C=-40000000
// 754:  STORE, IR←12, Q←0, GOTO FIXTRP
	MS=42,TCX=1,TXW=1,LQY=1,LRN=4,MC=1,B=1046,C=14
// 755:  PAGE6:     STORE, GOTO IDLE3
// 
// 
//   Q=UN0, M=UN1, ROUTINE PUTS CHT INDEX+1 INTO R0
// 
	MS=42,MC=20,B=1144
// 756:  CHTSRCH:   Q←IR←M EOR Q, M←132B3
	BL=6,TCY=1,TXW=1,LMY=1,LQX=1,LRN=4,C=132000
// 757:  2, PROTECT, GOTO * IF NPROTECT
	MS=25,TCX=1,MC=30,VCY=1,B=757,C=2
// 760:  M←M EOR Q LCY 8, Z←400B
	BL=6,MS=5,TCY=1,LMX=1,LZY=1,C=400
// 761:  M←M EOR Q LCY 8 MRG 777774B2, Q←IR, .TCY←1
	RRN=4,BL=6,MS=5,TCX=1,TCY=1,THY=1,LMX=1,LQY=1,C=-400
// 762:  R0←M EOR Q+Z
	BR=14,BL=6,TXW=1,TAX=1,LR0=1,VCY=1
// 763:  CHT1:      FETCH, Q←77B6
	MS=44,TCX=1,LQX=1,C=-1000000
// 764:  IR←R0←M AND NOT Q
	BL=4,TXW=1,LRN=4,LR0=1
// 765:  FETCH, NOT M AND NOT Q, Q←UN0, GOTO PNIC IF LB=0
	BL=1,SSP=24,MS=44,TSPY=1,LQY=1,MC=22,B=740
// 766:  R0←R0+1, Q EOR M, GOTO CHT2 IF LB#0
	BL=6,IHR=1,THY=1,TYW=1,LR0=1,MC=23,B=771
// 767:  FETCH, Q←UN1
	SSP=25,MS=44,TSPY=1,LQY=1
// 770:  Q EOR M, R0←R0+1, GOTO CHT3 IF LB=0
	BL=6,IHR=1,THY=1,TYW=1,LR0=1,MC=22,B=773
// 771:  CHT2:      Z←IR, Q←5, DGOTO CHT1
	RRN=4,TCX=1,THY=1,LQX=1,LZY=1,MC=20,DGO=1,B=763,C=5
// 772:  R0←Z+Q, Q←77B6
	BR=14,BL=12,TCY=1,TXW=1,TAX=1,LQY=1,LR0=1,VCY=1,C=-1000000
// 773:  CHT3:      R0←R0+1, FETCH, Q←36B6, DRETURN
	MCONT=2,MS=44,IHR=1,TCX=1,THY=1,TYW=1,LQX=1,LR0=1,MC=20,DGO=1,C=36000000
// 774:  M AND Q, Q←774B3, GOTO PNIC IF LB#0
// 
//   K=BASE ADDRESS-1, DO NOT CHANGE HOLDING REGISTERS
// 
	BL=10,TCY=1,LQY=1,MC=23,B=740,C=774000
// 775:  SSTATE:    R6←OS
	TYW=1,LRN=6,TOSY=1
// 776:  R0←K←K+1
	RRN=3,IHR=1,THY=1,TYW=1,LRN=3,LR0=1
// 777:  M←P, CALL SST2 IF B
	MCONT=1,RRN=1,THY=1,LMY=1,MC=34,B=1033
// 1000:  M←AR, CALL SST1
	MCONT=1,SSP=1,TSPY=1,LMY=1,MC=1,B=1032
// 1001:  M←BR, CALL SST1
	MCONT=1,SSP=2,TSPY=1,LMY=1,MC=20,B=1032
// 1002:  M←CR, CALL SST1
	MCONT=1,SSP=3,TSPY=1,LMY=1,MC=1,B=1032
// 1003:  M←DR, CALL SST1
	MCONT=1,SSP=4,TSPY=1,LMY=1,MC=20,B=1032
// 1004:  M←ER, CALL SST1
	MCONT=1,SSP=5,TSPY=1,LMY=1,MC=1,B=1032
// 1005:  R0←K←K+1
	RRN=3,IHR=1,THY=1,TYW=1,LRN=3,LR0=1
// 1006:  M←XR, CALL SST2 IF B
	MCONT=1,SSP=6,TSPY=1,LMY=1,MC=34,B=1033
// 1007:  M←LR, CALL SST1
	MCONT=1,SSP=7,TSPY=1,LMY=1,MC=20,B=1032
// 1010:  M←GR, CALL SST1
	MCONT=1,SSP=10,TSPY=1,LMY=1,MC=1,B=1032
// 1011:  CALL GETSR
	MCONT=1,MC=20,B=662
// 1012:  Z←R6, CALL SST1
	MCONT=1,RRN=6,THY=1,LZY=1,MC=1,B=1032
// 1013:  GOTO Z
// 
//   S=BASE ADDRESS
// 
	MCONT=3,BR=14,MC=20
// 1014:  LSTATE:    R6←OS
	TYW=1,LRN=6,TOSY=1
// 1015:  R0←S, CALL LST1
	MCONT=1,RRN=2,THY=1,TYW=1,LR0=1,MC=20,B=1036
// 1016:  R0←S←S+1, Q←M, CALL LST1
	MCONT=1,RRN=2,BL=14,IHR=1,THY=1,TYW=1,LQX=1,LRN=2,LR0=1,MC=1,B=1036
// 1017:  R0←S←S+1, AR←M, CALL LST1
	MCONT=1,RRN=2,BL=14,SSP=1,IHR=1,THY=1,TYW=1,LRN=2,LR0=1,LSPX=1,MC=20,B=1036
// 1020:  R0←S←S+1, BR←M, CALL LST1
	MCONT=1,RRN=2,BL=14,SSP=2,IHR=1,THY=1,TYW=1,LRN=2,LR0=1,LSPX=1,MC=1,B=1036
// 1021:  R0←S←S+1, CR←M, CALL LST1
	MCONT=1,RRN=2,BL=14,SSP=3,IHR=1,THY=1,TYW=1,LRN=2,LR0=1,LSPX=1,MC=20,B=1036
// 1022:  R0←S←S+1, DR←M, CALL LST1
	MCONT=1,RRN=2,BL=14,SSP=4,IHR=1,THY=1,TYW=1,LRN=2,LR0=1,LSPX=1,MC=1,B=1036
// 1023:  R0←S←S+1, ER←M, CALL LST1
	MCONT=1,RRN=2,BL=14,SSP=5,IHR=1,THY=1,TYW=1,LRN=2,LR0=1,LSPX=1,MC=20,B=1036
// 1024:  R0←S←S+1, XX←M, CALL LST1
	MCONT=1,RRN=2,BL=14,SSP=24,IHR=1,THY=1,TYW=1,LRN=2,LR0=1,LSPX=1,MC=1,B=1036
// 1025:  R0←S←S+1, LR←M, CALL LST1
	MCONT=1,RRN=2,BL=14,SSP=7,IHR=1,THY=1,TYW=1,LRN=2,LR0=1,LSPX=1,MC=20,B=1036
// 1026:  R0←S←S+1, GR←M, CALL LST1
	MCONT=1,RRN=2,BL=14,SSP=10,IHR=1,THY=1,TYW=1,LRN=2,LR0=1,LSPX=1,MC=1,B=1036
// 1027:  K←Q, CALL LOADSR
	MCONT=1,BL=12,TXW=1,LRN=3,MC=20,B=666
// 1030:  Z←R6
	RRN=6,THY=1,LZY=1
// 1031:  Q←K, GOTO Z
// 
//   LOAD OR STORE ABSOLUTE DEPENDING ON B
	MCONT=3,RRN=3,BR=14,THY=1,LQY=1,MC=20
// 1032:  SST1:      R0←K←K+1
	RRN=3,IHR=1,THY=1,TYW=1,LRN=3,LR0=1
// 1033:  SST2:      MAP, GOTO SST3 IF B
	MS=37,MC=34,B=1035
// 1034:  R0←E1, GOTO CSTORE IF STERR, .VCY
	TYW=1,LR0=1,MC=32,VCY=1,TE1Y=1,B=701
// 1035:  SST3:      E1, STORE, RETURN
// 
	MCONT=2,MS=42,MC=20,TE1Y=1
// 1036:  LST1:      MAP, GOTO LST2 IF B
	MS=37,MC=34,B=1040
// 1037:  R0←E1, GOTO PAGEF IF Y<0
	TYW=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 1040:  LST2:      E1, FETCH, RETURN
// 
//   TRAPNO=TRAP, Q←PARAM
	MCONT=2,MS=44,MC=1,TE1Y=1
// 1041:  RDTRAP:    Z←GR, M←4, GOTO TOSP IF INTRPT1
	SSP=10,TCX=1,TSPY=1,LMX=1,LZY=1,MC=64,B=1057,C=4
// 1042:  R0←K←Z+M, Z←M←P, ABCD0
	RRN=1,BR=14,BL=14,MS=70,THY=1,TXW=1,TAX=1,LMY=1,LZY=1,LRN=3,LR0=1,VCY=1
// 1043:  R6←15000006B, SSOURCE, CALL STOR1
	MCONT=1,MS=52,TCX=1,TXW=1,LRN=6,MC=20,B=403,C=15000006
// 1044:  M←Q, CALL STORX
	MCONT=1,BL=12,LMX=1,MC=1,B=402
// 1045:  R0←S←K+1, GOTO IA
// 
	RRN=3,IHR=1,THY=1,TYW=1,LRN=2,LR0=1,MC=20,B=101
// 1046:  FIXTRP:    S←Q, Z←6B5, SETB
	BL=12,MS=26,TCY=1,TXW=1,LZY=1,LRN=2,C=600000
// 1047:  SSOURCE, K←MBA MRG 2751B, CALL SSTATE
	MCONT=1,MS=52,TCY=1,TSPY=1,TYW=1,LRN=3,MC=20,B=775,C=2751
// 1050:  M←S, Q←61B, X23LCK
	RRN=2,MS=71,TCX=1,THY=1,LMY=1,LQX=1,C=61
// 1051:  4, Z←SR, PROTECT, GOTO * IF NPROTECT
	SSP=11,MS=25,TCX=1,TSPY=1,LZY=1,MC=30,VCY=1,B=1051,C=4
// 1052:  SR←Z AND NOT Q, Z←IR, CLM940
	RRN=4,BR=4,SSP=11,MS=72,THY=1,LZY=1,LSPX=1
// 1053:  XR←Z
	BR=14,SSP=6,LSPX=1
// 1054:  AR←M, Q←6B5, ABCD0, DGOTO NX5
	BL=14,SSP=1,MS=70,TCY=1,LQY=1,LSPX=1,MC=1,DGO=1,B=350,C=600000
// 1055:  GR←Q, R0←P←Z←604002B
// 
	BL=12,SSP=10,TCY=1,TYW=1,LZY=1,LRN=1,LR0=1,LSPX=1,C=604002
// 1056:  T940:      P, GOTO NY8 IF M940
	RRN=1,THY=1,MC=43,B=1177
// 1057:  TOSP:      S←3B6, CLEARA, GOTO TOSP1 IF TO
	MS=50,TCX=1,TXW=1,LRN=2,MC=72,B=1151,C=3000000
// 1060:  TOSP2:     K←MBA MRG 2763B, SETB, CALL SSTATE
	MCONT=1,MS=26,TCY=1,TSPY=1,TYW=1,LRN=3,MC=1,B=775,C=2763
// 1061:  Z←CTCR, ALERT
	MS=14,TCX=1,LZX=1,C=62
// 1062:  PIN, M←E2, CALL SST1
	MCONT=1,MS=16,LMY=1,MC=1,TE2Y=1,B=1032,VCY=1
// 1063:  Z←ITR, ALERT
	MS=14,TCX=1,LZX=1,C=60
// 1064:  Z←8, PIN, M←E2, CALL SST1
	MCONT=1,MS=16,TCX=1,LMY=1,LZX=1,MC=1,TE2Y=1,B=1032,C=10,VCY=1
// 1065:  Q←M LCY 8, M←PRTINDEX, DGOTO TOSP3 IF SPANL
	BL=14,SSP=21,MS=5,TSPY=1,LMY=1,LQX=1,MC=70,DGO=1,B=1072
// 1066:  R0←Z+M,  GOTO TOSP3 IF A
	BR=14,BL=14,TXW=1,TAX=1,LR0=1,MC=33,VCY=1,B=1072
// 1067:  Q←12343210B, M←0
	TCX=1,LMY=1,LQX=1,C=12343210
// 1070:  R0←Y←23B+CPUNO, STORE
	MS=42,TCY=1,TYW=1,LR0=1,C=23
// 1071:  BRK:       Q EOR M, Z←406B5, GOTO IDLE2 IF LB=0
	BL=6,TCY=1,LZY=1,MC=22,B=1135,C=-37200000
// 1072:  TOSP3:     Z←6B5, FETCH, GOTO BRK IF Z<0
	MS=44,TCX=1,LZX=1,MC=4,B=1071,C=600000
// 1073:  Z←Q LCY 1, Q←776B5
	BL=12,MS=1,TCY=1,LQY=1,LZX=1,C=-200000
// 1074:  M←M AND NOT Q ! Z AND Q, Z←2, STORE
	BR=10,BL=4,MS=42,TCY=1,LMX=1,LZY=1,C=2
// 1075:  TOSP4:     10B, PROTECT, GOTO * IF NPROTECT
	MS=25,TCX=1,MC=30,VCY=1,B=1075,C=10
// 1076:  R0←Y←USIBTOP, FETCH
	MS=44,TCY=1,TYW=1,LR0=1,C=15
// 1077:  M←M+Z, Q←USIBMSK
	BR=14,BL=14,TCY=1,TAX=1,LMX=1,LQY=1,VCY=1,C=37
// 1100:  M AND Q, GOTO TOSP5 IF LB=0
	BL=10,MC=22,B=1150
// 1101:  STORE
	MS=42
// 1102:  R0←M, M←S, .VCY, .TSPY, .SSP←@PRTINDEX, CALL SST3,START/STOP
	MCONT=1,RRN=2,MS=77,BL=14,SSP=21,TSPY=1,THY=1,TXW=1,LMY=1,LR0=1,MC=1,VCY=1,B=1035
// 1103:  M←CPUNO , R0←R0+1, STORE
	MS=42,IHR=1,THY=1,TYW=1,LMX=1,LR0=1
// 1104:  10B, M←0, UNPROTECT, DGOTO IDLE
	MS=20,TCX=1,LMY=1,MC=1,DGO=1,B=1114,C=10
// 1105:  2, STROBE
// 
// 
//   SYSTEM INITIALIZING
// 
	MS=17,TCX=1,C=2
// 1106:  RSET1:     17B, UNPROTECT
	MS=20,TCX=1,C=17
// 1107:  2, LPF
	MS=22,TCX=1,C=2
// 1110:  CLEARSP
	MS=23
// 1111:  X23LCK
	MS=71
// 1112:  CRSL2
	MS=32
// 1113:   
//  SPARE INSTRUCTION
// 
// 

// 1114:  IDLE:      R0←6+CPUNO, GOTO IDLE1 IF NSP
	TCX=1,TXW=1,LR0=1,MC=27,B=1116,C=6
// 1115:  CLEARSP, GOTO IDLEA
	MS=23,MC=20,B=1122
// 1116:  IDLE1:     R0←Y←CPUNO*4+2455B
	TCY=1,TYW=1,LR0=1,C=2455
// 1117:  M, M←4B7, GOTO IDLE IF X<0
	BL=14,TCY=1,LMY=1,MC=17,VCY=1,B=1114,C=-40000000
// 1120:  SCAN
	MS=63
// 1121:   GOTO IDLE
	MC=20,B=1114
// 1122:  IDLEA:     FETCH
	MS=44
// 1123:  Q←M, M←0, X23LCK, GOTO IDLEA IF LB=0
	BL=14,MS=71,LMY=1,LQX=1,MC=22,B=1122
// 1124:  STORE, PRTINDEX←IR←Q
	BL=12,SSP=21,MS=42,TXW=1,LRN=4,LSPX=1
// 1125:  R0←IR, FETCH
	RRN=4,MS=44,THY=1,TYW=1,LR0=1
// 1126:  4, UNPROTECT
	MS=20,TCX=1,C=4
// 1127:  UN0←Q←M, R0←R0+1, FETCH
//   NOTE THAT K IS PREPARED TO CRASH IF PNIC
	BL=14,SSP=24,MS=44,IHR=1,THY=1,TYW=1,LQX=1,LR0=1,LSPX=1
// 1130:  UN1←M, K←4B7, SETB, CALL CHTSRCH
	MCONT=1,BL=14,SSP=25,MS=26,TCY=1,TYW=1,LRN=3,LSPX=1,MC=1,B=756,C=-40000000
// 1131:  MBA←M←M AND Q MRG 200B, CLEARMAP
	BL=10,MS=74,TCX=1,LMX=1,LSPX=1,C=200
// 1132:  Q←M LCY 12, R0←602764B
//   SET DIRTY BIT IN CONTEXT BLOCK ENTRY
	BL=14,MS=6,TCY=1,TYW=1,LQX=1,LR0=1,C=602764
// 1133:  Z←Q LCY 1 MRG 1000B, DGOTO PATCH
	BL=12,MS=1,TCX=1,LZX=1,MC=1,DGO=1,B=1715,C=1000
// 1134:  ZTOMAP, .VCY, Z←R0
	MS=53,THY=1,LZY=1,VCY=1
// 1135:  IDLE2:     S←MBA MRG 2764B, SSOURCE, CALL LSTATE
	MCONT=1,MS=52,TCY=1,TSPY=1,TYW=1,LRN=2,MC=20,B=1014,C=2764
// 1136:  R0←S←S+1, Z←CTCL, CALL LST1
	MCONT=1,RRN=2,IHR=1,TCX=1,THY=1,TYW=1,LZX=1,LRN=2,LR0=1,MC=1,B=1036,C=63
// 1137:  Q←XX, P←Q, ALERT
	BL=12,SSP=24,MS=14,TSPY=1,TXW=1,LQY=1,LRN=1
// 1140:  POT, Z←M, R0←S+1, CALL LST1
	MCONT=1,RRN=2,BL=14,MS=15,IHR=1,THY=1,TYW=1,LZX=1,LR0=1,MC=1,B=1036
// 1141:  XR←Q, Z←ITL, ALERT
	BL=12,SSP=6,MS=14,TCY=1,LZY=1,LSPX=1,C=61
// 1142:  Z←M, POT
	BL=14,MS=15,LZX=1
// 1143:  2       *UNPROTECT REMOVED
	TCX=1,C=2
// 1144:  IDLE3:     R0←S←Z←P, ABCD0
	RRN=1,MS=70,THY=1,TYW=1,LZY=1,LRN=2,LR0=1
// 1145:  MFETCH, R0←E1, .VCY, GOTO PAGEF IF Y<0
	MS=34,TYW=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 1146:  R0+1, TAKE, DGOTO NX3
	MS=75,IHR=1,THY=1,MC=1,DGO=1,B=36
// 1147:  R6←M, Q←7B7, SSOURCE, GOTO 1712B IF INTRPT3
// 
	BL=14,MS=52,TCY=1,TXW=1,LQY=1,LRN=6,MC=56,B=1712,C=-10000000
// 1150:  TOSP5:     10B, UNPROTECT, GOTO TOSP4
// 
	MS=20,TCX=1,MC=1,B=1075,C=10
// 1151:  TOSP1:     IR←5, Q←0, GOTO FIXTRP
// 
// 
// 
// 
// 
// 
	TCX=1,TXW=1,LQY=1,LRN=4,MC=20,B=1046,C=5
// 1152:  NY1:       Z←P←P+1
	RRN=1,IHR=1,THY=1,TYW=1,LZY=1,LRN=1
// 1153:  NY2:       M←NI, SABCDE0, GOTO NY6 IF INTRPT, .C←1, .TSPY←0
	SSP=50,MS=33,LMY=1,MC=41,B=1176,C=1
// 1154:  NY3:       R0←H2←M LCY 1, Z←XR, DGOTO INDEX IF M[1]
	BL=14,SSP=6,MS=1,TSPY=1,TXW=1,LZY=1,LRN=3,LR0=1,MC=21,DGO=1,B=1203
// 1155:  H3←X←M, Q←7774B4, SETA, GOTO POP940 IF R0[1]
	BL=14,MS=30,TCY=1,TXW=1,LQY=1,LRN=4,MC=66,B=1367,C=-40000
// 1156:  NY4:       Z←R0←H1←M AND NOT Q, GOTO INDIRECT IF M[9]
	BL=4,TXW=1,LZX=1,LRN=2,LR0=1,MC=71,B=1204
// 1157:  NY5:       M←H2, Q←176B5, GOTO NY9
	RRN=3,TCX=1,THY=1,LMY=1,LQX=1,MC=1,B=1161,C=17600000
// 1160:  GOTO TOSP
	MC=1,B=1057
// 1161:  NY9:       Q←AR, DGOTO M AND Q LCY 8 MRG BASE940 IF A
	MCONT=3,BL=10,SSP=1,MS=5,TCX=1,TSPY=1,LQY=1,MC=33,DGO=1,C=1600
// 1162:  MFETCH, .VCY, R0←E1, DGOTO ASGNA IF A
//   A HAS BEEN CLEARED IF THE INSTRUCTION IS A SYSPOP
	MS=34,TYW=1,LR0=1,MC=33,DGO=1,VCY=1,TE1Y=1,B=1216
// 1163:  M←H2, Q←176B5, RESETCM
	RRN=3,MS=24,TCX=1,THY=1,LMY=1,LQX=1,C=17600000
// 1164:  IR←M AND Q LCY 8, Q←LR
	BL=10,SSP=7,MS=5,TSPY=1,TXW=1,LQY=1,LRN=4
// 1165:  Z←3, ABCD0
	MS=70,TCX=1,LZX=1,C=3
// 1166:  Z←R0←Z+Q, M←P, CALL STOR1
	MCONT=1,RRN=1,BR=14,BL=12,THY=1,TXW=1,TAX=1,LMY=1,LZX=1,LR0=1,MC=1,VCY=1,B=403
// 1167:  K←Z-1, CALL SSTATE
	MCONT=1,BR=14,BL=17,TXW=1,TAX=1,LRN=3,MC=20,VCY=1,B=775
// 1170:  Q←LR, Z←9
	SSP=7,TCX=1,TSPY=1,LQY=1,LZX=1,C=11
// 1171:  R0←Q+Z, M←XR, CALL STOR1
	MCONT=1,BR=14,BL=12,SSP=6,TSPY=1,TXW=1,TAX=1,LMY=1,LR0=1,MC=20,VCY=1,B=403
// 1172:  M←IR
	RRN=4,THY=1,LMY=1
// 1173:  XR←M, M←H1
	RRN=2,BL=14,SSP=6,THY=1,LMY=1,LSPX=1
// 1174:  AR←M, Z←2, DGOTO NX5
	BL=14,SSP=1,TCY=1,LZY=1,LSPX=1,MC=1,DGO=1,B=350,C=2
// 1175:  R0←Z←P←Z+Q, CLM940
// 
//   PAGE CROSSING IN THE INSTUCTION SEQUENCE
	BR=14,BL=12,MS=72,TXW=1,TAX=1,LZX=1,LRN=1,LR0=1,VCY=1
// 1176:  NY6:       R0←P+1, .C←1, GOTO TOSP IF INTRPT2
	RRN=1,IHR=1,THY=1,TYW=1,LR0=1,MC=65,B=1057,C=1
// 1177:  NY8:       MAP, DGOTO NY3
	MS=37,MC=20,DGO=1,B=1154
// 1200:  R0←E1, TAKE, GOTO PAGEF IF Y<0
// 
//   ENTRY TO THE MAIN LOOP AT INSTRUCTION R0=Z
	MS=75,TYW=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 1201:  NY7:       MFETCH, R0←E1, .VCY, GOTO PAGEF IF Y<0
	MS=34,TYW=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 1202:  GOTO BRU1, ABCD0
// 
// 
	MS=70,MC=1,B=1224
// 1203:  INDEX:     Z←M+Z, GOTO INDA
//  
	BR=14,BL=14,TAX=1,LZX=1,MC=20,VCY=1,B=1702
// 1204:  INDIRECT:  MFETCH, .VCY, R0←E1, Z←114B5, GOTO TOSP IF INTRPT1
	MS=34,TCX=1,TYW=1,LZX=1,LR0=1,MC=64,VCY=1,TE1Y=1,B=1057,C=11400000
// 1205:  Q←H2
	RRN=3,THY=1,LQY=1
// 1206:  Q←Q EOR Z, Z←176B5
	BR=6,TCY=1,LQX=1,LZY=1,C=17600000
// 1207:  Z←Q AND Z, Q←H2
	RRN=3,BR=10,THY=1,LQY=1,LZX=1
// 1210:  Z←132B5, GOTO RCH IF Z=0
	TCX=1,LZX=1,MC=2,B=1646,C=13200000
// 1211:  Z←Q AND Z
	BR=10,LZX=1
// 1212:  Q←7774B4, GOTO NY5 IF Z=0
	TCX=1,LQX=1,MC=2,B=1157,C=-40000
// 1213:  H3←M, Z←XR, DGOTO INDEX IF M[1]
	BL=14,SSP=6,TSPY=1,TXW=1,LZY=1,LRN=4,MC=21,DGO=1,B=1203
// 1214:  GOTO PAGEF IF R0<0
	MC=11,B=700
// 1215:  GOTO NY4
//  
	MC=20,B=1156
// 1216:  ASGNA:     GOTO PAGEF IF R0<0
	MC=11,B=700
// 1217:  AR←M, DGOTO NY2
	BL=14,SSP=1,LSPX=1,MC=20,DGO=1,B=1153
// 1220:  Z←P←P+1
//  
	RRN=1,IHR=1,THY=1,TYW=1,LZY=1,LRN=1
// 1221:  BRX1:      XR←Z←Z+1, Q←4B4
	BR=14,SSP=6,LOC=1,TCY=1,TAX=1,LQY=1,LZX=1,LSPX=1,VCY=1,C=40000
// 1222:  Z←Z AND Q, DGOTO 1710B
	BR=10,LZX=1,MC=1,DGO=1,B=1710
// 1223:  Z←H1, GOTO NY1 IF Z=0, ABCD0
//   BRU, Z=EFF. ADDRESS, M=NEW INSTR. , R0=Z MAPPED
	RRN=2,MS=70,THY=1,LZY=1,MC=2,B=1152
// 1224:  BRU1:      P←Z, R0+1, TAKE, DGOTO NY3
	BR=14,MS=75,IHR=1,THY=1,TXW=1,LRN=1,MC=1,DGO=1,B=1154
// 1225:  R0←P+1, SABCDE0, GOTO 1706B IF INTRPT, .C←1
//  
	RRN=1,MS=33,IHR=1,THY=1,TYW=1,LR0=1,MC=41,B=1706,C=1
// 1226:  XMA1:      R0, GOTO CSTORE IF STERR, .VCY
	THY=1,MC=32,VCY=1,B=701
// 1227:  AR←M, M←H1
	RRN=2,BL=14,SSP=1,THY=1,LMY=1,LSPX=1
// 1230:  ST940:     R0, GOTO CSTORE IF STERR, .VCY
	THY=1,MC=32,VCY=1,B=701
// 1231:  STORE, Z←P←P+1, GOTO NY2
// 
	RRN=1,MS=42,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=20,B=1153
// 1232:  BRM1:      Z←H1+1, DGOTO BRM2 IF OV
	RRN=2,IHR=1,THY=1,LZY=1,MC=37,DGO=1,B=1235
// 1233:  BRM3:      M←M OR Q, Q←4B7, GOTO CSTORE IF R0[2]
	BL=16,TCY=1,LMX=1,LQY=1,MC=24,B=701,C=-40000000
// 1234:  M←M EOR Q
	BL=6,LMX=1
// 1235:  BRM2:      STORE, DGOTO NY7
	MS=42,MC=20,DGO=1,B=1201
// 1236:  R0←Z
//  
	BR=14,TXW=1,LR0=1
// 1237:  SKB1:      Z←M AND Q
	BL=10,LZX=1
// 1240:  SKE1:      Z←P, Q←2, GOTO NY1 IF Z#0
	RRN=1,TCX=1,THY=1,LQX=1,LZY=1,MC=3,B=1152,C=2
// 1241:  R0←Z←Z+Q, GOTO NY7
//  
	BR=14,BL=12,TXW=1,TAX=1,LZX=1,LR0=1,MC=20,VCY=1,B=1201
// 1242:  BRR1:      Z←R0←M AND NOT Q, Q←4B7, GOTO NY7 IF Z>=0
	BL=4,TCY=1,TXW=1,LQY=1,LZX=1,LR0=1,MC=5,B=1201,C=-40000000
// 1243:  Q+M, ROV, GOTO NY7
//  
// 
	BR=12,BL=14,MS=66,TAX=1,MC=20,VCY=1,B=1201
// 1244:  SUC1:      GOTO SUB IF Z<0
	MC=4,B=1654
// 1245:  M←Q+NOT M, ROV, GOTO ADD1
	BR=12,BL=3,MS=66,TAX=1,LMX=1,MC=20,VCY=1,B=1250
// 1246:  ADC1:      GOTO ADD IF Z>=0
	MC=5,B=1655
// 1247:  M←Q+M, .LOC, ROV
	BR=12,BL=14,MS=66,LOC=1,TAX=1,LMX=1,VCY=1
// 1250:  ADD1:      AR←M, Q←4B7, GOTO ADD2 IF CAR
	BL=14,SSP=1,TCY=1,LQY=1,LSPX=1,MC=46,B=1252,C=-40000000
// 1251:  XR←Z AND NOT Q, Z←P←P+1, GOTO NY2
	RRN=1,BR=4,SSP=6,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1,MC=20,B=1153
// 1252:  ADD2:      XR←Z OR Q, Z←P←P+1, GOTO NY2
//  
	RRN=1,BR=16,SSP=6,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1,MC=1,B=1153
// 1253:  SKR1:      Z←M, Q←2, GOTO CSTORE IF R0[2]
	BL=14,TCY=1,LQY=1,LZX=1,MC=24,B=701,C=2
// 1254:  STORE, Z←P, GOTO NY1 IF Z>=0
	RRN=1,MS=42,THY=1,LZY=1,MC=5,B=1152
// 1255:  R0←Z←Z+Q, GOTO NY7
//  
	BR=14,BL=12,TXW=1,TAX=1,LZX=1,LR0=1,MC=20,VCY=1,B=1201
// 1256:  SKM1:      Z←M AND Q, GOTO SKE1
//  
	BL=10,LZX=1,MC=1,B=1240
// 1257:  EAX1:      Z←H1
	RRN=2,THY=1,LZY=1
// 1260:  LDX1:      XR←M AND NOT Q ! Q AND Z, Z←P←P+1, GOTO NY2
//  
	RRN=1,BR=10,BL=4,SSP=6,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1,MC=1,B=1153
// 1261:  LDB1:      BR←M, Z←P←P+1, GOTO NY2
// 
	RRN=1,BL=14,SSP=2,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1,MC=20,B=1153
// 1262:  SKG1:      GOTO SKG2 IF OVFLW
	MC=57,B=1265
// 1263:  SKN1:      Z←P, Q←2, GOTO NY1 IF Z>=0
	RRN=1,TCX=1,THY=1,LQX=1,LZY=1,MC=5,B=1152,C=2
// 1264:  Z←R0←Z+Q, GOTO NY7
	BR=14,BL=12,TXW=1,TAX=1,LZX=1,LR0=1,MC=1,VCY=1,B=1201
// 1265:  SKG2:      Z←P, Q←2, GOTO NY1 IF Z<0
	RRN=1,TCX=1,THY=1,LQX=1,LZY=1,MC=4,B=1152,C=2
// 1266:  R0←Z←Z+Q, GOTO NY7
// 
	BR=14,BL=12,TXW=1,TAX=1,LZX=1,LR0=1,MC=1,VCY=1,B=1201
// 1267:  ROV1:      Q AND M, M←2, GOTO REO IF LB#0
	BL=10,TCY=1,LMY=1,MC=23,B=1274,C=2
// 1270:  Q AND M, Q←E1, GSB, GOTO ROV2 IF LB=0
	BL=10,MS=27,LQY=1,MC=22,TE1Y=1,B=1272
// 1271:  CLEAROV
	MS=73
// 1272:  ROV2:      GOTO NY1 IF NZ[16]
	MC=10,B=1152
// 1273:  Z←Q AND M, GOTO SKE1
	BL=10,LZX=1,MC=20,B=1240
// 1274:  REO:       Q←M←XR, Z←37777B3
	SSP=6,TCX=1,TSPY=1,LMY=1,LQY=1,LZX=1,C=37777000
// 1275:  M←M LCY 1
	BL=14,MS=1,LMX=1
// 1276:  M←M EOR Q, Q←1B3, DGOTO NY2
	BL=6,TCY=1,LMX=1,LQY=1,MC=1,DGO=1,B=1153,C=1000
// 1277:  M AND Q+Z, ROV, Z←P←P+1
// 
	RRN=1,BR=14,BL=10,MS=66,IHR=1,THY=1,TYW=1,TAX=1,LZY=1,LRN=1,VCY=1
// 1300:  RCH1:      M←M LCY 12, H2←0, GOTO RCH2 IF NZ[16]
	BL=14,MS=6,TYW=1,LMX=1,LRN=3,MC=10,B=1302
// 1301:  Q←77777B3
	TCX=1,LQX=1,C=-1000
// 1302:  RCH2:      M←M LCY 1, Z←AR, CALL CNA IF X<0
	MCONT=1,BL=14,SSP=1,MS=1,TSPY=1,LMX=1,LZY=1,MC=17,VCY=1,B=1326
// 1303:  M←M LCY 1, Z←AR, CALL CX IF X<0
	MCONT=1,BL=14,SSP=1,MS=1,TSPY=1,LMX=1,LZY=1,MC=17,VCY=1,B=1331
// 1304:  M←M LCY 1, Z←XR, CALL CA IF X<0
	MCONT=1,BL=14,SSP=6,MS=1,TSPY=1,LMX=1,LZY=1,MC=17,VCY=1,B=1327
// 1305:  M←M LCY 2, CALL CB IF X<0
	MCONT=1,BL=14,MS=2,LMX=1,MC=17,VCY=1,B=1330
// 1306:  M←M LCY 1, Z←BR, CALL CX IF X<0
	MCONT=1,BL=14,SSP=2,MS=1,TSPY=1,LMX=1,LZY=1,MC=17,VCY=1,B=1331
// 1307:  M←M LCY 1, Z←BR, CALL CA IF X<0
	MCONT=1,BL=14,SSP=2,MS=1,TSPY=1,LMX=1,LZY=1,MC=17,VCY=1,B=1327
// 1310:  M←M LCY 1, Z←AR, CALL CB IF X<0
	MCONT=1,BL=14,SSP=1,MS=1,TSPY=1,LMX=1,LZY=1,MC=17,VCY=1,B=1330
// 1311:  M←M LCY 1, Z←0, CALL CB IF X<0
	MCONT=1,BL=14,MS=1,LMX=1,LZY=1,MC=17,VCY=1,B=1330
// 1312:  M←M LCY 1, CALL CA IF X<0
	MCONT=1,BL=14,MS=1,LMX=1,MC=17,VCY=1,B=1327
// 1313:  M←M LCY 2, CALL CX IF X<0
	MCONT=1,BL=14,MS=2,LMX=1,MC=17,VCY=1,B=1331
// 1314:  Z←R0, CALL CCA IF A
	MCONT=1,THY=1,LZY=1,MC=33,B=1320
// 1315:  Z←H1, CALL CCB IF B
	MCONT=1,RRN=2,THY=1,LZY=1,MC=34,B=1322
// 1316:  Z←H2, CALL CCX IF D
	MCONT=1,RRN=3,THY=1,LZY=1,MC=47,B=1324
// 1317:  Z←P←P+1, GOTO NY2
// 
	RRN=1,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=20,B=1153
// 1320:  CCA:       M←AR, DRETURN
	MCONT=2,SSP=1,TSPY=1,LMY=1,MC=1,DGO=1
// 1321:  AR←M AND Q ! Z AND NOT Q
	BR=4,BL=10,SSP=1,LSPX=1
// 1322:  CCB:       M←BR, DRETURN
	MCONT=2,SSP=2,TSPY=1,LMY=1,MC=1,DGO=1
// 1323:  BR←M AND Q ! Z AND NOT Q
	BR=4,BL=10,SSP=2,LSPX=1
// 1324:  CCX:       XR←Z AND NOT Q, RETURN IF NZ[15]
	MCONT=2,BR=4,SSP=6,LSPX=1,MC=7
// 1325:  XR←Z OR Q, RETURN
// 
	MCONT=2,BR=16,SSP=6,LSPX=1,MC=20
// 1326:  CNA:       Z←NOT Z+1
	BR=3,LOC=1,TAX=1,LZX=1,VCY=1
// 1327:  CA:        R0←R0, .TXW, Z, SETA, RETURN
	MCONT=2,BR=14,MS=30,THY=1,TXW=1,TYW=1,LR0=1,MC=20
// 1330:  CB:        H1←H1, .TXW, Z, SETB, RETURN
	MCONT=2,RRN=2,BR=14,MS=26,THY=1,TXW=1,TYW=1,LRN=2,MC=1
// 1331:  CX:        H2←H2, .TXW, Z, SETD, RETURN
// 
	MCONT=2,RRN=3,BR=14,MS=36,THY=1,TXW=1,TYW=1,LRN=3,MC=20
// 1332:  SKD1:      M←Z AND Q, Z←BR, GOTO SKD2 IF NZ[15]
	BR=10,SSP=2,TSPY=1,LMX=1,LZY=1,MC=7,B=1334
// 1333:  M←M OR NOT Q
	BL=15,LMX=1
// 1334:  SKD2:      Q←Z AND Q, Z←777B, GOTO SKD3 IF NZ[15]
	BR=10,TCY=1,LQX=1,LZY=1,MC=7,B=1336,C=777
// 1335:  Q←Q OR NOT Z
	BR=13,LQX=1
// 1336:  SKD3:      R0←Z←Q-M
	BR=12,BL=3,LOC=1,TXW=1,TAX=1,LZX=1,LR0=1,VCY=1
// 1337:  M←Q EOR M, Q←777B, GOTO SKD4 IF R0>=0
	BL=6,TCY=1,LMX=1,LQY=1,MC=12,B=1341,C=777
// 1340:  Z←NOT Z+1
	BR=3,LOC=1,TAX=1,LZX=1,VCY=1
// 1341:  SKD4:      XR←M AND NOT Q ! Q AND Z, Z←R0, GOTO SKN1
// 
	BR=10,BL=4,SSP=6,THY=1,LZY=1,LSPX=1,MC=20,B=1263
// 1342:  RS1:       R0←M LCY 8, M←H1
	RRN=2,BL=14,MS=5,THY=1,TXW=1,LMY=1,LR0=1
// 1343:  CLEARA, M←M AND Q, Q←48, DGOTO RCY IF R0[2]
	BL=10,MS=50,TCY=1,LMX=1,LQY=1,MC=24,DGO=1,B=1346,C=60
// 1344:  Z←NOT M+1, M←H3, DGOTO ASDR IF NR0[2]
	RRN=4,BL=3,LOC=1,THY=1,TAX=1,LMY=1,LZX=1,MC=25,DGO=1,VCY=1,B=534
// 1345:  M←BR, Q←77B, GOTO NY1 IF Z=0
	SSP=2,TCX=1,TSPY=1,LMY=1,LQX=1,MC=2,B=1152,C=77
// 1346:  RCY:       M LCY 12, Q←48, GOTO LRSH IF X<0
	BL=14,MS=6,TCY=1,LQY=1,MC=17,VCY=1,B=1351,C=60
// 1347:  R0←Z←Q+Z, DGOTO CYDL
	BR=14,BL=12,TXW=1,TAX=1,LZX=1,LR0=1,MC=20,DGO=1,VCY=1,B=452
// 1350:  Q←77B, GOTO NX1 IF R0<0
	TCX=1,LQX=1,MC=11,B=34,C=77
// 1351:  LRSH:      M←BR, Q←77B, SETA, GOTO ASDR
	SSP=2,MS=30,TCX=1,TSPY=1,LMY=1,LQX=1,MC=20,B=534,C=77
// 1352:  LS1:       M←M LCY 2, Z←H1
	RRN=2,BL=14,MS=2,THY=1,LMX=1,LZY=1
// 1353:  CLEARA, Z←Z AND Q, R0←Q←48, GOTO NORM IF M[9]
	BR=10,MS=50,TCY=1,TYW=1,LQY=1,LZX=1,LR0=1,MC=71,B=1356,C=60
// 1354:  M LCY 8, M←BR, GOTO ASDL IF X>=0
	BL=14,SSP=2,MS=5,TSPY=1,LMY=1,MC=16,VCY=1,B=511
// 1355:  R0←Q-Z, DGOTO CYDL
	BR=3,BL=12,LOC=1,TXW=1,TAX=1,LR0=1,MC=20,DGO=1,VCY=1,B=452
// 1356:  NORM:      S←M←AR, SETC, GOTO NY1 IF R0<0
	SSP=1,MS=35,TSPY=1,TYW=1,LMY=1,LRN=2,MC=11,B=1152
// 1357:  Q←BR, K←Z, SETBB, CALL LLT1
	MCONT=1,BR=14,SSP=2,MS=60,TSPY=1,TXW=1,LQY=1,LRN=3,MC=20,B=636
// 1360:  Z←Z-1, M←XR, GOTO NORM1 IF Z#0
	BR=14,BL=17,SSP=6,TSPY=1,TAX=1,LMY=1,LZX=1,MC=3,VCY=1,B=1363
// 1361:  Z←47, S, GOTO NORM1 IF Y<0
	RRN=2,TCX=1,THY=1,LZX=1,MC=53,VCY=1,B=1363,C=57
// 1362:  Z←48
	TCX=1,LZX=1,C=60
// 1363:  NORM1:     Q-Z, GOTO NORM2 IF X>=0
	BR=3,BL=12,LOC=1,TAX=1,MC=16,VCY=1,B=1365
// 1364:  Z←Q
	BL=12,LZX=1
// 1365:  NORM2:     XR←M-Z, DGOTO ASDL
	BR=3,BL=14,SSP=6,LOC=1,TAX=1,LSPX=1,MC=20,DGO=1,VCY=1,B=511
// 1366:  M←BR, SETA
// 
// 
	SSP=2,MS=30,TSPY=1,LMY=1
// 1367:  POP940:    H3, GOTO SYSPOP IF Y<0
	RRN=4,THY=1,MC=53,VCY=1,B=1374
// 1370:  M←H2, R0←0
	RRN=3,THY=1,TXW=1,LMY=1,LR0=1
// 1371:  MAP, .VCY, R0←E1, Q←376B5, GOTO CSTORE IF STERR
	MS=37,TCX=1,TYW=1,LQX=1,LR0=1,MC=32,VCY=1,TE1Y=1,B=701,C=37600000
// 1372:  Z←M AND Q LCY 8, Q←4324B4, DGOTO BRM3
	BL=10,MS=5,TCY=1,LQY=1,LZX=1,MC=1,DGO=1,B=1233,C=-34540000
// 1373:  M←P, CLEAROV, DGOTO BRM2 IF OV
// 
	RRN=1,MS=73,THY=1,LMY=1,MC=37,DGO=1,B=1235
// 1374:  SYSPOP:    CLEARA, DGOTO NY4
	MS=50,MC=1,DGO=1,B=1156
// 1375:  GOTO INDEX IF M[1]
// 
// 
// 
// 
	MC=21,B=1203
// 1376:  R0←P+1, GOTO NX6 IF XPAGE
	RRN=1,IHR=1,THY=1,TYW=1,LR0=1,MC=42,B=32
// 1377:  GOTO NY3
	MC=20,B=1154
// 
// 
//   MAIN INSTRUCTION TABLE
// 

// 1400:  TI:        IR←X←7, .LQY, GOTO FIXTRP
	TCX=1,TXW=1,LQY=1,LRN=4,MC=1,B=1046,C=7
// 1401:          CALL 1776B
	MCONT=1,MC=20,B=1776
// 1402:  Z←P←P+1, DGOTO NX2
	RRN=1,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=1,DGO=1,B=35
// 1403:  RES←AR←M
	BL=14,SSP=1,TXW=1,LRN=5,LSPX=1
// 1404:  Z←P←P+1, DGOTO NX2
	RRN=1,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=1,DGO=1,B=35
// 1405:  RES←BR←M
	BL=14,SSP=2,TXW=1,LRN=5,LSPX=1
// 1406:  Z←P←P+1, DGOTO NX2
	RRN=1,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=1,DGO=1,B=35
// 1407:  XR←M
	BL=14,SSP=6,LSPX=1
// 1410:  Q←SR, CALL DBL IF AORB
	MCONT=1,SSP=11,TSPY=1,LQY=1,MC=51,B=405
// 1411:  AR←M, R0←S←R6+1, GOTO LDD1
	RRN=6,BL=14,SSP=1,IHR=1,THY=1,TYW=1,LRN=2,LR0=1,LSPX=1,MC=20,B=417
// 1412:  RESETCM, DGOTO NX2
	MS=24,MC=1,DGO=1,B=35
// 1413:  XR←Z, Z←P←P+1, GOTO BRUA IF A
	RRN=1,BR=14,SSP=6,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1,MC=33,B=412
// 1414:  Z←P←P+1, DGOTO NX2
	RRN=1,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=1,DGO=1,B=35
// 1415:  XR← NOT M+1
	BL=3,SSP=6,LOC=1,TAX=1,LSPX=1,VCY=1
// 1416:  K←Q, DGOTO XMAA
	BL=12,TXW=1,LRN=3,MC=1,DGO=1,B=425
// 1417:  GOTO TI IF A
	MC=33,B=1400
// 1420:  Z←P←P+1, DGOTO NX2
	RRN=1,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=1,DGO=1,B=35
// 1421:  RES←AR←M AND Q
	BL=10,SSP=1,TXW=1,LRN=5,LSPX=1
// 1422:  Z←P←P+1, DGOTO NX2
	RRN=1,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=1,DGO=1,B=35
// 1423:  RES←AR←M OR Q
	BL=16,SSP=1,TXW=1,LRN=5,LSPX=1
// 1424:  EOR:       Z←P←P+1, DGOTO NX2
	RRN=1,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=1,DGO=1,B=35
// 1425:  RES←AR←M EOR Q
	BL=6,SSP=1,TXW=1,LRN=5,LSPX=1
// 1426:  Q←40B, Z←SR, DGOTO STD1
	SSP=11,TCX=1,TSPY=1,LQX=1,LZY=1,MC=1,DGO=1,B=431,C=40
// 1427:  K←R6, M←Z AND NOT Q, GOTO CSTORE IF R0[2]
	RRN=6,BR=4,THY=1,TYW=1,LMX=1,LRN=3,MC=24,B=701
// 1430:  STFX:      IR←M←BR, Z←Q, SETBB, DGOTO STF1
	BL=12,SSP=2,MS=60,TSPY=1,TYW=1,LMY=1,LZX=1,LRN=4,MC=1,DGO=1,B=1177
// 1431:  K←ER, Q←7777B, SETBB, CALL FROUND
	MCONT=1,SSP=5,MS=60,TCX=1,TSPY=1,TYW=1,LQX=1,LRN=3,MC=20,B=1160,C=7777
// 1432:  M←Q, GOTO STRFLD IF ST
	BL=12,LMX=1,MC=62,B=362
// 1433:  STORE, Z←P←P+1, GOTO NX2
	RRN=1,MS=42,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=20,B=35
// 1434:  M←BR, GOTO STRFLD IF ST
	SSP=2,TSPY=1,LMY=1,MC=62,B=362
// 1435:  STORE, Z←P←P+1, GOTO NX2
	RRN=1,MS=42,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=20,B=35
// 1436:  M←XR, GOTO STRFLD IF ST
	SSP=6,TSPY=1,LMY=1,MC=62,B=362
// 1437:  STORE, Z←P←P+1, GOTO NX2
	RRN=1,MS=42,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=20,B=35
// 1440:  Z←P←P+1, DGOTO NX2
	RRN=1,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=1,DGO=1,B=35
// 1441:  RES←AR←M+Q, ROV
	BR=12,BL=14,SSP=1,MS=66,TXW=1,TAX=1,LRN=5,LSPX=1,VCY=1
// 1442:  SUCA:      Z←P←P+1, DGOTO NX2
	RRN=1,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=1,DGO=1,B=35
// 1443:  RES←AR←Q-M, ROV
	BR=12,BL=3,SSP=1,MS=66,LOC=1,TXW=1,TAX=1,LRN=5,LSPX=1,VCY=1
// 1444:  GOTO ADCA IF CAR
	MC=46,B=1553
// 1445:  RES←AR←M+Q, ROV, GOTO NX1
	BR=12,BL=14,SSP=1,MS=66,TXW=1,TAX=1,LRN=5,LSPX=1,MC=20,VCY=1,B=34
// 1446:  GOTO SUCA IF CAR
	MC=46,B=1442
// 1447:  RES←AR←NOT M+Q, ROV, GOTO NX1
	BR=12,BL=3,SSP=1,MS=66,TXW=1,TAX=1,LRN=5,LSPX=1,MC=20,VCY=1,B=34
// 1450:  K←M←M+Q, ROV, DGOTO XMAA
	BR=12,BL=14,MS=66,TXW=1,TAX=1,LMX=1,LRN=3,MC=1,DGO=1,VCY=1,B=425
// 1451:  GOTO TI IF A
	MC=33,B=1400
// 1452:  Q←XR, DGOTO NX2
	SSP=6,TSPY=1,LQY=1,MC=1,DGO=1,B=35
// 1453:  XR←Q+M, Z←P←P+1
	RRN=1,BR=12,BL=14,SSP=6,IHR=1,THY=1,TYW=1,TAX=1,LZY=1,LRN=1,LSPX=1,VCY=1
// 1454:  AR←RES←M←M+1, ROV, GOTO STRFLD IF ST
	BL=14,SSP=1,MS=66,LOC=1,TXW=1,TAX=1,LMX=1,LRN=5,LSPX=1,MC=62,VCY=1,B=362
// 1455:  STORE, Z←P←P+1, GOTO NX2
	RRN=1,MS=42,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=20,B=35
// 1456:  AR←RES←M←M-1, ROV, GOTO STRFLD IF ST
	BR=17,BL=14,SSP=1,MS=66,TXW=1,TAX=1,LMX=1,LRN=5,LSPX=1,MC=62,VCY=1,B=362
// 1457:  STORE, Z←P←P+1, GOTO NX2
	RRN=1,MS=42,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=20,B=35
// 1460:  MUL:           MH1←Q, K←0, DGOTO MUL1, .LSPX←0
	BL=12,SSP=40,TYW=1,LRN=3,MC=1,DGO=1,B=557
// 1461:  M, R0←AR, CLEARTOV, GOTO MUL2 IF X<0
	BL=14,SSP=1,MS=67,TSPY=1,TYW=1,LR0=1,MC=17,VCY=1,B=552
// 1462:  DIV:       IR←Q←M, Z←M←AR, ABCD0, DGOTO DIV1
	BL=14,SSP=1,MS=70,TSPY=1,TXW=1,LMY=1,LQX=1,LZY=1,LRN=4,MC=1,DGO=1,B=600
// 1463:  S←M EOR Q, Z←BR, SETA, GOTO DIV11 IF Z<0
	BL=6,SSP=2,MS=30,TSPY=1,TXW=1,LZY=1,LRN=2,MC=4,B=672
// 1464:  RES←Q←Q-M, M←4B7, HROV, DGOTO NX2
	BR=12,BL=3,MS=57,LOC=1,TCY=1,TXW=1,TAX=1,LMY=1,LQX=1,LRN=5,MC=1,DGO=1,VCY=1,B=35,C=-40000000
// 1465:  Z←P←P+1, GOTO ICP1 IF OVFLW
	RRN=1,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=57,B=671
// 1466:  Z←P←P+1, DGOTO NX2
	RRN=1,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=1,DGO=1,B=35
// 1467:  RES←M
	BL=14,TXW=1,LRN=5
// 1470:  Z←P←P+1, DGOTO NX2
	RRN=1,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=1,DGO=1,B=35
// 1471:  RES←M AND Q
	BL=10,TXW=1,LRN=5
// 1472:  IR←R0, DGOTO ISD1
	THY=1,TYW=1,LRN=4,MC=1,DGO=1,B=623
// 1473:  Q←Z←M, R0←R6+1, CALL DBL IF AORB
	MCONT=1,RRN=6,BL=14,IHR=1,THY=1,TYW=1,LQX=1,LZX=1,LR0=1,MC=51,B=405
// 1474:  R0←R6+1, DGOTO DSD1
	RRN=6,IHR=1,THY=1,TYW=1,LR0=1,MC=1,DGO=1,B=637
// 1475:  Z←M, CALL DBL IF AORB
	MCONT=1,BL=14,LZX=1,MC=51,B=405
// 1476:  S←Z, Q←7B7, ABCD0, DGOTO EXUA
	BR=14,MS=70,TCY=1,TXW=1,LQY=1,LRN=2,MC=1,DGO=1,B=415,C=-10000000
// 1477:  ILIM←0, GOTO TOSP IF INTRPT1
	SSP=20,LSPX=1,MC=64,B=1057
// 1500:  Z←M, Q←77B, CLEARA, DGOTO ASDL
	BL=14,MS=50,TCY=1,LQY=1,LZX=1,MC=1,DGO=1,B=511,C=77
// 1501:  M←BR, Z←Q AND M, CLEARTOV, GOTO ASDR IF Z<0
	BL=10,SSP=2,MS=67,TSPY=1,LMY=1,LZX=1,MC=4,B=534
// 1502:  Z←M, Q←77B, CLEARA, DGOTO ASAL
	BL=14,MS=50,TCY=1,LQY=1,LZX=1,MC=1,DGO=1,B=466,C=77
// 1503:  Z←Q AND M, CLEARTOV, GOTO ASAR IF Z<0
	BL=10,MS=67,LZX=1,MC=4,B=500
// 1504:  Z←M, Q←77B, SETA, DGOTO ASDL
	BL=14,MS=30,TCY=1,LQY=1,LZX=1,MC=1,DGO=1,B=511,C=77
// 1505:  Z←Q AND M, M←BR, GOTO ASDR IF Z<0
	BL=10,SSP=2,TSPY=1,LMY=1,LZX=1,MC=4,B=534
// 1506:  Z←M, Q←77B, SETA, DGOTO ASAL
	BL=14,MS=30,TCY=1,LQY=1,LZX=1,MC=1,DGO=1,B=466,C=77
// 1507:  Z←Q AND M, GOTO ASAR IF Z<0
	BL=10,LZX=1,MC=4,B=500
// 1510:  Z←M, Q←77B, DGOTO CYDL
	BL=14,TCY=1,LQY=1,LZX=1,MC=1,DGO=1,B=452,C=77
// 1511:  Z←Q AND M, GOTO CYDR IF Z<0
	BL=10,LZX=1,MC=4,B=463
// 1512:  Z←M, Q←77B, DGOTO CYAL
	BL=14,TCY=1,LQY=1,LZX=1,MC=1,DGO=1,B=441,C=77
// 1513:  Z←Q AND M, M←24, GOTO CYAR IF Z<0
	BL=10,TCY=1,LMY=1,LZX=1,MC=4,B=445,C=30
// 1514:  DGOTO TSB1
	MC=1,DGO=1,B=660
// 1515:  IR←M, CALL GETSR
	MCONT=1,BL=14,TXW=1,LRN=4,MC=20,B=662
// 1516:  Q←R6 MRG 4B6, RESETCM, DGOTO NX2
	RRN=6,MS=24,TCY=1,THY=1,LQY=1,MC=1,DGO=1,B=35,C=4000000
// 1517:  XR←Q, Z←P←P+1, GOTO BRUA IF A
	RRN=1,BL=12,SSP=6,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1,MC=33,B=412
// 1520:  BRU:       P←Z, R0+1, TAKE, DGOTO NX3
	BR=14,MS=75,IHR=1,THY=1,TXW=1,LRN=1,MC=1,DGO=1,B=36
// 1521:  R6←M, Q←7B7, SABCDE0, GOTO BRUA IF INTRPT
	BL=14,MS=33,TCY=1,TXW=1,LQY=1,LRN=6,MC=41,B=412,C=-10000000
// 1522:  Z←RES, DGOTO BRU
	RRN=5,THY=1,LZY=1,MC=1,DGO=1,B=1520
// 1523:  Z←R6, GOTO SKIP IF Z>=0
	RRN=6,THY=1,LZY=1,MC=5,B=410
// 1524:  Z←RES, DGOTO BRU
	RRN=5,THY=1,LZY=1,MC=1,DGO=1,B=1520
// 1525:  Z←R6, GOTO SKIP IF Z#0
	RRN=6,THY=1,LZY=1,MC=3,B=410
// 1526:  Z←RES, DGOTO BRU
	RRN=5,THY=1,LZY=1,MC=1,DGO=1,B=1520
// 1527:  Z←R6, GOTO SKIP IF Z>0
	RRN=6,THY=1,LZY=1,MC=6,B=410
// 1530:  Z←RES, DGOTO BRU
	RRN=5,THY=1,LZY=1,MC=1,DGO=1,B=1520
// 1531:  Z←R6, GOTO SKIP IF Z<=0
	RRN=6,THY=1,LZY=1,MC=13,B=410
// 1532:  Z←RES, DGOTO BRU
	RRN=5,THY=1,LZY=1,MC=1,DGO=1,B=1520
// 1533:  Z←R6, GOTO SKIP IF Z=0
	RRN=6,THY=1,LZY=1,MC=2,B=410
// 1534:  Z←RES, DGOTO BRU
	RRN=5,THY=1,LZY=1,MC=1,DGO=1,B=1520
// 1535:  Z←R6, GOTO SKIP IF Z<0
	RRN=6,THY=1,LZY=1,MC=4,B=410
// 1536:  Q←GR, Z←200B, SETBB, DGOTO BLL1
	SSP=10,MS=60,TCX=1,TSPY=1,LQY=1,LZX=1,MC=1,DGO=1,B=12,C=200
// 1537:  NEWG←Q, Q←77B6, CALL DBL IF AORB
	MCONT=1,BL=12,SSP=25,TCY=1,LQY=1,LSPX=1,MC=51,B=405,C=-1000000
// 1540:  Q←GR, Z←40000200B, SETBB, DGOTO BLL1
	SSP=10,MS=60,TCX=1,TSPY=1,LQY=1,LZX=1,MC=1,DGO=1,B=12,C=-37777600
// 1541:  NEWG←Q, Q←77B6, CALL DBL IF AORB
	MCONT=1,BL=12,SSP=25,TCY=1,LQY=1,LSPX=1,MC=51,B=405,C=-1000000
// 1542:  IR←XR, DGOTO BRXA
	SSP=6,TSPY=1,TYW=1,LRN=4,MC=1,DGO=1,B=1555
// 1543:  Z←IR+1, DGOTO BRU
	RRN=4,IHR=1,THY=1,LZY=1,MC=20,DGO=1,B=1520
// 1544:  Z←P+1, DGOTO BRU
	RRN=1,IHR=1,THY=1,LZY=1,MC=1,DGO=1,B=1520
// 1545:  XR←Z, Z←R6
	RRN=6,BR=14,SSP=6,THY=1,LZY=1,LSPX=1
// 1546:  IR←M, Q←1, DGOTO SRS1
	BL=14,TCY=1,TXW=1,LQY=1,LRN=4,MC=1,DGO=1,B=653,C=1
// 1547:  R0←M AND Q, CALL GETSR
	MCONT=1,BL=10,TXW=1,LR0=1,MC=20,B=662
// 1550:  IR←XR, Q←7B7, SETBB, DGOTO EAC1
	SSP=6,MS=60,TCX=1,TSPY=1,TYW=1,LQX=1,LRN=4,MC=1,DGO=1,B=716,C=-10000000
// 1551:  S←Z, CALL DBL IF AORB
	MCONT=1,BR=14,TXW=1,LRN=2,MC=51,B=405
// 1552:  GOTO TI
	MC=1,B=1400
// 1553:  ADCA:      RES←AR←M+Q, .LOC, ROV, GOTO NX1
	BR=12,BL=14,SSP=1,MS=66,LOC=1,TXW=1,TAX=1,LRN=5,LSPX=1,MC=20,VCY=1,B=34
// 1554:  GOTO TI
	MC=1,B=1400
// 1555:  BRXA:      Z←R6, XR←Z, GOTO SKIP IF Z>=0
	RRN=6,BR=14,SSP=6,THY=1,LZY=1,LSPX=1,MC=5,B=410
// 1556:  GOTO TI
	MC=1,B=1400
// 1557:  CALL 1776B
	MCONT=1,MC=20,B=1776
// 1560:  SETBB, DGOTO FLX1
	MS=60,MC=1,DGO=1,B=1242
// 1561:  Q←2B7, SETBB, CALL FOP
	MCONT=1,MS=60,TCX=1,LQX=1,MC=20,B=1255,C=20000000
// 1562:  Q←2B7, SETBB, CALL FOP
	MCONT=1,MS=60,TCX=1,LQX=1,MC=1,B=1255,C=20000000
// 1563:  ER←Q, SETBB, GOTO FLD1
	BL=12,SSP=5,MS=60,LSPX=1,MC=20,B=1037
// 1564:  IR←Q, Q←2B7, SETBB, CALL FOP
	MCONT=1,BL=12,MS=60,TCY=1,TXW=1,LQY=1,LRN=4,MC=1,B=1255,C=20000000
// 1565:  RES←Q←IR MRG 1, M←Q, SETBB, GOTO FCP1
	RRN=4,BL=12,MS=60,TCY=1,THY=1,TYW=1,LMX=1,LQY=1,LRN=5,MC=20,B=1146,C=1
// 1566:  IR←Q, Q←2B7, SETBB, CALL FOP
	MCONT=1,BL=12,MS=60,TCY=1,TXW=1,LQY=1,LRN=4,MC=1,B=1255,C=20000000
// 1567:  Z←ER, R0←Q, SETBB, GOTO FAD1
	BL=12,SSP=5,MS=60,TSPY=1,TXW=1,LZY=1,LR0=1,MC=20,B=775
// 1570:  SETBB, DGOTO FSB1
	MS=60,MC=1,DGO=1,B=1033
// 1571:  IR←Q, Q←2B7, SETBB, CALL FOP
	MCONT=1,BL=12,MS=60,TCY=1,TXW=1,LQY=1,LRN=4,MC=20,B=1255,C=20000000
// 1572:  Q←2B7, CALL DBL IF AORB
	MCONT=1,TCX=1,LQX=1,MC=51,B=405,C=20000000
// 1573:  M←M EOR Q, Q←2001B4, SETBB, GOTO FMUL1
	BL=6,MS=60,TCY=1,LMX=1,LQY=1,MC=20,B=1041,C=20010000
// 1574:  Q←2B7, SETBB, CALL FOP
	MCONT=1,MS=60,TCX=1,LQX=1,MC=1,B=1255,C=20000000
// 1575:  S←Z, SETBB, GOTO FDIV1
	BR=14,MS=60,TXW=1,LRN=2,MC=20,B=1077
// 1576:  R0←NOT M, Q←MAXOPR, SETBB, DGOTO OPR1
	BL=3,MS=60,TCY=1,TXW=1,LQY=1,LR0=1,MC=1,DGO=1,B=500,C=55
// 1577:  R0←M-Q, Q←R0+1, SETBB, GOTO SYSCLL IF R0>=0
// 
// 
// 
//   TABLE OF INSTRUCTIONS IN 940 COMPATIBILITY MODE
//     H1 = EFFECTIVE ADDRESS
//     H2 = INSTRUCTION WORD
//     H3 = EFFECTIVE ADDRESS BEFORE X MODIFICATION
//     M = CONTENTS(H1), BUT NO CHECK HAS BEEN EXECUTED
//       FOR PAGE-FAULT
//     Q = A REGISTER, R0 = MAP(H1)
//   A DGOTO ASGNA IS IN PROGRESS
// 
	BR=5,BL=14,MS=60,LOC=1,IHR=1,THY=1,TXW=1,TAX=1,LQY=1,LR0=1,MC=12,VCY=1,B=503
// 1600:  GOTO TI
	MC=1,B=1400
// 1601:  P←Z, Z←H1, GOTO BRU1 IF R0>=0, ABCD0
	RRN=2,MS=70,THY=1,BR=14,TXW=1,LZY=1,LRN=1,MC=12,B=1224
// 1602:  GOTO TI
	MC=1,B=1400
// 1603:  GOTO TI1
	MC=20,B=407
// 1604:  GOTO TI
	MC=1,B=1400
// 1605:  GOTO TI1
	MC=20,B=407
// 1606:  GOTO TI
	MC=1,B=1400
// 1607:  GOTO TI1
	MC=20,B=407
// 1610:  GOTO TI
	MC=1,B=1400
// 1611:  GOTO TI1
	MC=20,B=407
// 1612:  GOTO TI
	MC=1,B=1400
// 1613:  GOTO TI1
	MC=20,B=407
// 1614:  M←M AND Q
	BL=10,LMX=1
// 1615:  GOTO TI1
	MC=20,B=407
// 1616:  M←M OR Q
	BL=16,LMX=1
// 1617:  M←M EOR Q
	BL=6,LMX=1
// 1620:  Z←P←P+1, GOTO NY2
	RRN=1,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=1,B=1153
// 1621:  GOTO TI
	MC=20,B=1400
// 1622:  Q←Z←H2, M←20B, GOTO ROV1
	RRN=3,TCX=1,THY=1,LMX=1,LQY=1,LZY=1,MC=1,B=1267,C=20
// 1623:  GOTO NY3 IF R0>=0
	MC=12,B=1154
// 1624:  GOTO TI
	MC=1,B=1400
// 1625:  GOTO TI1
	MC=20,B=407
// 1626:  GOTO TI
	MC=1,B=1400
// 1627:  GOTO TI1
	MC=20,B=407
// 1630:  GOTO TI
	MC=1,B=1400
// 1631:  GOTO TI1
	MC=20,B=407
// 1632:  GOTO TI
	MC=1,B=1400
// 1633:  GOTO TI1
	MC=20,B=407
// 1634:  GOTO TI
	MC=1,B=1400
// 1635:  M←Q,   GOTO ST940 IF R0>=0, RESETCM
	BL=12,MS=24,LMX=1,MC=12,B=1230
// 1636:  M←BR,   GOTO ST940 IF R0>=0, RESETCM
	SSP=2,MS=24,TSPY=1,LMY=1,MC=12,B=1230
// 1637:  M←XR,   GOTO ST940 IF R0>=0, RESETCM
	SSP=6,MS=24,TSPY=1,LMY=1,MC=12,B=1230
// 1640:  GOTO TI
	MC=1,B=1400
// 1641:  Z←XR, GOTO BRX1
	SSP=6,TSPY=1,LZY=1,MC=1,B=1221
// 1642:  GOTO TI
	MC=1,B=1400
// 1643:  M←P, Q←432B5,  GOTO BRM1 IF R0>=0, RESETCM
	RRN=1,MS=24,TCX=1,THY=1,LMY=1,LQX=1,MC=12,B=1232,C=-34600000
// 1644:  GOTO TI
	MC=1,B=1400
// 1645:  GOTO TI
	MC=20,B=1400
// 1646:  RCH:       M←Z←H2, Q←R0←H1←0, ABCD0, GOTO RCH1
	RRN=3,MS=70,THY=1,TXW=1,LMY=1,LQX=1,LZY=1,LRN=2,LR0=1,MC=1,B=1300
// 1647:  GOTO TI
	MC=20,B=1400
// 1650:  Z←M EOR Q, GOTO SKE1 IF R0>=0
	BL=6,LZX=1,MC=12,B=1240
// 1651:  Z←M←M+1, Q←7774B4, GOTO BRR1 IF R0>=0
	BL=14,LOC=1,TCY=1,TAX=1,LMX=1,LQY=1,LZX=1,MC=12,VCY=1,B=1242,C=-40000
// 1652:  Q←BR, GOTO SKB1 IF R0>=0
	SSP=2,TSPY=1,LQY=1,MC=12,B=1237
// 1653:  Z←M, GOTO SKN1 IF R0>=0
	BL=14,LZX=1,MC=12,B=1263
// 1654:  SUB:       M←Q-M, ROV, Z←XR, GOTO ADD1 IF R0>=0
	BR=12,BL=3,SSP=6,MS=66,LOC=1,TSPY=1,TAX=1,LMX=1,LZY=1,MC=12,VCY=1,B=1250
// 1655:  ADD:       M←Q+M, ROV, Z←XR, GOTO ADD1 IF R0>=0
	BR=12,BL=14,SSP=6,MS=66,TSPY=1,TAX=1,LMX=1,LZY=1,MC=12,VCY=1,B=1250
// 1656:  Z←XR, CLEAROV, GOTO SUC1 IF R0>=0
	SSP=6,MS=73,TSPY=1,LZY=1,MC=12,B=1244
// 1657:  Z←XR, CLEAROV, GOTO ADC1 IF R0>=0
	SSP=6,MS=73,TSPY=1,LZY=1,MC=12,B=1246
// 1660:  M←M-1, ROV, GOTO SKR1 IF R0>=0
	BR=17,BL=14,MS=66,TAX=1,LMX=1,MC=12,VCY=1,B=1253
// 1661:  M←M+1, ROV, GOTO ST940 IF R0>=0
	BL=14,MS=66,LOC=1,TAX=1,LMX=1,MC=12,VCY=1,B=1230
// 1662:  H1←Q, GOTO XMA1 IF R0>=0
	BL=12,TXW=1,LRN=2,MC=12,B=1226
// 1663:  M←Q+M, ROV, GOTO ST940 IF R0>=0
	BR=12,BL=14,MS=66,TAX=1,LMX=1,MC=12,VCY=1,B=1230
// 1664:  GOTO MUL IF R0>=0
	MC=12,B=1460
// 1665:  GOTO DIV IF R0>=0
	MC=12,B=1462
// 1666:  RS:        RESETCM, M←H3, Q←777B, GOTO RS1
	RRN=4,MS=24,TCX=1,THY=1,LMY=1,LQX=1,MC=1,B=1342,C=777
// 1667:  LS:        RESETCM, M←H3, Q←777B, GOTO LS1
	RRN=4,MS=24,TCX=1,THY=1,LMY=1,LQX=1,MC=20,B=1352,C=777
// 1670:  M←M EOR Q, Q←BR, GOTO SKM1 IF R0>=0
	BL=6,SSP=2,TSPY=1,LMX=1,LQY=1,MC=12,B=1256
// 1671:  Q←0, GOTO LDX1 IF R0>=0
	LQX=1,MC=12,B=1260
// 1672:  Z←M AND Q, GOTO SKE1 IF R0>=0
	BL=10,LZX=1,MC=12,B=1240
// 1673:  Z←M-Q, HROV, GOTO SKG1 IF R0>=0
	BR=5,BL=14,MS=57,LOC=1,TAX=1,LZX=1,MC=12,VCY=1,B=1262
// 1674:  Z←M, Q←777B, GOTO SKD1 IF R0>=0
	BL=14,TCY=1,LQY=1,LZX=1,MC=12,B=1332,C=777
// 1675:  GOTO LDB1 IF R0>=0
	MC=12,B=1261
// 1676:  R0←R0
	THY=1,TYW=1,LR0=1
// 1677:  M←XR, Q←37777B, RESETCM, GOTO EAX1
// 
//  
//    THIS TEXT IS BEING ADDED TO THE QUASI-COPY OF RECORD
//    FOR THE CPU 1.5, AND INCLUDES ADDITIONAL SOURCE
//    INSTRUCTIONS FOR LOCATIONS 1700B TO 1714B....  JD 4/12/73
	SSP=6,MS=24,TCX=1,TSPY=1,LMY=1,LQX=1,MC=20,B=1257,C=37777
// 1700:  BREAK:     Q←12343210B, FETCH, DGOTO NEXT
	MS=44,TCX=1,LQX=1,MC=20,DGO=1,B=657,C=12343210
// 1701:  Q EOR M, GOTO TOSP IF LB=0
	BL=6,MC=22,B=1057
// 1702:  INDA:      M←M AND Q ! Z AND NOT Q, GOTO NY4
	BR=4,BL=10,LMX=1,MC=1,B=1156
// 1703:  LDM1:      ZTOMAP, Z←P←P+1, GOTO NX2
	RRN=1,MS=53,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=1,B=35
// 1704:  IDLE6:     2, UNPROTECT, GOTO IDLE2
	MS=20,TCX=1,MC=20,B=1135,C=2
// 1705:  RES←0, GOTO NX1
	TXW=1,LRN=5,MC=20,B=34
// 1706:  GOTO NY8 IF XPAGE
	MC=42,B=1177
// 1707:  GOTO TOSP
	MC=1,B=1057
// 1710:  P←Z, GOTO BRU1 IF R0>=0
	BR=14,TXW=1,LRN=1,MC=12,B=1224
// 1711:  GOTO PAGEF
	MC=1,B=700
// 1712:  Q←E1, GSB
	MS=27,TE1Y=1,LQY=1
// 1713:  Q←Q LCY 2, R0←P+1, DGOTO NY8
	RRN=1,BL=12,MS=2,IHR=1,THY=1,TYW=1,LQX=1,LR0=1,MC=20,DGO=1,B=1177
// 1714:  Q LCY 12, Q←7B7, GOTO NX6 IF X>=0
	BL=12,MS=6,TCY=1,LQY=1,MC=16,VCY=1,B=32,C=-10000000
// 1715:  PATCH: START/STOP, GOTO IDLE6
	MS=77,MC=20,B=1704
// 1716:  BMACC1: Z←R0, Q←3777B
	LZY=1,THY=1,LQX=1,TCX=1,C=3777
// 1717:  MAPAD, M←E1, IR←1
	MS=54,TE1Y=1,LMY=1,LRN=4,TAX=1,LOC=1,TXW=1
// 1720:  PARAM←Z AND Q!M AND NOT Q, GOTO MACC
	SSP=26,LSPX=1,BL=4,BR=10,MC=1,B=747
// 1721:  M←PRTINDEX, CALL 1775B
	SSP=21,TSPY=1,LMY=1,MC=20,MCONT=1,B=1775
// 1722:  M←UN0, CALL 1775B
	SSP=24,TSPY=1,LMY=1,MC=1,MCONT=1,B=1775
// 1723:  M←UN1, CALL 1775B
	SSP=25,TSPY=1,LMY=1,MC=20,MCONT=1,B=1775
// 1724:  GOTO 744B
	MC=1,B=744
// 1725:

// 1726:

// 1727:

// 1730:

// 1731:

// 1732:

// 1733:

// 1734:

// 1735:

// 1736:

// 1737:

// 1740:

// 1741:

// 1742:

// 1743:

// 1744:

// 1745:

// 1746:

// 1747:

// 1750:

// 1751:

// 1752:

// 1753:

// 1754:

// 1755:

// 1756:

// 1757:

// 1760:

// 1761:

// 1762:

// 1763:

// 1764:

// 1765:

// 1766:

// 1767:

// 1770:

// 1771:

// 1772:

// 1773:

// 1774:

// 1775:  R0←R0+1, STORE, RETURN
	IHR=1,THY=1,TYW=1,LR0=1,MS=42,MC=20,MCONT=2
// 1776:  M←OS, R0←2456+4*CPUNO, STORE
	TOSY=1,LMY=1,TXW=1,LR0=1,MS=42,TCX=1,C=2456
// 1777:  GOTO SSTATE, STOP, .C←6B7
	MS=76,MC=20,B=775,C=60000000
// 

// 2000:  BLLBASE:   R0←0
	TXW=1,LR0=1
// 2001:  Z←0
	LZX=1
// 2002:  Z←1
	LOC=1,TAX=1,LZX=1
// 2003:  Z←1B4, CALL BLL86
	MCONT=1,TCX=1,LZX=1,MC=20,B=262,C=10000
// 2004:  Z←3
	TCX=1,LZX=1,C=3
// 2005:  Z←3
	TCX=1,LZX=1,C=3
// 2006:  Z←3
	TCX=1,LZX=1,C=3
// 2007:  Z←3, R0←BITS, GOTO BLL42
	SSP=31,TCX=1,TSPY=1,TYW=1,LZX=1,LR0=1,MC=20,B=264,C=3
// 2010:  IR←NOT M LCY 4, GOTO BLL44
	BL=3,MS=4,TXW=1,LRN=4,MC=1,B=303
// 2011:  Z←1
// 
// 
//   Z CONTAINS THE BITS WHICH DISTINGUISH
//   BETWEEN THE FOLLOWING VERSIONS:
// 
//   OPERATION,   BITS IN Z,      NEWG,      Q
//     BLL        16               G         Q
//     BLLN       0,16             G         Q
//     UCAL       1,2,16,18     403000B   IA(403010B)
//     UCALN      0,1,2,16,18   403000B   IA(403010B)
//     MCAL       1,2,16,18,23  600000B   IA(604000B)
//     MCALN      0,1,2,16,18,23600000B   IA(604000B)
//     POP        -                G       IA(G)
//   BIT 3 IN BITS CONTROLS THE SKIP IF FTN=1
//   BIT 18 IS THE RETURN BIT
// 
// 
//   START OF COMMON BLL CODE.  NEWG HAS BEEN SET.
//     THE FIRST WORD OF THE BRANCH DESCRIPTOR IS IN M.
//     R6=Q, Q=77B6
	LOC=1,TAX=1,LZX=1
// 2012:  BLL1:      BITS←Z, R0←Q←16B6, GOTO BLL1TRP IF M[5]
	BR=14,SSP=31,TCY=1,TYW=1,LQY=1,LR0=1,LSPX=1,MC=50,B=357,C=16000000
// 2013:  NEWP←Z←M AND NOT Q, R0←R6+1, CALL BLL85 IF M[4]
	MCONT=1,RRN=6,BL=4,SSP=26,IHR=1,THY=1,TYW=1,LZX=1,LR0=1,LSPX=1,MC=74,B=202
// 2014:  MFETCH, R0←E1, .VCY, Q←77B6, GOTO BPAGEF IF Y<0
	MS=34,TCX=1,TYW=1,LQX=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=367,C=-1000000
// 2015:  SSOURCE, BRD←M, R0←P
	RRN=1,BL=14,SSP=33,MS=52,THY=1,TYW=1,LR0=1,LSPX=1
// 2016:  MAP, R0←E1, .VCY, DGOTO BLL3
	MS=37,TYW=1,LR0=1,MC=1,DGO=1,VCY=1,TE1Y=1,B=24
// 2017:  IR←R0←M, Z←R6, GOTO *+1 IF R0[1]
	RRN=6,BL=14,THY=1,TXW=1,LZY=1,LRN=4,LR0=1,MC=66,B=20
// 2020:  M←GR, Q←14B, SSOURCE
	SSP=10,MS=52,TCX=1,TSPY=1,LMY=1,LQX=1,C=14
// 2021:  R0←M+Q, Q←BITS MRG 40B, CALL BLODX
	MCONT=1,BR=12,BL=14,SSP=31,TCY=1,TSPY=1,TXW=1,TAX=1,LQY=1,LR0=1,MC=20,VCY=1,B=366,C=40
// 2022:  BITS←Q, Q←77B6
	BL=12,SSP=31,TCY=1,LQY=1,LSPX=1,C=-1000000
// 2023:  NEWG←M, M←IR
	RRN=4,BL=14,SSP=25,THY=1,LMY=1,LSPX=1
// 2024:  BLL3:      SSOURCE, Q←S←M AND NOT Q, GOTO BLL4 IF M[1]
	BL=4,MS=52,TXW=1,LQX=1,LRN=2,MC=21,B=135
// 2025:  Q←NEWP, Q, GOTO BLL5 IF LB=0
//   Q=NEWP, M=BRD, S=NEWL, SP IS SET IF STK=1
	BL=12,SSP=26,TSPY=1,LQY=1,MC=22,B=155
// 2026:  BLL6:      Z←S
//   M=BRD, Z=NEWL, R6=Q, SOURCE=Q(+1)
	RRN=2,THY=1,LZY=1
// 2027:  BLL10:     R0←NEWP
	SSP=26,TSPY=1,TYW=1,LR0=1
// 2030:  BLL12:     MAPSS, .VCY, R0←E1, NEWL←Z
	BR=14,SSP=30,MS=51,TYW=1,LR0=1,LSPX=1,VCY=1,TE1Y=1
// 2031:  Z←NEWP, Q←M LCY 2, DGOTO BLL13 IF X>=0
	BL=14,SSP=26,MS=2,TSPY=1,LQX=1,LZY=1,MC=16,DGO=1,VCY=1,B=213
// 2032:  M←P+1, SETBA, GOTO BMACC1 IF R0[1]
//   CPA=1, Z=NFW, M=NAW, SOURCE=NEWP
	RRN=1,MS=61,IHR=1,THY=1,LMY=1,MC=66,B=1716
// 2033:  BLL14:     R0←NFW←Z, Q←17B5
	BR=14,SSP=34,TCY=1,TXW=1,LQY=1,LR0=1,LSPX=1,C=1700000
// 2034:  NAW←S←M, Z←P, CALL BLODX
	MCONT=1,RRN=1,BL=14,SSP=35,THY=1,TXW=1,LZY=1,LRN=2,LSPX=1,MC=1,B=366
// 2035:  R6←Q AND M, Z←BITS, SSOURCE
//   M=FORMAL PARAM, R6=FTYPE, SOURCE=P, Z=BITS
	BL=10,SSP=31,MS=52,TSPY=1,TXW=1,LZY=1,LRN=6
// 2036:  M←NI, IR←M, CALL BLL72 IF XPAGE, .TSPY←0
	MCONT=1,BL=14,SSP=50,TXW=1,LMY=1,LRN=4,MC=42,B=156
// 2037:  BLL71:     Q AND M, Q←IR, DGOTO BLL73 IF LB=0
	RRN=4,BL=10,THY=1,LQY=1,MC=22,DGO=1,B=161
// 2040:  FP←Q, R0←S, GOTO BLL39 IF NZ[16]
	RRN=2,BL=12,SSP=37,THY=1,TYW=1,LR0=1,LSPX=1,MC=10,B=206
// 2041:  Q←Q EOR M, GOTO BLL2TRP IF Z<0
	BL=6,LQX=1,MC=4,B=360
// 2042:  BLL33:     R0←Q LCY 8, Q←17B5
	BL=12,MS=5,TCY=1,TXW=1,LQY=1,LR0=1,C=1700000
// 2043:  Q←M AND Q, Z←R6, GOTO BLL2TRP IF R0[1]
//   M=ACTUAL PARAM, Q=ATYPE, IR=FP, Z=R6=FTYPE
//   THE END FLAGS DO MATCH.
	RRN=6,BL=10,THY=1,LQX=1,LZY=1,MC=66,B=360
// 2044:  BLL76:     Z←Q EOR Z, Q←IR, CLEARA, DGOTO BLL16 IF M[4]
	RRN=4,BR=6,MS=50,THY=1,LQY=1,LZX=1,MC=74,DGO=1,B=55
// 2045:  Z←Q LCY 4, Q←16B5, GOTO BLL74 IF Z#0
//   STR=0 OR STR=2, Z[0]=FSTR, M=AP
	BL=12,MS=4,TCY=1,LQY=1,LZX=1,MC=3,B=170,C=1600000
// 2046:  M LCY 3, Q←IR←NAW, GOTO BLL17 IF X>=0
//   STR=2, IR=NAW
	BL=14,SSP=35,MS=3,TSPY=1,TYW=1,LQY=1,LRN=4,MC=16,VCY=1,B=54
// 2047:  Q←IR+1, IR←M, DGOTO BLL16 IF Z<0
	RRN=4,BL=14,IHR=1,THY=1,TXW=1,LQY=1,LRN=4,MC=4,DGO=1,B=55
// 2050:  BLL70:     R0←NAW←Q, CALL 376B
	MCONT=1,BL=12,SSP=35,TXW=1,LR0=1,LSPX=1,MC=1,B=376
// 2051:  Q←BRD, Z←1B6
	SSP=33,TCX=1,TSPY=1,LQY=1,LZX=1,C=1000000
// 2052:  Z←Q AND Z, Q←BITS, CLEARA, DGOTO 374B
	BR=10,SSP=31,MS=50,TSPY=1,LQY=1,LZX=1,MC=1,DGO=1,B=374
// 2053:  BITS←Q MRG 4B6, Q←IR, GOTO BLL3TRP IF Z=0
	RRN=4,BL=12,SSP=31,TCX=1,THY=1,LQY=1,LSPX=1,MC=2,B=361,C=4000000
// 2054:  BLL17:     Z←4B7, SETA, GOTO BLL70 IF Z<0
//   M=AP, (Z[0]=FSTR, STR=1 OR 3)
	MS=30,TCX=1,LZX=1,MC=4,B=50,C=-40000000
// 2055:  BLL16:     AP←M, Q←07740000B, GOTO BLL3TRP IF Z>=0
	BL=14,SSP=36,TCY=1,LQY=1,LSPX=1,MC=5,B=361,C=7740000
// 2056:  M AND NOT Q, Q←7B7, GOTO BLL19 IF LB=0
//   M=AP, SOURCE=NAW, R6=FTYPE, S=NAW
	BL=4,TCY=1,LQY=1,MC=22,B=233,C=-10000000
// 2057:  Z←M AND Q LCY 4 MRG BASEAD, IR←XR, CALL BLL48
//   R0=ARGADR, R6=FTYPE, M=FIELD IF B
	MCONT=1,BL=10,SSP=6,MS=4,TCX=1,TSPY=1,TYW=1,LZX=1,LRN=4,MC=20,B=205,C=40
// 2060:  M←FP, Q←2B6
	SSP=37,TCX=1,TSPY=1,LMY=1,LQX=1,C=2000000
// 2061:  M LCY 3, GOTO BLL30 IF X<0
	BL=14,MS=3,MC=17,VCY=1,B=223
// 2062:  Q←R6, IR←NOT M, DGOTO BLL36 IF B
	RRN=6,BL=3,THY=1,TXW=1,LQY=1,LRN=4,MC=34,DGO=1,B=220
// 2063:  Q←Q LCY 8, S←R0, GOTO BLL29 IF A
//   Q=FTYPE/2, S=ARGADR, IR=NOT FP
	BL=12,MS=5,THY=1,TYW=1,LQX=1,LRN=2,MC=33,B=215
// 2064:  BLL27:     MFETCH, .VCY, R0←E1, GOTO BPAGEF IF Y<0
	MS=34,TYW=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=367
// 2065:  BLL28:     R6←Q←Q LCY 1, Z←10
	BL=12,MS=1,TCY=1,TXW=1,LQX=1,LZY=1,LRN=6,C=12
// 2066:  Z←Q-Z, Q←E1, READS
	BR=3,BL=12,MS=56,LOC=1,TAX=1,LQY=1,LZX=1,VCY=1,TE1Y=1
// 2067:  BLL50:     XSRC←Q, Q←IR MRG 77774000B, GOTO BLL4TRP IF Z>=0
	RRN=4,BL=12,SSP=32,TCY=1,THY=1,LQY=1,LSPX=1,MC=5,B=362,C=-4000
// 2070:  Z←NEWL
	SSP=30,TSPY=1,LZY=1
// 2071:  Q←IR, K←NOT Q+Z, CALL ITSG IF Y<0
	MCONT=1,RRN=4,BR=14,BL=5,THY=1,TXW=1,TAX=1,LQY=1,LRN=3,MC=53,VCY=1,B=354
// 2072:  Q←R6, Q LCY 4, GOTO BLL40 IF X<0
	RRN=6,BL=12,MS=4,THY=1,LQY=1,MC=17,VCY=1,B=331
// 2073:  DGOTO Q MRG BLLBASE, Z←NEWP
	MCONT=3,BL=12,SSP=26,TCX=1,TSPY=1,LZY=1,MC=20,DGO=1,C=2000
// 2074:  Q←FP, SSOURCE, DGOTO BLL31
//   K=CPYADDR, S=ARGADDR, Q=FP, SOURCE=NEWP, Z=COUNT
	SSP=37,MS=52,TSPY=1,LQY=1,MC=1,DGO=1,B=75
// 2075:  BLL31:     R0←K, SETA, CALL BSTR1
	MCONT=1,RRN=3,MS=30,THY=1,TYW=1,LR0=1,MC=20,B=371
// 2076:  Z←XSRC, R0←IR←Z-1
	BR=14,BL=17,SSP=32,TSPY=1,TXW=1,TAX=1,LZY=1,LRN=4,LR0=1,VCY=1
// 2077:  K←K+1, GOTO BLL32 IF R0<0
	RRN=3,IHR=1,THY=1,TYW=1,LRN=3,MC=11,B=103
// 2100:  R0←S←S+1, SSOURCE, CALL BLODX
	MCONT=1,RRN=2,MS=52,IHR=1,THY=1,TYW=1,LRN=2,LR0=1,MC=1,B=366
// 2101:  Z←NEWP, DGOTO BLL31 IF A
	SSP=26,TSPY=1,LZY=1,MC=33,DGO=1,B=75
// 2102:  Z←IR, SSOURCE
	RRN=4,MS=52,THY=1,LZY=1
// 2103:  BLL32:     Z←NAW, M←4B4
	SSP=35,TCX=1,TSPY=1,LMX=1,LZY=1,C=40000
// 2104:  Q AND M, S←NFW, DGOTO BLL14 IF LB=0
	BL=10,SSP=34,TSPY=1,TYW=1,LRN=2,MC=22,DGO=1,B=33
// 2105:  M←Z+1, Z←S+1, .LRN←6, SETBA, GOTO TOSP IF INTRPT1
//   Z=NFW+1, M=RETURN, SOURCE=NEWP, R6=0
// 
	RRN=2,BR=14,MS=61,LOC=1,IHR=1,THY=1,TAX=1,LMX=1,LZY=1,LRN=6,MC=64,VCY=1,B=1057
// 2106:  BLL34:     Q←Z←BRD, S←Z, SETA, DGOTO BLL22 IF Y<0
	BR=14,SSP=33,MS=30,TSPY=1,TXW=1,LQY=1,LZY=1,LRN=2,MC=53,DGO=1,VCY=1,B=111
// 2107:  Q LCY 1, GOTO BLL23 IF X<0
//   CLL=0, STK=0
	BL=12,MS=1,MC=17,VCY=1,B=131
// 2110:  Z←Q←BITS, GOTO BLL21
//   CLL=1, R6=FSTK(STK)
	SSP=31,TSPY=1,LQY=1,LZY=1,MC=1,B=121
// 2111:  BLL22:     Z←Q LCY 3, R0←K←NEWL, CALL BSTR1
	MCONT=1,BL=12,SSP=30,MS=3,TSPY=1,TYW=1,LZX=1,LRN=3,LR0=1,MC=20,B=371
// 2112:  Q←LR, DGOTO BLL25 IF Z>=0
	SSP=7,TSPY=1,LQY=1,MC=5,DGO=1,B=115
// 2113:  Q←Q, Q←R6
	RRN=6,BL=12,THY=1,LQX=1,LQY=1
// 2114:  Q←Q MRG 1B7
	BL=12,TCX=1,LQX=1,C=10000000
// 2115:  BLL25:     Q←BITS, M←Q, CALL BSTRX
	MCONT=1,BL=12,SSP=31,TSPY=1,LMX=1,LQY=1,MC=20,B=370
// 2116:  Z←P, Q LCY 2, CALL BLL63 IF X<0
	MCONT=1,RRN=1,BL=12,MS=2,THY=1,LZY=1,MC=17,VCY=1,B=176
// 2117:  M←SP, Z←Q, GOTO BLL21 IF A
	BL=12,SSP=22,TSPY=1,LMY=1,LZX=1,MC=33,B=121
// 2120:  R0←SPAD, CALL BSTR1
	MCONT=1,SSP=23,TSPY=1,TYW=1,LR0=1,MC=1,B=371
// 2121:  BLL21:     R0←Z, M←BRD, SETA, CALL MON IF Z[18]
	MCONT=1,BR=14,SSP=33,MS=30,TSPY=1,TXW=1,LMY=1,LR0=1,MC=14,B=731
// 2122:  Z←NEWG
	SSP=25,TSPY=1,LZY=1
// 2123:  GR←Z, R0←P←Z←S, CALL BLL18 IF M[5]
	MCONT=1,RRN=2,BR=14,SSP=10,THY=1,TYW=1,LZY=1,LRN=1,LR0=1,LSPX=1,MC=50,B=127
// 2124:  BLL20:     Q←NEWL, SETBA, DGOTO NX5 IF A
	SSP=30,MS=61,TSPY=1,LQY=1,MC=33,DGO=1,B=350
// 2125:  LR←Q, SABCDE0
//   XMON OR XUTIL TRAP
	BL=12,SSP=7,MS=33,LSPX=1
// 2126:  SETBA, Q←0, GOTO FIXTRP
// 
//   FTN=1
	MS=61,LQX=1,MC=1,B=1046
// 2127:  BLL18:     Q LCY 3, RETURN IF X<0
	MCONT=2,BL=12,MS=3,MC=17,VCY=1
// 2130:  R0←P←Z←S+1, RETURN
// 
//   STK=1
	MCONT=2,RRN=2,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LR0=1,MC=1
// 2131:  BLL23:     Z←P, R6←2B7, CLEARA, GOTO BLL22 IF Z<0
//   STK=1, CLL=0
	RRN=1,MS=50,TCX=1,THY=1,TXW=1,LZY=1,LRN=6,MC=4,B=111,C=20000000
// 2132:  Q←GR, Z←2, SSOURCE
	SSP=10,MS=52,TCX=1,TSPY=1,LQY=1,LZX=1,C=2
// 2133:  R0←Q+Z, M←SP, CALL BSTR1
	MCONT=1,BR=14,BL=12,SSP=22,TSPY=1,TXW=1,TAX=1,LMY=1,LR0=1,MC=20,VCY=1,B=371
// 2134:  Z←Q←BITS, GOTO BLL21
//   S=E, M=BRD, STK=1
	SSP=31,TSPY=1,LQY=1,LZY=1,MC=1,B=121
// 2135:  BLL4:      R0←M LCY 3, Q←LR, GOTO BLL7 IF R0<0
//   CLL=0
	BL=14,SSP=7,MS=3,TSPY=1,TXW=1,LQY=1,LR0=1,MC=11,B=145
// 2136:  SP←Q, Z←S, DGOTO BLL6
	RRN=2,BL=12,SSP=22,THY=1,LZY=1,LSPX=1,MC=1,DGO=1,B=26
// 2137:  Q←NEWP, R0←M, GOTO BLL8 IF R0<0
//   CLL=0, UWSTK=1, SOURCE=Q(+1)
	BL=14,SSP=26,TSPY=1,TXW=1,LQY=1,LR0=1,MC=11,B=140
// 2140:  BLL8:      SP←Z, R0←S+1
	RRN=2,BR=14,SSP=22,IHR=1,THY=1,TYW=1,LR0=1,LSPX=1
// 2141:  MAP, .VCY, R0←E1, Q←77B6, GOTO BPAGEF IF Y<0
	MS=37,TCX=1,TYW=1,LQX=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=367,C=-1000000
// 2142:  FETCH, IR←M
	BL=14,MS=44,TXW=1,LRN=4
// 2143:  S←M AND NOT Q, M←IR, DGOTO BLL6
	RRN=4,BL=4,THY=1,TXW=1,LMY=1,LRN=2,MC=20,DGO=1,B=26
// 2144:  R0←M, Q←NEWP
// 
//   STK=1, CLL=1, SOURCE=Q(+1)
	BL=14,SSP=26,TSPY=1,TXW=1,LQY=1,LR0=1
// 2145:  BLL7:      M←NEWG, Z←2
	SSP=25,TCX=1,TSPY=1,LMY=1,LZX=1,C=2
// 2146:  R0←SPAD←IR←M+Z, CALL BLODX
	MCONT=1,BR=14,BL=14,SSP=23,TXW=1,TAX=1,LRN=4,LR0=1,LSPX=1,MC=1,VCY=1,B=366
// 2147:  R0←IR+1, Q←M, CALL BLODX
	MCONT=1,RRN=4,BL=14,IHR=1,THY=1,TYW=1,LQX=1,LR0=1,MC=20,B=366
// 2150:  Z←S, S←Q
	RRN=2,BL=12,THY=1,TXW=1,LZY=1,LRN=2
// 2151:  Z←SP←Q+Z
	BR=14,BL=12,SSP=22,TAX=1,LZX=1,LSPX=1,VCY=1
// 2152:  R0←M←BRD, Z←Z-M, DGOTO BLL6
	BR=14,BL=3,SSP=33,LOC=1,TSPY=1,TYW=1,TAX=1,LMY=1,LZX=1,LR0=1,MC=1,DGO=1,VCY=1,B=26
// 2153:  Q←NEWP, GOTO STAKOV IF Z>0
	SSP=26,TSPY=1,LQY=1,MC=6,B=154
// 2154:  STAKOV:    IR←9, Q←0, SETBA, GOTO RDTRAP
// 
//   STK=0, NEWL=0
	MS=61,TCX=1,TXW=1,LQY=1,LRN=4,MC=1,B=1041,C=11
// 2155:  BLL5:      S←LR, GOTO BLL6
// 
//   PAGE CROSSING IN AAW SEQUENCE, R6=NEW
	SSP=7,TSPY=1,TYW=1,LRN=2,MC=20,B=26
// 2156:  BLL72:     R0←S+1
	RRN=2,IHR=1,THY=1,TYW=1,LR0=1
// 2157:  MAP,DRETURN
	MCONT=2,MS=37,MC=20,DGO=1
// 2160:  R0←E1, TAKE, GOTO BPAGEF IF Y<0
// 
//   JUMP TYPE AAW, M=ACTUAL PARAM
	MS=75,TYW=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=367
// 2161:  BLL73:     Q←7B7, GOTO BLL2TRP IF Z<0
	TCX=1,LQX=1,MC=4,B=360,C=-10000000
// 2162:  Z←M AND Q LCY 4 MRG BASEAD, IR←XR, CALL BLL48
	MCONT=1,BL=10,SSP=6,MS=4,TCX=1,TSPY=1,TYW=1,LZX=1,LRN=4,MC=1,B=205,C=40
// 2163:  R6←Q←R0, GOTO BLL5TRP IF A
	THY=1,TYW=1,LQY=1,LRN=6,MC=33,B=363
// 2164:  MFETCH, NAW←Q, R0←E1, .VCY, GOTO BPAGEF IF Y<0
	BL=12,SSP=35,MS=34,TYW=1,LR0=1,LSPX=1,MC=53,VCY=1,TE1Y=1,B=367
// 2165:  R0+1, TAKE
	MS=75,IHR=1,THY=1
// 2166:  Z←IR←FP, Q←17B5, DGOTO BLL71
	SSP=37,TCX=1,TSPY=1,TYW=1,LQX=1,LZY=1,LRN=4,MC=1,DGO=1,B=37,C=1700000
// 2167:  Z←BITS, R6←Q AND Z, GOTO BLL72 IF XPAGE
// 
//   Q=16B5, M=AP, R6=FTYPE, TYPE MISMATCH
	BR=10,SSP=31,TSPY=1,TXW=1,LZY=1,LRN=6,MC=42,B=156
// 2170:  BLL74:     AP←M
	BL=14,SSP=36,LSPX=1
// 2171:  M←Q EOR M, Q←17B5
	BL=6,TCY=1,LMX=1,LQY=1,C=1700000
// 2172:  M AND Q, Q←16B5, GOTO BLL75 IF LB=0
	BL=10,TCY=1,LQY=1,MC=22,B=175,C=1600000
// 2173:  R6←Q, M←R6
	RRN=6,BL=12,THY=1,TXW=1,LMY=1,LRN=6
// 2174:  M EOR Q, GOTO BLL3TRP IF LB#0
	BL=6,MC=23,B=361
// 2175:  BLL75:     M←AP, Q←Z←0, GOTO BLL76
// 
//   TEST TRANSITION TO HIGHER RING
	SSP=36,TSPY=1,LMY=1,LQX=1,LZX=1,MC=20,B=44
// 2176:  BLL63:     Z←R0←NEWP, SSOURCE
	SSP=26,MS=52,TSPY=1,TYW=1,LZY=1,LR0=1
// 2177:  MAPSS, M←NEWG
	SSP=25,MS=51,TSPY=1,LMY=1
// 2200:  R0←E1, Z←14B, SSOURCE, DRETURN
	MCONT=2,MS=52,TCX=1,TYW=1,LZX=1,LR0=1,MC=1,DGO=1,TE1Y=1,C=14
// 2201:  R0←M+Z, M←GR, GOTO BSTR1 IF R0<0
// 
//   REL BIT IS SET IN BRD
	BR=14,BL=14,SSP=10,TSPY=1,TXW=1,TAX=1,LMY=1,LR0=1,MC=11,VCY=1,B=371
// 2202:  BLL85:     Z←R6, Q←777B5, DRETURN IF M[9]
	MCONT=2,RRN=6,TCX=1,THY=1,LQX=1,LZY=1,MC=71,DGO=1,C=-100000
// 2203:  NEWP←Z←Z+M OR Q
	BR=14,BL=16,SSP=26,TAX=1,LZX=1,LSPX=1,VCY=1
// 2204:  NEWP←Z←Z-Q, RETURN
// 
//   DISPATCH ON ADDRESSING MODE
	MCONT=2,BR=14,BL=5,SSP=26,LOC=1,TAX=1,LZX=1,LSPX=1,MC=1,VCY=1
// 2205:  BLL48:     SETC, GOTO ILIM←Z, Q←37777B
// 
//   POP, Q=FP, Z=BITS, R0=NAW
	MCONT=3,BR=14,SSP=20,MS=35,TCY=1,LQY=1,LSPX=1,MC=20,C=37777
// 2206:  BLL39:     MAP, M←POPW, Q←200B
	SSP=24,MS=37,TCX=1,TSPY=1,LMY=1,LQX=1,C=200
// 2207:  BITS←Z OR Q, E1, TAKE
	BR=16,SSP=31,MS=75,LSPX=1,TE1Y=1
// 2210:  Z←IR, Q←374B4
	RRN=4,TCX=1,THY=1,LQX=1,LZY=1,C=3740000
// 2211:  M←M AND NOT Q ! Z AND Q, Z←NAW, DGOTO BLL33
	BR=10,BL=4,SSP=35,TSPY=1,LMX=1,LZY=1,MC=20,DGO=1,B=42
// 2212:  S←NAW←Z-1, Q←0
// 
//   CPA=0, Z=NEWP, M=PR+1, SOURCE =NEWP
	BR=14,BL=17,SSP=35,TXW=1,TAX=1,LQY=1,LRN=2,LSPX=1,VCY=1
// 2213:  BLL13:     R0←BITS, DGOTO BLL34
	SSP=31,TSPY=1,TYW=1,LR0=1,MC=20,DGO=1,B=106
// 2214:  R6←0, GOTO BLL2TRP IF R0>=0
// 
//   IMMEDIATE, CVAL=0, Q=FTYPE, M=FP, R0=ARGADR
	TXW=1,LRN=6,MC=12,B=360
// 2215:  BLL29:     M LCY 4, M←4B7, GOTO BLL5TRP IF X>=0
	BL=14,MS=4,TCY=1,LMY=1,MC=16,VCY=1,B=363,C=-40000000
// 2216:  Z←Q EOR M, M←R0, DGOTO BLL28
	BL=6,THY=1,LMY=1,LZX=1,MC=1,DGO=1,B=65
// 2217:  GOTO BLL5TRP IF Z#0
// 
//   FIELD, M=FP, IR=THE FIELD
	MC=3,B=363
// 2220:  BLL36:     M←4B7
	TCX=1,LMX=1,C=-40000000
// 2221:  Q EOR M, M←IR, GOTO BLL28 IF LB=0
	RRN=4,BL=6,THY=1,LMY=1,MC=22,B=65
// 2222:  GOTO BLL27
// 
//   CVAL=1, R0=ARGADR, NOTE THAT Z IS LEFT NEGATIVE
	MC=1,B=64
// 2223:  BLL30:     M←R0, IR←NOT M AND NOT Q, GOTO BLL87 IF A
	BL=1,THY=1,TXW=1,LMY=1,LRN=4,MC=33,B=231
// 2224:  Z←AP, Q←6B6
	SSP=36,TCX=1,TSPY=1,LQX=1,LZY=1,C=6000000
// 2225:  Q←NOT Q ! Q AND Z, MAP, GOTO BLL38 IF D
	BR=10,BL=5,MS=37,LQX=1,MC=47,B=227
// 2226:  NOT Q, R0←E1, DGOTO BLL50 IF LB#0
	BL=5,TYW=1,LR0=1,MC=23,DGO=1,TE1Y=1,B=67
// 2227:  BLL38:     R6←Z←40000001B, SETBA, GOTO BMACC1 IF R0[1]
	MS=61,TCX=1,TXW=1,LZX=1,LRN=6,MC=66,B=1716,C=-37777777
// 2230:  M←M, M←1B7, GOTO BLL50
//   CVAL=1, IMMEDIATE
	BL=14,TCY=1,LMX=1,LMY=1,MC=1,B=67,C=10000000
// 2231:  BLL87:     Q←3777B, DGOTO BLL38
	TCX=1,LQX=1,MC=20,DGO=1,B=227,C=3777
// 2232:  M←M AND Q MRG 1634B4, R0←0, DGOTO BLL50
// 
//   ARGUMENT IN CENTRAL REGISTER, R6=FTYPE, A=(STR=0)
// 
	BL=10,TCX=1,TYW=1,LMX=1,LR0=1,MC=1,DGO=1,B=67,C=16340000
// 2233:  BLL19:     Q←R6, Z←7B5, GOTO BLL4TRP IF A
	RRN=6,TCX=1,THY=1,LQY=1,LZX=1,MC=33,B=362,C=700000
// 2234:  R0←Z←Z-Q, M←FP
	BR=14,BL=5,SSP=37,LOC=1,TSPY=1,TXW=1,TAX=1,LMY=1,LZX=1,LR0=1,VCY=1
// 2235:  Z←M LCY 3, R0←R0+1, GOTO BLL82 IF Z<=0
	BL=14,MS=3,IHR=1,THY=1,TYW=1,LZX=1,LR0=1,MC=13,B=254
// 2236:  BLL81:     IR←NOT M, Z←NEWP, SETC, GOTO BLL5TRP IF Z<0
	BL=3,SSP=26,MS=35,TSPY=1,TXW=1,LZY=1,LRN=4,MC=4,B=363
// 2237:  M←Q LCY 8, Q←IR MRG 77774000B
	RRN=4,BL=12,MS=5,TCY=1,THY=1,LMX=1,LQY=1,C=-4000
// 2240:  M←AR, DGOTO M LCY1 MRG BLLBASE
	MCONT=3,BL=14,SSP=1,MS=1,TCX=1,TSPY=1,LMY=1,MC=1,DGO=1,C=2000
// 2241:  SSOURCE, DGOTO BLL51
	MS=52,MC=20,DGO=1,B=242
// 2242:  BLL51:     Z←NEWL, R6←NOT Z, DGOTO BLL83 IF R0<0
	BR=3,SSP=30,TSPY=1,TXW=1,LZY=1,LRN=6,MC=11,DGO=1,B=256
// 2243:  IR, K←NOT Q+Z, CALL ITSG IF Y<0
	MCONT=1,RRN=4,BR=14,BL=5,THY=1,TXW=1,TAX=1,LRN=3,MC=53,VCY=1,B=354
// 2244:  R0←K, CALL BSTR1
	MCONT=1,RRN=3,THY=1,TYW=1,LR0=1,MC=1,B=371
// 2245:  Z←R6+1
	RRN=6,IHR=1,THY=1,LZY=1
// 2246:  Q←FP, GOTO BLL32 IF Z=0
	SSP=37,TSPY=1,LQY=1,MC=2,B=103
// 2247:  Z←Z+1, M←BR, CALL BSTRX
	MCONT=1,BR=14,SSP=2,LOC=1,TSPY=1,TAX=1,LMY=1,LZX=1,MC=20,VCY=1,B=370
// 2250:  GOTO BLL32 IF Z=0
	MC=2,B=103
// 2251:  M←CR, CALL BSTRX
	MCONT=1,SSP=3,TSPY=1,LMY=1,MC=20,B=370
// 2252:  M←DR, CALL BSTRX
	MCONT=1,SSP=4,TSPY=1,LMY=1,MC=1,B=370
// 2253:  GOTO BLL32
//   CHECK IF POINTER TYPE
	MC=20,B=103
// 2254:  BLL82:     R0←Z←R0+1, DGOTO BLL81
	IHR=1,THY=1,TYW=1,LZY=1,LR0=1,MC=1,DGO=1,B=236
// 2255:  Z←M LCY 3, GOTO BLL4TRP IF Z#0
// 
//   STORE FLOATING ACCUMULATOR
	BL=14,MS=3,LZX=1,MC=3,B=362
// 2256:  BLL83:     R6←R0←K, Q←M, SETBA, DGOTO STFX
	RRN=3,BL=14,MS=61,THY=1,TYW=1,LQX=1,LRN=6,LR0=1,MC=1,DGO=1,B=1430
// 2257:  MAP, R0←E1, .VCY, GOTO PAGEF IF Y<0
// 
//   TEST FOR FLOATING OVERFLOW, M=EXPONENT
	MS=37,TYW=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=700
// 2260:  BLL84:     Q←FP, DGOTO TFO1
	SSP=37,TSPY=1,LQY=1,MC=1,DGO=1,B=1235
// 2261:  GOTO BLL32 IF M[0]=M[1]
// 
//   TEST FOR UNDEFINED FLOATING NUMBER
	MC=73,B=103
// 2262:  BLL86:     Z←M-Z, R0←4B7, DRETURN
	MCONT=2,BR=3,BL=14,LOC=1,TCY=1,TYW=1,TAX=1,LZX=1,LR0=1,MC=1,DGO=1,VCY=1,C=-40000000
// 2263:  Z←1, GOTO UFN IF Z=0
// 
//   FTYPE=STRING, R0=BITS, M=FIRST STRING WORD
//   K=CPYADR, S=ARGADR
// 
	LOC=1,TAX=1,LZX=1,MC=2,B=1241
// 2264:  BLL42:     IR←0, GOTO BLL31 IF NR0[2]
	TXW=1,LRN=4,MC=25,B=75
// 2265:  Q←14B6, DGOTO BLL53
	TCX=1,LQX=1,MC=20,DGO=1,B=271,C=14000000
// 2266:  R6←M AND Q MRG 40000003B
	BL=10,TCX=1,TXW=1,LRN=6,C=-37777775
// 2267:  BLL55:     SSOURCE, R0←S←S+1, CALL BLODX
	MCONT=1,RRN=2,MS=52,IHR=1,THY=1,TYW=1,LRN=2,LR0=1,MC=20,B=366
// 2270:  K←K+1
	RRN=3,IHR=1,THY=1,TYW=1,LRN=3
// 2271:  BLL53:     Z←S, Q←77B6
	RRN=2,TCX=1,THY=1,LQX=1,LZY=1,C=-1000000
// 2272:  R0←M AND NOT Q, Z←IR, SSOURCE, DGOTO BMACC
	RRN=4,BL=4,MS=52,THY=1,TXW=1,LZY=1,LR0=1,MC=1,DGO=1,B=722
// 2273:  MAP, .VCY, R0←E1, DGOTO *+1
	MS=37,TYW=1,LR0=1,VCY=1,TE1Y=1,MC=20,DGO=1,B=274
// 2274:  Z←R0←M AND NOT Q-Z AND NOT Q
	BR=13,BL=4,LOC=1,TXW=1,TAX=1,LZX=1,LR0=1,VCY=1
// 2275:  Q←3B6, Z←IR, DGOTO BLL54 IF Z=0
	RRN=4,TCX=1,THY=1,LQX=1,LZY=1,MC=2,DGO=1,B=276,C=3000000
// 2276:  BLL54:     R0←M AND Q-Z AND Q, Z←NEWP, GOTO BLL6TRP IF R0<0
	BR=7,BL=10,SSP=26,LOC=1,TSPY=1,TXW=1,TAX=1,LZY=1,LR0=1,MC=11,VCY=1,B=364
// 2277:  Z←R6, Q←74B6, SSOURCE
	RRN=6,MS=52,TCX=1,THY=1,LQX=1,LZY=1,C=-4000000
// 2300:  M←M AND NOT Q ! Z AND Q, R0←K, CALL BSTR1
	MCONT=1,RRN=3,BR=10,BL=4,THY=1,TYW=1,LMX=1,LR0=1,MC=1,B=371
// 2301:  R6←Z←Z-1, Q←FP, DGOTO BLL32
	BR=14,BL=17,SSP=37,TSPY=1,TXW=1,TAX=1,LQY=1,LZX=1,LRN=6,MC=20,DGO=1,VCY=1,B=103
// 2302:  IR←M, Z←XSRC, GOTO BLL55 IF NZ[16]
//   FTYPE=LABEL, IR[0]=NOT REL
// 
	BL=14,SSP=32,TSPY=1,TXW=1,LZY=1,LRN=4,MC=10,B=267
// 2303:  BLL44:     Z←S, Q←777B5, DGOTO BLL46 IF M[9]
	RRN=2,TCX=1,THY=1,LQX=1,LZY=1,MC=71,DGO=1,B=310,C=-100000
// 2304:  Z←M OR Q+Z, IR, SSOURCE, GOTO BLL45 IF Y<0
	RRN=4,BR=14,BL=16,MS=52,THY=1,TAX=1,LZX=1,MC=53,VCY=1,B=306
// 2305:  Z←Z-Q, GOTO BLL46
	BR=14,BL=5,LOC=1,TAX=1,LZX=1,MC=20,VCY=1,B=310
// 2306:  BLL45:     Q←77B6
	TCX=1,LQX=1,C=-1000000
// 2307:  Z←M AND NOT Q
	BL=4,LZX=1
// 2310:  BLL46:     R0←BITS, Q←75B6
	SSP=31,TCX=1,TSPY=1,TYW=1,LQX=1,LR0=1,C=-3000000
// 2311:  R0←M←M AND Q ! Z AND NOT Q, Z←NEWP, GOTO BLL47 IF NR0[2]
	BR=4,BL=10,SSP=26,TSPY=1,TXW=1,LMX=1,LZY=1,LR0=1,MC=25,B=314
// 2312:  MAP, R0←E1, .VCY
	MS=37,TYW=1,LR0=1,VCY=1,TE1Y=1
// 2313:  SETBA, R6←4B7, GOTO BMACC1 IF R0[1]
	MS=61,TCX=1,TXW=1,LRN=6,MC=66,B=1716,C=-40000000
// 2314:  BLL47:     SSOURCE, R0←K, CALL BSTR1
	MCONT=1,RRN=3,MS=52,THY=1,TYW=1,LR0=1,MC=1,B=371
// 2315:  Z←XSRC, Q←57B6
	SSP=32,TCX=1,TSPY=1,LQX=1,LZY=1,C=57000000
// 2316:  R0←S←S+1, SSOURCE, CALL BLODX
	MCONT=1,RRN=2,MS=52,IHR=1,THY=1,TYW=1,LRN=2,LR0=1,MC=1,B=366
// 2317:  Z←NEWP, M AND NOT Q, DGOTO BLL57 IF LB#0
	BL=4,SSP=26,TSPY=1,LZY=1,MC=23,DGO=1,B=326
// 2320:  SSOURCE, Z←M, Q←BRD
	BL=14,SSP=33,MS=52,TSPY=1,LQY=1,LZX=1
// 2321:  Q←NEWL MRG 24B6, Q LCY 1, DGOTO *+1 IF X>=0
	BL=12,SSP=30,MS=1,TCY=1,TSPY=1,LQY=1,MC=16,DGO=1,VCY=1,B=322,C=24000000
// 2322:  Z←M OR Q, Q←LR
	BL=16,SSP=7,TSPY=1,LQY=1,LZX=1
// 2323:  R6, Q←4B7, GOTO BLL58 IF Y<0
	RRN=6,TCX=1,THY=1,LQX=1,MC=53,VCY=1,B=330,C=-40000000
// 2324:  BLL49:     Q←FP, M←Z, CALL BSTRX
	MCONT=1,BR=14,SSP=37,TSPY=1,LMX=1,LQY=1,MC=1,B=370
// 2325:  GOTO BLL32
// 
	MC=20,B=103
// 2326:  BLL57:     DGOTO BLL49
	MC=1,DGO=1,B=324
// 2327:  R6, GOTO BLL6TRP IF Y<0
	RRN=6,THY=1,MC=53,VCY=1,B=364
// 2330:  BLL58:     Z←Z AND NOT Q, GOTO BLL49
// 
//   FSTR=0, CVAL=1
	BR=4,LZX=1,MC=1,B=324
// 2331:  BLL40:     Z←NEWP, Q←6B7
	SSP=26,TCX=1,TSPY=1,LQX=1,LZY=1,C=-20000000
// 2332:  R0←K, SSOURCE, CALL BSTR1
	MCONT=1,RRN=3,MS=52,THY=1,TYW=1,LR0=1,MC=1,B=371
// 2333:  R0←BITS, SETC, NOT M AND Q, GOTO BLL6TRP IF LB#0
	BL=2,SSP=31,MS=35,TSPY=1,TYW=1,LR0=1,MC=23,B=364
// 2334:  ILIM←0, Z←R6←S, GOTO BLL59 IF NR0[2]
	RRN=2,SSP=20,THY=1,TYW=1,LZY=1,LRN=6,LSPX=1,MC=25,B=342
// 2335:  M LCY 4, Q←774B5, DGOTO BLL60 IF X<0
	BL=14,MS=4,TCY=1,LQY=1,MC=17,DGO=1,VCY=1,B=336,C=-400000
// 2336:  BLL60:     IR←M AND NOT Q, Q←7776B4, SSOURCE
	BL=4,MS=52,TCY=1,TXW=1,LQY=1,LRN=4,C=-20000
// 2337:  SETBA, CALL IASUB
	MCONT=1,MS=61,MC=20,B=103
// 2340:  MAP, .VCY, R0←E1
	MS=37,TYW=1,LR0=1,VCY=1,TE1Y=1
// 2341:  ILIM←0, Z←R6, CLEARA, GOTO BMACC IF R0[1]
	RRN=6,SSP=20,MS=50,THY=1,LZY=1,LSPX=1,MC=66,B=722
// 2342:  BLL59:     S←R0←R6+1, Q←16B6, SSOURCE, CALL BLODX
	MCONT=1,RRN=6,MS=52,IHR=1,TCX=1,THY=1,TYW=1,LQX=1,LRN=2,LR0=1,MC=1,B=366,C=16000000
// 2343:  Q←NOT M OR NOT Q LCY 2, IR←0
	BL=7,MS=2,TYW=1,LQX=1,LRN=4
// 2344:  SETBA, CALL BASEIA
	MCONT=1,MS=61,MC=1,B=110
// 2345:  MAP, .VCY, Q←E1, M←12B6, DGOTO BLL61 IF D
	MS=37,TCX=1,LMX=1,LQY=1,MC=47,DGO=1,VCY=1,TE1Y=1,B=350,C=12000000
// 2346:  Z←BITS, GOTO BLL6TRP IF A
	SSP=31,TSPY=1,LZY=1,MC=33,B=364
// 2347:  M←4B6
	TCX=1,LMX=1,C=4000000
// 2350:  BLL61:     R0←Z AND Q, Z←R0
	BR=10,THY=1,TXW=1,LZY=1,LR0=1
// 2351:  Z←NEWP, R0←Z, GOTO BMACCQ IF R0[1]
	BR=14,SSP=26,TSPY=1,TXW=1,LZY=1,LR0=1,MC=66,B=540
// 2352:  M←M, M←R0, SSOURCE, CALL BSTRX
	MCONT=1,BL=14,MS=52,THY=1,LMX=1,LMY=1,MC=1,B=370
// 2353:  Q←FP, GOTO BLL32
// 
//   IR= NOT FP
	SSP=37,TSPY=1,LQY=1,MC=20,B=103
// 2354:  ITSG:      Z←NEWG
	SSP=25,TSPY=1,LZY=1
// 2355:  Q←IR MRG 7774B4, DRETURN
	MCONT=2,RRN=4,TCY=1,THY=1,LQY=1,MC=20,DGO=1,C=-40000
// 2356:  K←NOT Q+Z, Q←IR
// 
	RRN=4,BR=14,BL=5,THY=1,TXW=1,TAX=1,LQY=1,LRN=3,VCY=1
// 2357:  BLL1TRP:   Q←1B6, GOTO BLLTRAP
	TCX=1,LQX=1,MC=20,B=365,C=1000000
// 2360:  BLL2TRP:   Q←NAW MRG 2B6, GOTO BLLTRAP
	SSP=35,TCY=1,TSPY=1,LQY=1,MC=1,B=365,C=2000000
// 2361:  BLL3TRP:   Q←NAW MRG 3B6, GOTO BLLTRAP
	SSP=35,TCY=1,TSPY=1,LQY=1,MC=20,B=365,C=3000000
// 2362:  BLL4TRP:   Q←NAW MRG 4B6, GOTO BLLTRAP
	SSP=35,TCY=1,TSPY=1,LQY=1,MC=1,B=365,C=4000000
// 2363:  BLL5TRP:   Q←NAW MRG 5B6, GOTO BLLTRAP
	SSP=35,TCY=1,TSPY=1,LQY=1,MC=20,B=365,C=5000000
// 2364:  BLL6TRP:   Q←NAW MRG 6B6, GOTO BLLTRAP
	SSP=35,TCY=1,TSPY=1,LQY=1,MC=1,B=365,C=6000000
// 2365:  BLLTRAP:   IR←10, SETBA, GOTO RDTRAP
// 
//   SUBROUTINE M←CONTENTS(R0)
	MS=61,TCX=1,TXW=1,LRN=4,MC=20,B=1041,C=12
// 2366:  BLODX:     MFETCH, R0←E1, .VCY, DRETURN
	MCONT=2,MS=34,TYW=1,LR0=1,MC=1,DGO=1,VCY=1,TE1Y=1
// 2367:  BPAGEF:    SETBA, GOTO PAGEF IF R0<0
// 
//   SUBROUTINE CONTENTS(K←K+1)←M
	MS=61,MC=11,B=700
// 2370:  BSTRX:     R0←K←K+1
	RRN=3,IHR=1,THY=1,TYW=1,LRN=3,LR0=1
// 2371:  BSTR1:     MAP, .VCY, R0←E1, GOTO BCSTORE IF STERR
	MS=37,TYW=1,LR0=1,MC=32,VCY=1,TE1Y=1,B=373
// 2372:  STORE, RETURN
	MCONT=2,MS=42,MC=1
// 2373:  BCSTORE:   SETBA, GOTO CSTORE
// 
// 
//   STORE NAW MRG 1B6 IF FTNAT
	MS=61,MC=20,B=701
// 2374:  BLL64:     M←FP, Q←R0←2B6, DGOTO BLL38
	SSP=37,TCX=1,TSPY=1,TXW=1,LMY=1,LQX=1,LR0=1,MC=1,DGO=1,B=227,C=2000000
// 2375:  IR←NOT M AND NOT Q, M←NAW MRG 1B6, DGOTO BLL50
	BL=1,SSP=35,TCY=1,TSPY=1,TXW=1,LMY=1,LRN=4,MC=20,DGO=1,B=67,C=1000000
// 2376:  R0←R0+1, GOTO 157B
	IHR=1,THY=1,TYW=1,LR0=1,MC=1,B=157
// 2377:          SETBA, CALL 1776B       * ILLEGAL MICROINSTRUCTION
	MS=61,MCONT=1,MC=20,B=1776
// 
// 
//   OPR TABLE:
//    THIS TABLE IS INDEXED BY A POSITIVE OPR OPERAND.
//    IF IT IS GREATER OR EQUAL THAN MAXOPR, THE OPR
//    IS PRIVILEGED.
//    Z=AR, Q=BR, M=XR IF NOT PRIVILEGED
// 

// 2400:  BASEOPR:   BR←Z, Z←P←P+1, SETBA, GOTO NX2
	RRN=1,BR=14,SSP=2,MS=61,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1,MC=1,B=35
// 2401:  BR←Z
	BR=14,SSP=2,LSPX=1
// 2402:  CBA:       RES←AR←Q, SETBA, GOTO NX1
	BL=12,SSP=1,MS=61,TXW=1,LRN=5,LSPX=1,MC=1,B=34
// 2403:  CBX:       XR←Q, Z←P←P+1, SETBA, GOTO NX2
	RRN=1,BL=12,SSP=6,MS=61,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1,MC=20,B=35
// 2404:  XR←Q
	BL=12,SSP=6,LSPX=1
// 2405:  BR←M, Z←P←P+1, SETBA, GOTO NX2
	RRN=1,BL=14,SSP=2,MS=61,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1,MC=20,B=35
// 2406:  XR←Z, Z←P←P+1, SETBA, GOTO NX2
	RRN=1,BR=14,SSP=6,MS=61,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1,MC=1,B=35
// 2407:  XR←Z
	BR=14,SSP=6,LSPX=1
// 2410:  CXA:       RES←AR←M, SETBA, GOTO NX1
	BL=14,SSP=1,MS=61,TXW=1,LRN=5,LSPX=1,MC=1,B=34
// 2411:  RES←AR←NOT Z+1, SETBA, GOTO NX1
	BR=3,SSP=1,MS=61,LOC=1,TXW=1,TAX=1,LRN=5,LSPX=1,MC=20,VCY=1,B=34
// 2412:  XR←NOT M+1, Z←P←P+1, SETBA, GOTO NX2
	RRN=1,BL=3,SSP=6,MS=61,LOC=1,IHR=1,THY=1,TYW=1,TAX=1,LZY=1,LRN=1,LSPX=1,MC=1,VCY=1,B=35
// 2413:  RES←AR←0, SETBA, GOTO NX1
	SSP=1,MS=61,TXW=1,LRN=5,LSPX=1,MC=20,B=34
// 2414:  AR←0, GOTO ZAB1
	SSP=1,LSPX=1,MC=1,B=517
// 2415:  BR←0, Z←P←P+1, SETBA, GOTO NX2
	RRN=1,SSP=2,MS=61,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1,MC=20,B=35
// 2416:  Q←GR, GOTO CBA
	SSP=10,TSPY=1,LQY=1,MC=1,B=402
// 2417:  Q←GR, GOTO XGA1
	SSP=10,TSPY=1,LQY=1,MC=20,B=515
// 2420:  Q←LR, GOTO CBA
	SSP=7,TSPY=1,LQY=1,MC=1,B=402
// 2421:  Q←LR, GOTO XLA1
	SSP=7,TSPY=1,LQY=1,MC=20,B=516
// 2422:  GOTO CSA1
	MC=1,B=612
// 2423:  GOTO XSA1
	MC=20,B=614
// 2424:  Z←ITR, ALERT, GOTO CTA1
	MS=14,TCX=1,LZX=1,MC=1,B=617,C=60
// 2425:  Z←CTCR, ALERT, GOTO CTA1
	MS=14,TCX=1,LZX=1,MC=20,B=617,C=62
// 2426:  NOP:       Z←P←P+1, SETBA, GOTO NX2
	RRN=1,MS=61,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=1,B=35
// 2427:  R0←Q-M, GOTO MVB1, SETA
	BR=12,BL=3,MS=30,LOC=1,TXW=1,TAX=1,LR0=1,MC=20,VCY=1,B=620
// 2430:  R0←0, GOTO MVB1
	TXW=1,LR0=1,MC=1,B=620
// 2431:                          *ILLEGAL INSTRUCTION

// 2432:  SETBA, GOTO TI
	MS=61,MC=1,B=1400
// 2433:  M←NOT Q LCY 4 MRG 1774B, GOTO CLS1
	BL=5,MS=4,TCX=1,LMX=1,MC=20,B=534,C=1774
// 2434:  Z←R6, S←M←Z, GOTO ASP1
	RRN=6,BR=14,THY=1,TXW=1,LMX=1,LZY=1,LRN=2,MC=1,B=661
// 2435:  LLT:       M←Z, GOTO LLT1
	BR=14,LMX=1,MC=20,B=636
// 2436:  M←Q, R0←0, SETA, GOTO COB1
	BL=12,MS=30,TYW=1,LMX=1,LR0=1,MC=1,B=664
// 2437:                          *ILLEGAL MICROINSTRUCTION

// 2440:  SETBA, GOTO TI
	MS=61,MC=1,B=1400
// 2441:  IR←SR, GOTO LODS1
	SSP=11,TSPY=1,TYW=1,LRN=4,MC=20,B=670
// 2442:  GOTO STRS1
	MC=1,B=701
// 2443:  GOTO LSC1
	MC=20,B=650
// 2444:  S←Z, GOTO FIX1
	BR=14,TXW=1,LRN=2,MC=1,B=1244
// 2445:  M←BR←0, GOTO FLOAT1
	SSP=2,LMX=1,LSPX=1,MC=20,B=1250
// 2446:  BR←NOT Q+1, HROV, GOTO FNA1
	BL=5,SSP=2,MS=57,LOC=1,TAX=1,LSPX=1,MC=1,B=1246
// 2447:  R0←2406B+CPUNO, SETBA, GOTO BREAK
	MS=61,TCX=1,TXW=1,LR0=1,MC=1,B=1700,C=2406
// 2450:  

// 2451:

// 2452:

// 2453:                          *ILLEGAL MICROINSTRUCTION

// 2454:  SETBA, GOTO TI
//                                                    MAXOPR
	MS=61,MC=1,B=1400
// 2455:  X23LCK, Q←1, GOTO SLOK1
	MS=71,LOC=1,TAX=1,LQX=1,MC=20,B=710
// 2456:  X23LCK, Z←4, GOTO UNPRO
	MS=71,TCX=1,LZX=1,MC=1,B=464,C=4
// 2457:  R0←XR, FETCH, GOTO CXA
	SSP=6,MS=44,TSPY=1,TYW=1,LR0=1,MC=20,B=410
// 2460:  R0←XR, M←Z, STORE, GOTO NOP
	BR=14,SSP=6,MS=42,TSPY=1,TYW=1,LMX=1,LR0=1,MC=1,B=426
// 2461:  R0←XR, GOTO AAX1
	SSP=6,TSPY=1,TYW=1,LR0=1,MC=20,B=707
// 2462:  Z, RES←0, PROTECT, DGOTO NOP
	BR=14,MS=25,TYW=1,LRN=5,MC=20,DGO=1,B=426,VCY=1
// 2463:  Z, RES←4B7, GOTO 1705B IF NPROTECT, SETBA
	BR=14,MS=61,TCY=1,TYW=1,LRN=5,MC=30,VCY=1,B=1705,C=-40000000
// 2464:  UNPRO:     Z, UNPROTECT, GOTO NOP
	BR=14,MS=20,MC=1,B=426
// 2465:  Z, STROBE, GOTO NOP
	BR=14,MS=17,MC=20,B=426
// 2466:  S←Z, SETA, GOTO USCL1
	BR=14,MS=30,TXW=1,LRN=2,MC=1,B=715
// 2467:  CLEARMAP, GOTO NOP
	MS=74,MC=20,B=426
// 2470:  CMAPS, GOTO NOP
	MS=62,MC=1,B=426
// 2471:  Z← ITL, ALERT, GOTO CAT1
	MS=14,TCX=1,LZX=1,MC=20,B=712,C=61
// 2472:  Z← CTCL, ALERT, GOTO CAT1
	MS=14,TCX=1,LZX=1,MC=1,B=712,C=63
// 2473:  Z← UNLS, ALERT, GOTO RUN1
	MS=14,TCX=1,LZX=1,MC=20,B=713,C=64
// 2474:  Z, STOP, Z←P←P+1, GOTO NOP
	RRN=1,BR=14,MS=76,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=1,B=426
// 2475:    SETBA, GOTO TI        *ILLEGAL MICROINSTRUCTION
	MS=61,MC=20,B=1400
// 2476:  R0←XR, GOTO LDM1,SETBA
	MS=61,SSP=6,TSPY=1,TYW=1,LR0=1,MC=1,B=1703
// 2477:  SETBA, GOTO TI
// 
// 
	MS=61,MC=20,B=1400
// 2500:  OPR1:      Q←BR, ABCD0, GOTO OPR2 IF R0>=0
	SSP=2,MS=70,TSPY=1,LQY=1,MC=12,B=703
// 2501:  M←R6←XR, DGOTO M MRG BASEOPR
	MCONT=3,BL=14,SSP=6,TCX=1,TSPY=1,TYW=1,LMY=1,LRN=6,MC=20,DGO=1,C=2400
// 2502:  Z←AR
	SSP=1,TSPY=1,LZY=1
// 2503:  SYSCLL:    M←R0←Q LCY 12, Z←377B
	BL=12,MS=6,TCY=1,TXW=1,LMX=1,LZY=1,LR0=1,C=377
// 2504:  IR←Q AND Z, Z←600000B, SETC
	BR=10,MS=35,TCY=1,TXW=1,LZY=1,LRN=4,C=600000
// 2505:  NEWG←Z, Z←R0←S←604000B, DGOTO SYSC1 IF R0[2]
	BR=14,SSP=25,TCY=1,TYW=1,LZY=1,LRN=2,LR0=1,LSPX=1,MC=24,DGO=1,B=511,C=604000
// 2506:  K←M LCY 3 MRG 30000240B
	BL=14,MS=3,TCX=1,TXW=1,LRN=3,C=30000240
// 2507:  Z←R0←S←403016B
	TCX=1,TXW=1,LZX=1,LRN=2,LR0=1,C=403016
// 2510:  UCAL1:     NEWG←403000B
	SSP=25,TCX=1,LSPX=1,C=403000
// 2511:  SYSC1:     SSOURCE
	MS=52
// 2512:  ILIM←0, SETBA, CALL IA
	MCONT=1,SSP=20,MS=61,LSPX=1,MC=1,B=101
// 2513:  R6←R0, DGOTO BLL1
	THY=1,TYW=1,LRN=6,MC=20,DGO=1,B=12
// 2514:  Z←K, Q←77B6, CALL BLODX
// 
	MCONT=1,RRN=3,TCX=1,THY=1,LQX=1,LZY=1,MC=1,B=366,C=-1000000
// 2515:  XGA1:      GR←Z, GOTO CBA
	BR=14,SSP=10,LSPX=1,MC=20,B=402
// 2516:  XLA1:      LR←Z, GOTO CBA
	BR=14,SSP=7,LSPX=1,MC=1,B=402
// 2517:  ZAB1:      BR←0, DGOTO NX2, SETBA
	SSP=2,MS=61,LSPX=1,MC=20,DGO=1,B=35
// 2520:  ER←0, Z←P←P+1
// 
// 
	RRN=1,SSP=5,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1
// 2521:  CLSMULT:   M←M+Z
	BR=14,BL=14,TAX=1,LMX=1,VCY=1
// 2522:  M←M+Z
	BR=14,BL=14,TAX=1,LMX=1,VCY=1
// 2523:  M←M+Z
	BR=14,BL=14,TAX=1,LMX=1,VCY=1
// 2524:  Q←Q LCY 4
	BL=12,MS=4,LQX=1
// 2525:  R6←Q LCY 2, Q←AR
	BL=12,SSP=1,MS=2,TSPY=1,TXW=1,LQY=1,LRN=6
// 2526:  Q←Q LCY 4
	BL=12,MS=4,LQX=1
// 2527:  Q←Q LCY 2, Z←3B
	BL=12,MS=2,TCY=1,LQX=1,LZY=1,C=3
// 2530:  R6←Q AND Z, Q←R6
	RRN=6,BR=10,THY=1,TXW=1,LQY=1,LRN=6
// 2531:  Q←Q AND Z, Z←R6
	RRN=6,BR=10,THY=1,LQX=1,LZY=1
// 2532:  Q←Q-Z, Z←P←P+1, SETBA, DGOTO NX2
	RRN=1,BR=3,BL=12,MS=61,LOC=1,IHR=1,THY=1,TYW=1,TAX=1,LQX=1,LZY=1,LRN=1,MC=1,DGO=1,VCY=1,B=35
// 2533:  RES←AR←M+Q
// 
	BR=12,BL=14,SSP=1,TXW=1,TAX=1,LRN=5,LSPX=1,VCY=1
// 2534:  CLS1:      Q←NOT Q MRG 77B6
	BL=5,TCX=1,LQX=1,C=-1000000
// 2535:  Z←NOT Z MRG 77B6
	BR=3,TCX=1,LZX=1,C=-1000000
// 2536:  DGOTO NOT M+1 MRG 2520B
	MCONT=3,BL=3,LOC=1,TCX=1,TAX=1,MC=1,DGO=1,VCY=1,C=2520
// 2537:  M←Z←NOT Q-NOT Z, Q←BR
	BR=14,BL=5,SSP=2,LOC=1,TSPY=1,TAX=1,LMX=1,LQY=1,LZX=1,VCY=1
// 2540:  BMACCQ: R0←Q, SETBA, GOTO BMACC1
// 
// 
//   ASP, M=AR, Z=XR, IR=M
// 
	MS=61,MC=20,BL=2,LR0=1,TXW=1,B=1716
// 2541:  ASPDIV:    M←Z←3, DGOTO ASP4
	TCX=1,LMX=1,LZX=1,MC=20,DGO=1,B=550,C=3
// 2542:  M←Q AND NOT M LCY 2
	BL=2,MS=2,LMX=1
// 2543:  Z←Q LCY 2, DGOTO ASP9, M←74B6
	BL=12,MS=2,TCY=1,LMY=1,LZX=1,MC=20,DGO=1,B=576,C=-4000000
// 2544:  M←Q AND NOT M + Z
	BR=14,BL=2,TAX=1,LMX=1,VCY=1
// 2545:  M←Z←1, DGOTO ASP4
	LOC=1,TAX=1,LMX=1,LZX=1,MC=20,DGO=1,B=550
// 2546:  M←Q AND NOT M LCY 3
	BL=2,MS=3,LMX=1
// 2547:  M←Q LCY 4, Z←0
	BL=12,MS=4,LMX=1,LZY=1
// 2550:  ASP4:      M←M LCY 20
	BL=14,MS=10,LMX=1
// 2551:  ASP5:      Q←Z AND Q, Z←S, DGOTO ASP8 IF A
// 
//   ASPX CAN BE CALLED AS A SUBROUTINE, TO ASP Q<CSIZE
//    INT0 Z.  M=0, C SET.
	RRN=2,BR=10,THY=1,LQX=1,LZY=1,MC=33,DGO=1,B=566
// 2552:  ASPX:      Q←Q LCY 16
	BL=12,MS=7,LQX=1
// 2553:  Z←Z+M
	BR=14,BL=14,TAX=1,LZX=1,VCY=1
// 2554:  ASPX1:     M←Q LCY 2, Q←3B6
	BL=12,MS=2,TCY=1,LMX=1,LQY=1,C=3000000
// 2555:  R6←M+Q AND Z
	BR=10,BL=14,TXW=1,TAX=1,LRN=6,VCY=1
// 2556:  Q←Z
	BR=14,LQX=1
// 2557:  Q←Q LCY 20, M←6B5
	BL=12,MS=10,TCY=1,LMY=1,LQX=1,C=600000
// 2560:  Q←M AND Q LCY 2, M←4B6
	BL=10,MS=2,TCY=1,LMY=1,LQX=1,C=4000000
// 2561:  Q←Q-M, M←R6, DGOTO ASP6
	RRN=6,BR=12,BL=3,LOC=1,THY=1,TAX=1,LMY=1,LQX=1,MC=20,DGO=1,VCY=1,B=564
// 2562:  R6←M+Q, Q←3B6, GOTO *+1 IF X>=0
	BR=12,BL=14,TCY=1,TXW=1,TAX=1,LQY=1,LRN=6,MC=16,VCY=1,B=563,C=3000000
// 2563:  Z←Z+1, M←R6, GOTO ASP6
	RRN=6,BR=14,LOC=1,THY=1,TAX=1,LMY=1,LZX=1,MC=20,VCY=1,B=564
// 2564:  ASP6:      Z←M AND Q ! Z AND NOT Q, RETURN IF C
	MCONT=2,BR=4,BL=10,LZX=1,MC=35
// 2565:  XR←Z, SETBA, GOTO NX1
	BR=14,SSP=6,MS=61,LSPX=1,MC=20,B=34
// 2566:  ASP8:      Z←Z-M
	BR=14,BL=3,LOC=1,TAX=1,LZX=1,VCY=1
// 2567:  M←Q LCY 2, Q←3B6
	BL=12,MS=2,TCY=1,LMX=1,LQY=1,C=3000000
// 2570:  M←Q AND Z-M, GOTO ASP6 IF X>=0
	BR=10,BL=3,LOC=1,TAX=1,LMX=1,MC=16,VCY=1,B=564
// 2571:  R6←Q←Z-1, Z←4B6
	BR=14,BL=17,TCY=1,TXW=1,TAX=1,LQX=1,LZY=1,LRN=6,VCY=1,C=4000000
// 2572:  Q←Q LCY 20
	BL=12,MS=10,LQX=1
// 2573:  M←M+Z
	BR=14,BL=14,TAX=1,LMX=1,VCY=1
// 2574:  Z←Q LCY 2, Q←3B6, DGOTO ASP6
	BL=12,MS=2,TCY=1,LQY=1,LZX=1,MC=1,DGO=1,B=564,C=3000000
// 2575:  M←M-Z AND Q, Z←R6
//   DIVIDE Q BY 3 (MULTIPLY BY .25252...B)
	RRN=6,BR=7,BL=14,LOC=1,THY=1,TAX=1,LMX=1,LZY=1,VCY=1
// 2576:  ASP9:      Z←Q LCY 4, Q←3B
	BL=12,MS=4,TCY=1,LQY=1,LZX=1,C=3
// 2577:  IR←Z←M+Z, M←R6
	RRN=6,BR=14,BL=14,THY=1,TXW=1,TAX=1,LMY=1,LZX=1,LRN=4,VCY=1
// 2600:  ASP10:     M←M AND NOT Q LCY 20, Q←IR, GOTO ASP11 IF LB=0
	RRN=4,BL=4,MS=10,THY=1,LMX=1,LQY=1,MC=22,B=603
// 2601:  M←M LCY 2, Q←3, DGOTO ASP10
	BL=14,MS=2,TCY=1,LMX=1,LQY=1,MC=20,DGO=1,B=600,C=3
// 2602:  IR←Z←M+Z
	BR=14,BL=14,TXW=1,TAX=1,LZX=1,LRN=4,VCY=1
// 2603:  ASP11:     Q←NOT Q LCY 16 MRG 176B5
	BL=5,MS=7,TCX=1,LQX=1,C=17600000
// 2604:  IR←Q←NOT Q LCY 2
	BL=5,MS=2,TXW=1,LQX=1,LRN=4
// 2605:  Z←Q LCY 1
	BL=12,MS=1,LZX=1
// 2606:  Z←Q+Z, M←R6
	RRN=6,BR=14,BL=12,THY=1,TAX=1,LMY=1,LZX=1,VCY=1
// 2607:  Q←M-Z, Z←3
	BR=3,BL=14,LOC=1,TCY=1,TAX=1,LQX=1,LZY=1,VCY=1,C=3
// 2610:  ASP12:     R0←Q-Z, M←IR, GOTO ASP5 IF X<0
	RRN=4,BR=3,BL=12,LOC=1,THY=1,TXW=1,TAX=1,LMY=1,LR0=1,MC=17,VCY=1,B=551
// 2611:  M←IR←M+1, Q←R0, GOTO ASP5
// 
	BL=14,LOC=1,THY=1,TXW=1,TAX=1,LMX=1,LQY=1,LRN=4,MC=20,VCY=1,B=551
// 2612:  CSA1:      SETBA, CALL GETSR
	MCONT=1,MS=61,MC=1,B=662
// 2613:  GOTO CXA
	MC=20,B=410
// 2614:  XSA1:      R6←Z, SETBA, CALL GETSR
	MCONT=1,BR=14,MS=61,TXW=1,LRN=6,MC=1,B=662
// 2615:  AR←M, M←R6, SETBA, CALL LOADSR
	MCONT=1,RRN=6,BL=14,SSP=1,MS=61,THY=1,LMY=1,LSPX=1,MC=20,B=666
// 2616:  Z←P←P+1, SETBA, GOTO NX2
// 
	RRN=1,MS=61,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=1,B=35
// 2617:  CTA1:      PIN, Q←E2, GOTO CBA
// 
//   MOVE BLOCK OR CONSTANT (IF A IS NOT SET)
// 
	MS=16,LQY=1,MC=20,TE2Y=1,B=402,VCY=1
// 2620:  MVB1:      GOTO MVB2 IF R0<0
	MC=11,B=630
// 2621:  Q←Q+Z
//   MOVE TOP CELL FIRST
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 2622:  M←M+Z, SETBA, GOTO TI IF Z<0
	BR=14,BL=14,MS=61,TAX=1,LMX=1,MC=4,VCY=1,B=1400
// 2623:  MVB3:      K←Q←Q-1, SETBA, GOTO NX1 IF Z=0
	BR=17,BL=12,MS=61,TXW=1,TAX=1,LQX=1,LRN=3,MC=2,VCY=1,B=34
// 2624:  S←R0←M-1, M←XR, CALL BLODX IF A
	MCONT=1,BR=17,BL=14,SSP=6,TSPY=1,TXW=1,TAX=1,LMY=1,LRN=2,LR0=1,MC=33,VCY=1,B=366
// 2625:  R0←K, CALL BSTR1
	MCONT=1,RRN=3,THY=1,TYW=1,LR0=1,MC=20,B=371
// 2626:  AR←Z←Z-1, M←S, DGOTO MVB3
	RRN=2,BR=14,BL=17,SSP=1,THY=1,TAX=1,LMY=1,LZX=1,LSPX=1,MC=1,DGO=1,VCY=1,B=623
// 2627:  SETBA, GOTO TOSP IF INTRPT1
// 
//   MOVE BOTTOM CELL FIRST
	MS=61,MC=64,B=1057
// 2630:  MVB2:      S←R0←M, SETBA, GOTO NX1 IF Z=0
	BL=14,MS=61,TXW=1,LRN=2,LR0=1,MC=2,B=34
// 2631:  K←Q, CALL BLODX IF Z>=0
	MCONT=1,BL=12,TXW=1,LRN=3,MC=5,B=366
// 2632:  R0←K, CALL BSTR1 IF Z>=0
	MCONT=1,RRN=3,THY=1,TYW=1,LR0=1,MC=5,B=371
// 2633:  BR←Q←Q+1, M←S, SETBA, GOTO TI IF Z<0
	RRN=2,BL=12,SSP=2,MS=61,LOC=1,THY=1,TAX=1,LMY=1,LQX=1,LSPX=1,MC=4,B=1400
// 2634:  AR←Z←Z-1, DGOTO MVB2
	BR=14,BL=17,SSP=1,TAX=1,LZX=1,LSPX=1,MC=1,DGO=1,VCY=1,B=630
// 2635:  XR←M←M+1, SETBA, GOTO TOSP IF INTRPT1
// 
//   LOCATE LEADING TRANSITION IN AB
//    (RETURN IF C IS SET)
	BL=14,SSP=6,MS=61,LOC=1,TAX=1,LMX=1,LSPX=1,MC=64,VCY=1,B=1057
// 2636:  LLT1:      M, R0←0, GOTO LLT3 IF LB=0
	BL=14,TYW=1,LR0=1,MC=22,B=643
// 2637:  NOT M, GOTO LLT3 IF LB=0
	BL=3,MC=22,B=643
// 2640:  LLT2:      DGOTO *+1
	MC=1,DGO=1,B=641
// 2641:  M←M LCY 1, Z←R0←R0+1, DGOTO * IF M[0]=M[1]
	BL=14,MS=1,IHR=1,THY=1,TYW=1,LMX=1,LZY=1,LR0=1,MC=73,DGO=1,B=641
// 2642:  Z←Z-1, GOTO LLT5
	BR=14,BL=17,TAX=1,LZX=1,MC=1,VCY=1,B=646
// 2643:  LLT3:      M←M EOR Q, Z←0, GOTO LLT5 IF LB=0
	BL=6,LMX=1,LZY=1,MC=22,B=646
// 2644:  M, Z←24, GOTO LLT5 IF X<0
	BL=14,TCY=1,LZY=1,MC=17,VCY=1,B=646,C=30
// 2645:  R0←Z, GOTO LLT2
	BR=14,TXW=1,LR0=1,MC=20,B=640
// 2646:  LLT5:      Q←K, RETURN IF C
	MCONT=2,RRN=3,THY=1,LQY=1,MC=35
// 2647:  RES←XR←Z, SETBA, GOTO NX1
// 
//   LOAD STRING CONSTANT
	BR=14,SSP=6,MS=61,TXW=1,LRN=5,LSPX=1,MC=20,B=34
// 2650:  LSC1:      Q←S←R0←M, CALL BLODX
	MCONT=1,BL=14,TXW=1,LQX=1,LRN=2,LR0=1,MC=1,B=366
// 2651:  Z←CR←M+Q
	BR=12,BL=14,SSP=3,TAX=1,LZX=1,LSPX=1,VCY=1
// 2652:  DR←Z, Q←14B6
	BR=14,SSP=4,TCY=1,LQY=1,LSPX=1,C=14000000
// 2653:  Q←NOT M AND Q LCY 20
	BL=2,MS=10,LQX=1
// 2654:  Z←Q LCY 2, Q←74B6
	BL=12,MS=2,TCY=1,LQY=1,LZX=1,C=-4000000
// 2655:  M←M AND Q ! Z, Q←S
	RRN=2,BR=14,BL=10,THY=1,LMX=1,LQY=1
// 2656:  AR←M OR Q, SETBA, DGOTO NX2
	BL=16,SSP=1,MS=61,LSPX=1,MC=1,DGO=1,B=35
// 2657:  BR←M OR Q, Z←P←P+1
// 
//   START OF ASP IS ALMOST HERE (AT ASP1)
// 
	RRN=1,BL=16,SSP=2,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1
// 2660:  ASP2:      Z←NOT Q+1, Q←3, SETA, GOTO ASP3
	BL=5,MS=30,LOC=1,TCY=1,TAX=1,LQY=1,LZX=1,MC=1,B=662,C=3
// 2661:  ASP1:      M←M LCY 4, Q←3
	BL=14,MS=4,TCY=1,LMX=1,LQY=1,C=3
// 2662:  ASP3:      DGOTO M AND Q LCY 1 MRG ASPDIV
	MCONT=3,BL=10,MS=1,TCX=1,MC=1,DGO=1,C=2541
// 2663:  R6←Q←Z, GOTO ASP2 IF Z<0
// 
// 
//   COUNT ONE BITS IN AB
// 
	BR=14,TXW=1,LQX=1,LRN=6,MC=4,B=660
// 2664:  COB1:      Q←Z-1, GOTO COB2 IF Z=0
	BR=14,BL=17,TAX=1,LQX=1,MC=2,VCY=1,B=666
// 2665:  Z←Q AND Z, R0←R0+1, GOTO COB1
	BR=10,IHR=1,THY=1,TYW=1,LZX=1,LR0=1,MC=20,B=664
// 2666:  COB2:      Q←R0, Z←M, CLEARA, GOTO COB1 IF A
	BL=14,MS=50,THY=1,LQY=1,LZX=1,MC=33,B=664
// 2667:  RES←XR←Q, SETBA, GOTO NX1
// 
//   LOAD STATE, IR CONTAINS XMONT,XUTILT BITS
// 
	BL=12,SSP=6,MS=61,TXW=1,LRN=5,LSPX=1,MC=20,B=34
// 2670:  LODS1:     S←M, SETBA, CALL LSTATE
	MCONT=1,BL=14,MS=61,TXW=1,LRN=2,MC=1,B=1014
// 2671:  Z←R0←Q, Q←XX, SETA, DGOTO BMACC
	BL=12,SSP=24,MS=30,TSPY=1,TXW=1,LQY=1,LZX=1,LR0=1,MC=20,DGO=1,B=722
// 2672:  MAP, R0←E1, .VCY, DGOTO *+1
	MS=37,TYW=1,LR0=1,VCY=1,TE1Y=1,MC=1,DGO=1,B=673
// 2673:  SSOURCE, R0←P
	RRN=1,MS=52,THY=1,TYW=1,LR0=1
// 2674:  MAP, R0←E1, .VCY, XR←Q
	BL=12,SSP=6,MS=37,TYW=1,LR0=1,LSPX=1,VCY=1,TE1Y=1
// 2675:  R0←M←Z, CALL MEXIT IF R0[1]
	MCONT=1,BR=14,TXW=1,LMX=1,LR0=1,MC=66,B=733
// 2676:  Z←R0←P←M, SETBA, DGOTO NX5 IF A
	BL=14,MS=61,TXW=1,LZX=1,LRN=1,LR0=1,MC=33,DGO=1,B=350
// 2677:  ABCD0
	MS=70
// 2700:  Q←0, SETBA, GOTO FIXTRP
	MS=61,LQX=1,MC=1,B=1046
// 2701:  STRS1:     K←M-1, SETBA, CALL SSTATE
	MCONT=1,BR=17,BL=14,MS=61,TXW=1,TAX=1,LRN=3,MC=20,VCY=1,B=775
// 2702:  Z←P←P+1, SETBA, GOTO NX2
// 
//   TEST FOR PRIVILEGED OPR-S
	RRN=1,MS=61,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=1,B=35
// 2703:  OPR2:      Z←MAXPRIV
	TCX=1,LZX=1,C=100
// 2704:  M-Z, Q←6B5, SETBA, GOTO TI IF X>=0
	BR=3,BL=14,MS=61,LOC=1,TCY=1,TAX=1,LQY=1,MC=16,VCY=1,B=1400,C=600000
// 2705:  M←P, DGOTO M MRG BASEOPR
	MCONT=3,RRN=1,BL=14,TCX=1,THY=1,LMY=1,MC=20,DGO=1,C=2400
// 2706:  NOT M AND Q, Z←AR, SETBA, GOTO TI IF LB#0
// 
	BL=2,SSP=1,MS=61,TSPY=1,LZY=1,MC=23,B=1400
// 2707:  AAX1:      MAP, .VCY, Q←E1, GOTO CBX
// 
	MS=37,LQY=1,MC=20,VCY=1,TE1Y=1,B=403
// 2710:  SLOK1:     4, PROTECT, GOTO * IF NPROTECT
	MS=25,TCX=1,MC=30,VCY=1,B=710,C=4
// 2711:  Z←P←P+1, SETBA, GOTO NX2
// 
	RRN=1,MS=61,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=20,B=35
// 2712:  CAT1:      Z←AR, POT, GOTO NOP
	SSP=1,MS=15,TSPY=1,LZY=1,MC=1,B=426
// 2713:  RUN1:      Q←E2, .VCY, PIN, DGOTO CTA1
	MS=16,LQY=1,MC=20,DGO=1,VCY=1,TE2Y=1,B=617
// 2714:  BR←Q, Z←UNMS, ALERT
// 
	BL=12,SSP=2,MS=14,TCY=1,LZY=1,LSPX=1,C=65
// 2715:  USCL1:     P←P+1, SETBA, GOTO TOSP2
// 
// 
// 
	RRN=1,MS=61,IHR=1,THY=1,TYW=1,LRN=1,MC=20,B=1060
// 2716:  EAC1:      Z←M AND Q LCY 4 MRG BASEAD, CALL BLL48
	MCONT=1,BL=10,MS=4,TCX=1,LZX=1,MC=1,B=205,C=40
// 2717:  Z←RES←0, M←R0, GOTO EAC4 IF D
	THY=1,TXW=1,LMY=1,LZX=1,LRN=5,MC=47,B=724
// 2720:  EAC2:      Q←77B6, IR←SHIFT, GOTO EAC5 IF A
	SSP=13,TCX=1,TSPY=1,TYW=1,LQX=1,LRN=4,MC=33,B=725,C=-1000000
// 2721:  MAP, .VCY, R0←E1, GOTO EAC6 IF B
	MS=37,TYW=1,LR0=1,MC=34,VCY=1,TE1Y=1,B=726
// 2722:  BMACC:     SETBA, GOTO BMACC1 IF R0[1]
	MS=61,MC=66,B=1716
// 2723:  EAC3:      XR←M AND NOT Q ! Z AND Q, SETBA, Z←P←P+1, GOTO NX2
	RRN=1,BR=10,BL=4,SSP=6,MS=61,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1,MC=20,B=35
// 2724:  EAC4:      Z←RES←2B6, M←0, GOTO EAC2
	TCX=1,TXW=1,LMY=1,LZX=1,LRN=5,MC=1,B=720,C=2000000
// 2725:  EAC5:      AR←M, Z←RES←1B6, GOTO EAC3
	BL=14,SSP=1,TCY=1,TYW=1,LZY=1,LRN=5,LSPX=1,MC=20,B=723,C=1000000
// 2726:  EAC6:      Z←MASK
	SSP=15,TSPY=1,LZY=1
// 2727:  AR←Z, Z←IR, DGOTO BMACC
	RRN=4,BR=14,SSP=1,THY=1,LZY=1,LSPX=1,MC=20,DGO=1,B=722
// 2730:  BR←Z, Z←RES←3B6
// 
//   Q = Z = R0 = BITS,
	BR=14,SSP=2,TCY=1,TYW=1,LZY=1,LRN=5,LSPX=1,C=3000000
// 2731:  MON:       Z←IR←SR, DGOTO CLL IF R0[2]
	SSP=11,TSPY=1,TYW=1,LZY=1,LRN=4,MC=24,DGO=1,B=742
// 2732:  R0←M, M←1
	BL=14,TCY=1,TXW=1,LMY=1,LR0=1,C=1
// 2733:  MEXIT:     Q←P, 4, UNPROTECT
	RRN=1,MS=20,TCX=1,THY=1,LQY=1,C=4
// 2734:  Q←Q LCY 12, M←R0
	BL=12,MS=6,THY=1,LMY=1,LQX=1
// 2735:  Q←Q LCY 2, Z←IR
	RRN=4,BL=12,MS=2,THY=1,LQX=1,LZY=1
// 2736:  Z←Q AND Z, Q←100B
	BR=10,TCY=1,LQY=1,LZX=1,C=100
// 2737:  Z←Q AND Z, X23LCK, DRETURN IF NZ[16]
	MCONT=2,BR=10,MS=71,LZX=1,MC=10,DGO=1
// 2740:  IR←8, GOTO XTRP IF Z#0
	TCX=1,TXW=1,LRN=4,MC=3,B=746,C=10
// 2741:  IR←9, GOTO XTRP
// 
	TCX=1,TXW=1,LRN=4,MC=20,B=746,C=11
// 2742:  CLL:       Q AND M, Q←60B, DRETURN IF LB=0
	MCONT=2,BL=10,TCY=1,LQY=1,MC=22,DGO=1,C=60
// 2743:  M←R0, SR←NOT Q AND Z
	BR=4,SSP=11,THY=1,LMY=1,LSPX=1
// 2744:  4, PROTECT, GOTO * IF NPROTECT
	MS=25,TCX=1,MC=30,VCY=1,B=744,C=4
// 2745:  1, X23LCK, RETURN
// 
	MCONT=2,MS=71,LOC=1,TAX=1,MC=20
// 2746:  XTRP:      CLEARA, RETURN
// 
// 
	MCONT=2,MS=50,MC=1
// 2747:    SETBA, CALL 1776B     *ILLEGAL MICROINSTRUCTION
	MS=61,MCONT=1,MC=20,B=1776

// 2750:  BASEFP:    R0←R0
	THY=1,TYW=1,LR0=1
// 2751:  Q←Q LCY 12, R0←1, GOTO FP2
	BL=12,MS=6,TCY=1,TYW=1,LQX=1,LR0=1,MC=20,B=765,C=1
// 2752:  Q←Q LCY 12, R0←3, GOTO FP2
	BL=12,MS=6,TCY=1,TYW=1,LQX=1,LR0=1,MC=1,B=765,C=3
// 2753:  Q←Q LCY 12, R0←7, GOTO FP2
	BL=12,MS=6,TCY=1,TYW=1,LQX=1,LR0=1,MC=20,B=765,C=7
// 2754:  Z←Q←IR←RES, GOTO FP1
	RRN=5,THY=1,TYW=1,LQY=1,LZY=1,LRN=4,MC=1,B=761
// 2755:  Z←P←P+1, ER←0, SETBA, GOTO NX2
	RRN=1,SSP=5,MS=61,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1,MC=20,B=35
// 2756:  AR←RES←6B7, M←K
	RRN=3,SSP=1,TCX=1,THY=1,TXW=1,LMY=1,LRN=5,LSPX=1,C=-20000000
// 2757:  Q←1B4, DGOTO TFO
	TCX=1,LQX=1,MC=20,DGO=1,B=1234,C=10000
// 2760:  ER←M←M+Q
// 
	BR=12,BL=14,SSP=5,TAX=1,LMX=1,LSPX=1,VCY=1
// 2761:  FP1:       CALL FRSH
	MCONT=1,MC=20,B=1166
// 2762:  HROV, ER←Q
	BL=12,SSP=5,MS=57,LSPX=1
// 2763:  BR←M, DGOTO FPT
	BL=14,SSP=2,LSPX=1,MC=20,DGO=1,B=1013
// 2764:  RES←AR←Z, DGOTO TFOL
// 
	BR=14,SSP=1,TXW=1,LRN=5,LSPX=1,MC=1,DGO=1,B=1233
// 2765:  FP2:       Z←K, K←Z
	RRN=3,BR=14,THY=1,TXW=1,LZY=1,LRN=3
// 2766:  ER←Z-Q, Z←K
	RRN=3,BR=14,BL=5,SSP=5,LOC=1,THY=1,TAX=1,LZY=1,LSPX=1,VCY=1
// 2767:  M←M LCL Z
	BL=14,MS=11,LMX=1
// 2770:  M←M LCH Z, Q←RES
	RRN=5,BL=14,MS=12,THY=1,LMX=1,LQY=1
// 2771:  Q←Q LCL Z
	BL=12,MS=11,LQX=1
// 2772:  Z←Q LCH Z, Q←R0
	BL=12,MS=12,THY=1,LQY=1,LZX=1
// 2773:  AR←RES←Z←M AND Q ! Z AND NOT Q, DGOTO FPT
	BR=4,BL=10,SSP=1,TXW=1,LZX=1,LRN=5,LSPX=1,MC=20,DGO=1,B=1013
// 2774:  BR←M←M AND NOT Q, DGOTO TFOL
	BL=4,SSP=2,LMX=1,LSPX=1,MC=1,DGO=1,B=1233
// 2775:  FAD1:      Q←Z-Q, R6←BR, GOTO XCH IF X<0
	BR=14,BL=5,SSP=2,LOC=1,TSPY=1,TYW=1,TAX=1,LQX=1,LRN=6,MC=17,VCY=1,B=1015
// 2776:  Z←Q LCY 12, Q←24
	BL=12,MS=6,TCY=1,LQY=1,LZX=1,C=30
// 2777:  FAD2:      Z←Q-Z, GOTO FAD5 IF X<0
// 
	BR=3,BL=12,LOC=1,TAX=1,LZX=1,MC=17,VCY=1,B=1023
// 3000:  FAD3:      M←M LCH Z, GOTO FAD6 IF Z<0
	BL=14,MS=12,LMX=1,MC=4,B=1026
// 3001:  R0←M←M LCL Z, Q←S
	RRN=2,BL=14,MS=11,THY=1,TXW=1,LMX=1,LQY=1,LR0=1
// 3002:  M←Q LCH Z
	BL=12,MS=12,LMX=1
// 3003:  DGOTO Z MRG BASEMSK
	MCONT=3,BR=14,TCX=1,MC=20,DGO=1,C=140
// 3004:  SETBB, DGOTO *+1
	MS=60,MC=1,DGO=1,B=1005
// 3005:  Z←M LCL Z,M←R0
	BL=14,MS=11,THY=1,LMY=1,LZX=1
// 3006:  M←M AND Q ! Z AND NOT Q, S, GOTO FAD7 IF Y<0
	RRN=2,BR=4,BL=10,THY=1,LMX=1,MC=53,VCY=1,B=1027
// 3007:  Z←Z AND Q, Q←R6
	RRN=6,BR=10,THY=1,LQY=1,LZX=1
// 3010:  FAD4:      BR←M+Q, HROV, Q←IR
	RRN=4,BR=12,BL=14,SSP=2,MS=57,THY=1,TAX=1,LQY=1,LSPX=1,VCY=1
// 3011:  FAD9:      GOTO FAD8 IF CARRY
	MC=61,B=1031
// 3012:  AR←RES←Z←Z+Q, HROV, DGOTO TFOL
	BR=14,BL=12,SSP=1,MS=57,TXW=1,TAX=1,LZX=1,LRN=5,LSPX=1,MC=1,DGO=1,VCY=1,B=1233
// 3013:  FPT:       M, .VCY, Q←Z←E1, GOTO FNORM IF FPN
	BL=14,LQY=1,LZY=1,MC=76,VCY=1,TE1Y=1,B=1014
// 3014:  FNORM:     K←ER, GOTO Q MRG BASEFP
// 
	MCONT=3,BL=12,SSP=5,TCX=1,TSPY=1,TYW=1,LRN=3,MC=1,C=2750
// 3015:  XCH:       R6←M, M←R6
	RRN=6,BL=14,THY=1,TXW=1,LMY=1,LRN=6
// 3016:  Q←R0, Z←Q LCY 12 MRG 7777B4
	BL=12,MS=6,THY=1,LQY=1,LZX=1,TCX=1,C=77770000
// 3017:  ER←Q, Q←IR
	RRN=4,BL=12,SSP=5,THY=1,LQY=1,LSPX=1
// 3020:  IR←S
	RRN=2,THY=1,TYW=1,LRN=4
// 3021:  S←Q, Q←24, DGOTO FAD3
	BL=12,TCY=1,TXW=1,LQY=1,LRN=2,MC=20,DGO=1,B=1000,C=30
// 3022:  Z←Q+Z, GOTO FAD5 IF X<0
// 
	BR=14,BL=12,TAX=1,LZX=1,MC=17,VCY=1,B=1023
// 3023:  FAD5:      Z←Z+Q, M←S, .VCY, DGOTO FAD3 IF Y<0
	BR=14,BL=12,TAX=1,LZX=1,RRN=2,THY=1,LMY=1,MC=53,DGO=1,VCY=1,B=1000
// 3024:  S←-1
	BL=17,TXW=1,LRN=2
// 3025:  S←0, GOTO FAD3
// 
	TYW=1,LRN=2,MC=20,B=1000
// 3026:  FAD6:      M←Z←0, Q←R6, GOTO FAD4
// 
	RRN=6,THY=1,LMX=1,LQY=1,LZX=1,MC=1,B=1010
// 3027:  FAD7:      Z←Z OR NOT Q, Q←R6, DGOTO FAD9
	RRN=6,BR=15,THY=1,LQY=1,LZX=1,MC=20,DGO=1,B=1011
// 3030:  BR←M+Q, HROV, Q←IR
// 
	RRN=4,BR=12,BL=14,SSP=2,MS=57,THY=1,TAX=1,LQY=1,LSPX=1,VCY=1
// 3031:  FAD8:      AR←RES←Z←Z+Q, .LOC, HROV, DGOTO TFOL
	BR=14,BL=12,SSP=1,MS=57,LOC=1,TXW=1,TAX=1,LZX=1,LRN=5,LSPX=1,MC=20,DGO=1,VCY=1,B=1233
// 3032:  M, .VCY, Q←Z←E1, GOTO FNORM IF FPN
// 
	BL=14,LQY=1,LZY=1,MC=76,VCY=1,TE1Y=1,B=1014
// 3033:  FSB1:      M←NOT M+1, HROV
	BL=3,MS=57,LOC=1,TAX=1,LMX=1,VCY=1
// 3034:  S←NOT Z, Z←ER, DGOTO FAD1
	BR=3,SSP=5,TSPY=1,TXW=1,LZY=1,LRN=2,MC=1,DGO=1,B=775
// 3035:  R0←Q, GOTO FSB2 IF CARRY
	BL=12,TXW=1,LR0=1,MC=61,B=1036
// 3036:  FSB2:      S←S+1, GOTO FAD1
	RRN=2,IHR=1,THY=1,TYW=1,LRN=2,MC=1,B=775
// 3037:  FLD1:      BR←M, SETBA, P←P+1, DGOTO NX2
	RRN=1,BL=14,SSP=2,MS=61,IHR=1,THY=1,TYW=1,LRN=1,LSPX=1,MC=20,DGO=1,B=35
// 3040:  RES←AR←Z, Z←P
	RRN=1,BR=14,SSP=1,THY=1,TXW=1,LZY=1,LRN=5,LSPX=1
// 3041:  FMUL1:     M EOR Q, S←Q←3777B4, GOTO UFN IF LB=0
	BL=6,TCY=1,TYW=1,LQY=1,LRN=2,MC=22,B=1241,C=37770000
// 3042:  R0←R6+1, Q←M AND Q, DGOTO FMUL5 IF M[1]
	RRN=6,BL=10,IHR=1,THY=1,TYW=1,LQX=1,LR0=1,MC=21,DGO=1,B=1076
// 3043:  MFETCH, Z←M, R0←E1, .VCY, GOTO BPAGEF IF Y<0
	BL=14,MS=34,TYW=1,LZX=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=367
// 3044:  FMUL6:     K←Q, GOTO FMUL2 IF Z>=0
	BL=12,TXW=1,LRN=3,MC=5,B=1046
// 3045:  M←NOT M+1, HROV, S←4B7, CALL FNS
	MCONT=1,BL=3,MS=57,LOC=1,TCY=1,TYW=1,TAX=1,LMX=1,LRN=2,MC=20,VCY=1,B=1272,C=-40000000
// 3046:  FMUL2:     Q←Z
	BR=14,LQX=1
// 3047:  M←M LCY 12
	BL=14,MS=6,LMX=1
// 3050:  Z←Q LCY 12, Q←7777B
	BL=12,MS=6,TCY=1,LQY=1,LZX=1,C=7777
// 3051:  MH1←Z AND NOT Q ! M AND Q, .LSPX←0
	BR=4,BL=10,SSP=40
// 3052:  ML1←M, Q←7777B, .LSPX←0
	BL=14,SSP=41,TCY=1,LQY=1,C=7777
// 3053:  Z←AR
	SSP=1,TSPY=1,LZY=1
// 3054:  M←IR←BR, CALL FROUND
	MCONT=1,SSP=2,TSPY=1,TYW=1,LMY=1,LRN=4,MC=1,B=1160
// 3055:  R0←Q←S, GOTO FMUL3 IF Z>=0
	RRN=2,THY=1,TYW=1,LQY=1,LR0=1,MC=5,B=1060
// 3056:  R0←NOT Q
	BL=5,TXW=1,LR0=1
// 3057:  M←NOT M+1, HROV, CALL FNS
	MCONT=1,BL=3,MS=57,LOC=1,TAX=1,LMX=1,MC=20,VCY=1,B=1272
// 3060:  FMUL3:     ML2←M←M LCY 1, .LSPX←0
	BL=14,SSP=42,MS=1,LMX=1
// 3061:  Q←Z
	BR=14,LQX=1
// 3062:  Z←Q LCY 1, Q←1
	BL=12,MS=1,TCY=1,LQY=1,LZX=1,C=1
// 3063:  MH2←Z AND NOT Q ! M AND Q, Q←K, .LSPX←0
	RRN=3,BR=4,BL=10,SSP=43,THY=1,LQY=1
// 3064:  Z←ER, M←1B4
	SSP=5,TCX=1,TSPY=1,LMX=1,LZY=1,C=10000
// 3065:  Q←Z+Q
	BR=14,BL=12,TAX=1,LQX=1,VCY=1
// 3066:  ER←Q+M, HROV
//   MULTIPLICATION IS COMPLETED, RESULT IS IN MHR,MMR AND MLR
	BR=12,BL=14,SSP=5,MS=57,TAX=1,LSPX=1,VCY=1
// 3067:  M←MMR, DGOTO FMUL4 IF R0<0, .TSPY←0
	SSP=45,LMY=1,MC=11,DGO=1,B=1073
// 3070:  Z←MHR, .TSPY←0
	SSP=44,LZY=1
// 3071:  BR←M, DGOTO FPT
	BL=14,SSP=2,LSPX=1,MC=20,DGO=1,B=1013
// 3072:  RES←AR←Z, DGOTO TFOL
// 
	BR=14,SSP=1,TXW=1,LRN=5,LSPX=1,MC=1,DGO=1,B=1233
// 3073:  FMUL4:     M←NOT M+1, HROV, CALL FNS
	MCONT=1,BL=3,MS=57,LOC=1,TAX=1,LMX=1,MC=20,VCY=1,B=1272
// 3074:  BR←M+0, HROV, DGOTO FPT
	BL=14,SSP=2,MS=57,TAX=1,LSPX=1,MC=1,DGO=1,VCY=1,B=1013
// 3075:  RES←AR←Z, DGOTO TFOL
	BR=14,SSP=1,TXW=1,LRN=5,LSPX=1,MC=20,DGO=1,B=1233
// 3076:  FMUL5:     Q←Q MRG 4B7, GOTO FMUL6
// 
	BL=12,TCX=1,LQX=1,MC=1,B=1044,C=-40000000
// 3077:  FDIV1:     K←NOT Z, GOTO FDIV2 IF Z>=0
	BR=3,TXW=1,LRN=3,MC=5,B=1101
// 3100:  M←NOT M+1, HROV, CALL FNS
	MCONT=1,BL=3,MS=57,LOC=1,TAX=1,LMX=1,MC=1,VCY=1,B=1272
// 3101:  FDIV2:     DV1←Z, IR←0, GOTO FDIVZ IF Z=0
	BR=14,SSP=26,TYW=1,LRN=4,LSPX=1,MC=2,B=1237
// 3102:  DV2←M, R6←0
	BL=14,SSP=27,TYW=1,LRN=6,LSPX=1
// 3103:  FDIV3:     Z←ER, M←1B4
	SSP=5,TCX=1,TSPY=1,LMX=1,LZY=1,C=10000
// 3104:  Z←Z-M, RES←37777732B
	BR=14,BL=3,LOC=1,TCY=1,TYW=1,TAX=1,LZX=1,LRN=5,VCY=1,C=37777732
// 3105:  ER←Z-Q
	BR=14,BL=5,SSP=5,LOC=1,TAX=1,LSPX=1,VCY=1
// 3106:  Z←AR
	SSP=1,TSPY=1,LZY=1
// 3107:  M←BR, GOTO FDIVD IF Z>=0
	SSP=2,TSPY=1,LMY=1,MC=5,B=1111
// 3110:  S←K, M←NOT M+1, HROV, CALL FNS
	MCONT=1,RRN=3,BL=3,MS=57,LOC=1,THY=1,TYW=1,TAX=1,LMX=1,LRN=2,MC=1,VCY=1,B=1272
// 3111:  FDIVD:     S←Z, Z←S
	RRN=2,BR=14,THY=1,TXW=1,LZY=1,LRN=2
// 3112:  DSIGN←Z
	BR=14,SSP=31,LSPX=1
// 3113:  Z←K←M, M←S, DGOTO FDIV7
	RRN=2,BL=14,THY=1,TXW=1,LMY=1,LZX=1,LRN=3,MC=20,DGO=1,B=1127
// 3114:  Q←DV2
// 
	SSP=27,TSPY=1,LQY=1
// 3115:  FDIV4:     M←M LCY 1, Q←R6
	RRN=6,BL=14,MS=1,THY=1,LMX=1,LQY=1
// 3116:  Z←Q LCY 1, Q←1, DGOTO FDIV5 IF R0>=0
	BL=12,MS=1,TCY=1,LQY=1,LZX=1,MC=12,DGO=1,B=1122,C=1
// 3117:  IR←M AND NOT Q ! Z AND Q
	BR=10,BL=4,TXW=1,LRN=4
// 3120:  R6←Z AND NOT Q, Q←K, DGOTO FDIV6
	RRN=3,BR=4,THY=1,TXW=1,LQY=1,LRN=6,MC=1,DGO=1,B=1124
// 3121:  Z←Q LCY 1, M←S
	RRN=2,BL=12,MS=1,THY=1,LMY=1,LZX=1
// 3122:  FDIV5:     R6←Z AND NOT Q MRG 2B3, Q←LO
	BR=4,SSP=32,TCX=1,TSPY=1,TXW=1,LQY=1,LRN=6,C=2000
// 3123:  Z←Q LCY 1, M←R0
	BL=12,MS=1,THY=1,LMY=1,LZX=1
// 3124:  FDIV6:     M←M LCY 1, Q←1
	BL=14,MS=1,TCY=1,LMX=1,LQY=1,C=1
// 3125:  S←M←M AND NOT Q ! Z AND Q, RES, GOTO FDIV9 IF Y<0
	RRN=5,BR=10,BL=4,THY=1,TXW=1,LMX=1,LRN=2,MC=53,VCY=1,B=1133
// 3126:  K←Z←Z AND NOT Q, Q←DV2
	BR=4,SSP=27,TSPY=1,TXW=1,LQY=1,LZX=1,LRN=3
// 3127:  FDIV7:     Z←Z-Q, HROV, Q←DV1
	BR=14,BL=5,SSP=26,MS=57,LOC=1,TSPY=1,TAX=1,LQY=1,LZX=1,VCY=1
// 3130:  LO←Z, RES←RES+1, GOTO FDIV8 IF CARRY
	RRN=5,BR=14,SSP=32,IHR=1,THY=1,TYW=1,LRN=5,LSPX=1,MC=61,B=1132
// 3131:  R0←M+NOT Q, M←IR, GOTO FDIV4
	RRN=4,BR=5,BL=14,THY=1,TXW=1,TAX=1,LMY=1,LR0=1,MC=20,VCY=1,B=1115
// 3132:  FDIV8:     R0←M-Q, M←IR, GOTO FDIV4
// 
	RRN=4,BR=5,BL=14,LOC=1,THY=1,TXW=1,TAX=1,LMY=1,LR0=1,MC=1,VCY=1,B=1115
// 3133:  FDIV9:     Z←K, Z←M
	RRN=3,BL=14,THY=1,LZX=1,LZY=1
// 3134:  Z←IR, S←1B3, DGOTO FDIVA IF Z#0
	RRN=4,TCX=1,THY=1,TXW=1,LZY=1,LRN=2,MC=3,DGO=1,B=1137,C=1000
// 3135:  Q←K←ER
	SSP=5,TSPY=1,TYW=1,LQY=1,LRN=3
// 3136:  S←0
	TXW=1,LRN=2
// 3137:  FDIVA:     M←R6, CALL FRSH IF Z<0
	MCONT=1,RRN=6,THY=1,LMY=1,MC=4,B=1166
// 3140:  ER←Q, Q←S
	RRN=2,BL=12,SSP=5,THY=1,LQY=1,LSPX=1
// 3141:  DSIGN, GOTO FDIVC IF Y<0
	SSP=31,TSPY=1,MC=53,VCY=1,B=1144
// 3142:  FDIVB:     BR←M OR Q, HROV, DGOTO FPT
	BL=16,SSP=2,MS=57,LSPX=1,MC=1,DGO=1,B=1013
// 3143:  RES←AR←Z, DGOTO TFOL
	BR=14,SSP=1,TXW=1,LRN=5,LSPX=1,MC=20,DGO=1,B=1233
// 3144:  FDIVC:     M←NOT M+1, HROV, CALL FNS
	MCONT=1,BL=3,MS=57,LOC=1,TAX=1,LMX=1,MC=1,VCY=1,B=1272
// 3145:  GOTO FDIVB
	MC=20,B=1142
// 3146:  FCP1:      Z EOR Q, Z←ER, SETBA, GOTO NX1 IF X<0
	BR=6,SSP=5,MS=61,TSPY=1,LZY=1,MC=17,VCY=1,B=34
// 3147:  Z←Z-M, M←BR
	BR=14,BL=3,SSP=2,LOC=1,TSPY=1,TAX=1,LMY=1,LZX=1,VCY=1
// 3150:  RES←Z EOR Q, Q←K, SETBA, GOTO NX1 IF Z#0
	RRN=3,BR=6,MS=61,THY=1,TXW=1,LQY=1,LRN=5,MC=3,B=34
// 3151:  IR←M-Q, HROV, M←AR
	BR=5,BL=14,SSP=1,MS=57,LOC=1,TSPY=1,TXW=1,TAX=1,LMY=1,LRN=4,VCY=1
// 3152:  Q←S, GOTO FCP2 IF CARRY
	RRN=2,THY=1,LQY=1,MC=61,B=1154
// 3153:  RES←Z←M+NOT Q, GOTO FCP3
	BR=5,BL=14,TXW=1,TAX=1,LZX=1,LRN=5,MC=20,VCY=1,B=1155
// 3154:  FCP2:      RES←Z←M-Q
	BR=5,BL=14,LOC=1,TXW=1,TAX=1,LZX=1,LRN=5,VCY=1
// 3155:  FCP3:      Z←IR, SETBA, GOTO NX1 IF Z#0
	RRN=4,MS=61,THY=1,LZY=1,MC=3,B=34
// 3156:  Z←P←P+1, SETBA, GOTO NX2 IF Z=0
	RRN=1,MS=61,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,MC=2,B=35
// 3157:  RES←1, SETBA, GOTO NX2
//   ROUND TO NEAREST NUMBER
//   IR = M = LOW ORD., Z = HIGH, Q = 7777B, K = EXP
// 
	MS=61,LOC=1,TXW=1,TAX=1,LRN=5,MC=20,B=35
// 3160:  FROUND:    M←Q AND M, Q←2B3
	BL=10,TCY=1,LMX=1,LQY=1,C=2000
// 3161:  Q EOR M, M←IR, RETURN IF LB=0
	MCONT=2,RRN=4,BL=6,THY=1,LMY=1,MC=22
// 3162:  M←Q+M, HROV, Q←3777B, DRETURN
	MCONT=2,BR=12,BL=14,MS=57,TCY=1,TAX=1,LMX=1,LQY=1,MC=1,DGO=1,VCY=1,C=3777
// 3163:  M←M AND NOT Q, GOTO FRO1 IF CARRY
	BL=4,LMX=1,MC=61,B=1164
// 3164:  FRO1:      Z←Z+1, HROV, DRETURN
	MCONT=2,BR=14,MS=57,LOC=1,TAX=1,LZX=1,MC=1,DGO=1,VCY=1
// 3165:  GOTO FRSH IF OVFLW, IR←Z
// 
//   SHIFT (Z,M) RIGHT 1.  IR = Z, K = EXP
// 
	BR=14,TXW=1,LRN=4,MC=57,B=1166
// 3166:  FRSH:      M←M LCY 20
	BL=14,MS=10,LMX=1
// 3167:  M←M LCY 3, Q←IR
	RRN=4,BL=14,MS=3,THY=1,LMX=1,LQY=1
// 3170:  Q←Q LCY 20
	BL=12,MS=10,LQX=1
// 3171:  Z←Q LCY 3, Q←4B7
	BL=12,MS=3,TCY=1,LQY=1,LZX=1,C=-40000000
// 3172:  IR←M AND NOT Q ! Z AND Q, M←IR
	RRN=4,BR=10,BL=4,THY=1,TXW=1,LMY=1,LRN=4
// 3173:  M←M AND Q
	BL=10,LMX=1
// 3174:  Z←Z AND NOT Q ! M EOR Q, M←1B4
	BR=4,BL=6,TCY=1,LMY=1,LZX=1,C=10000
// 3175:  Q←K, DRETURN
	MCONT=2,RRN=3,THY=1,LQY=1,MC=20,DGO=1
// 3176:  Q←K←M+Q, M←IR
// 
	RRN=4,BR=12,BL=14,THY=1,TXW=1,TAX=1,LMY=1,LQX=1,LRN=3,VCY=1
// 3177:  STF1:      Q←S←Z, SETBA, GOTO ROIA IF D
	MS=61,BR=14,TXW=1,LQX=1,LRN=2,MC=47,B=372
// 3200:  M←M LCY 12, R0, .VCY, GOTO BCSTORE IF STERR
	BL=14,MS=6,THY=1,VCY=1,LMX=1,MC=32,B=373
// 3201:  Z←M LCY 1
	BL=14,MS=1,LZX=1
// 3202:  Q←Q LCY 12
	BL=12,MS=6,LQX=1
// 3203:  M←Q LCY 1, Q←17777B
	BL=12,MS=1,TCY=1,LMX=1,LQY=1,C=17777
// 3204:  IR←Z AND Q ! M AND NOT Q, Z←K
	RRN=3,BR=10,BL=4,THY=1,TXW=1,LZY=1,LRN=4
// 3205:  Q←7777B, S, DGOTO STF2 IF Y<0
	RRN=2,TCX=1,THY=1,LQX=1,MC=53,DGO=1,VCY=1,B=1210,C=7777
// 3206:  M←M AND Q ! Z MRG 4B7, Q←0
	BR=14,BL=10,TCX=1,LMX=1,LQY=1,C=-40000000
// 3207:  Q←4B7
	TCX=1,LQX=1,C=-40000000
// 3210:  STF2:      Q←Q MRG 2B7
	BL=12,TCX=1,LQX=1,C=20000000
// 3211:  Z←IR, M←M EOR Q, STORE
	RRN=4,BL=6,MS=42,THY=1,LMX=1,LZY=1
// 3212:  M←Z, R0←R6+1, CALL BSTR1
	MCONT=1,RRN=6,BR=14,IHR=1,THY=1,TYW=1,LMX=1,LR0=1,MC=1,B=371
// 3213:  M←K, DGOTO TFO
	RRN=3,THY=1,LMY=1,MC=20,DGO=1,B=1234
// 3214:  GOTO BLL84 IF C
// 
	MC=35,B=260
// 3215:  FIXS:      Q←Q LCY 12, IR←4B7, GOTO FIXS2 IF Z>=0
	BL=12,MS=6,TCY=1,TYW=1,LQX=1,LRN=4,MC=5,B=1221,C=-40000000
// 3216:  M, IR←0, GOTO FIXS3 IF LB#0
	BL=14,TYW=1,LRN=4,MC=23,B=1220
// 3217:  S←NOT Z+1, GOTO FIXS2
	BR=3,LOC=1,TXW=1,TAX=1,LRN=2,MC=20,VCY=1,B=1221
// 3220:  FIXS3:     S←NOT Z
	BR=3,TXW=1,LRN=2
// 3221:  FIXS2:     R6, M←22, GOTO FIXS1 IF Y<0
	RRN=6,TCX=1,THY=1,LMX=1,MC=53,VCY=1,B=1232,C=26
// 3222:  R0←Q←M-Q, M←24
	BR=5,BL=14,LOC=1,TCY=1,TXW=1,TAX=1,LMY=1,LQX=1,LR0=1,VCY=1,C=30
// 3223:  Z←M-Q, M←S, GOTO FXTRP IF R0<0
	RRN=2,BR=5,BL=14,LOC=1,THY=1,TAX=1,LMY=1,LZX=1,MC=11,VCY=1,B=1240
// 3224:  M←M LCL Z
	BL=14,MS=11,LMX=1
// 3225:  DGOTO Z MRG BASEMSK
	MCONT=3,BR=14,TCX=1,MC=20,DGO=1,C=140
// 3226:  SETBB, DGOTO *+1
	MS=60,MC=1,DGO=1,B=1227
// 3227:  M←M LCH Z
	BL=14,MS=12,LMX=1
// 3230:  Z←M AND Q, IR, RETURN IF Y<0
	MCONT=2,RRN=4,BL=10,THY=1,LZX=1,MC=53,VCY=1
// 3231:  Z←NOT M OR NOT Q+1, RETURN
	MCONT=2,BL=7,LOC=1,TAX=1,LZX=1,MC=20,VCY=1
// 3232:  FIXS1:     Z←0, RETURN
	MCONT=2,LZX=1,MC=1
// 3233:  TFOL:      M←ER
	SSP=5,TSPY=1,LMY=1
// 3234:  TFO:       Z←P←P+1, Q←0, SETBA, GOTO NX2 IF M[0]=M[1]
	RRN=1,MS=61,IHR=1,THY=1,TYW=1,LQX=1,LZY=1,LRN=1,MC=73,B=35
// 3235:  TFO1:      M, IR←2, .VCY, SETBA, GOTO RDTRAP IF X>=0
	BL=14,MS=61,TCY=1,TYW=1,LRN=4,MC=16,VCY=1,B=1041,C=2
// 3236:  IR←3, SETBA, GOTO RDTRAP
// 
	MS=61,TCX=1,TXW=1,LRN=4,MC=1,B=1041,C=3
// 3237:  FDIVZ:     IR←8, Q←0, SETBA, GOTO RDTRAP
	MS=61,TCX=1,TXW=1,LQY=1,LRN=4,MC=20,B=1041,C=10
// 3240:  FXTRP:     IR←7, Q←0, SETBA, GOTO RDTRAP
	MS=61,TCX=1,TXW=1,LQY=1,LRN=4,MC=1,B=1041,C=7
// 3241:  UFN:       IR←6, Q←0, SETBA, GOTO RDTRAP
	MS=61,TCX=1,TXW=1,LQY=1,LRN=4,MC=20,B=1041,C=6
// 3242:  FLX1:      CALL FIXS
	MCONT=1,MC=1,B=1215
// 3243:  XR←Z, Z←P←P+1, SETBA, GOTO NX2
	RRN=1,BR=14,SSP=6,MS=61,IHR=1,THY=1,TYW=1,LZY=1,LRN=1,LSPX=1,MC=20,B=35
// 3244:  FIX1:      M←Q, R6←Q←ER, CALL FIXS
	MCONT=1,BL=12,SSP=5,TSPY=1,TYW=1,LMX=1,LQY=1,LRN=6,MC=1,B=1215
// 3245:  AR←RES←Z, SETBA, GOTO NX1
	BR=14,SSP=1,MS=61,TXW=1,LRN=5,LSPX=1,MC=20,B=34
// 3246:  FNA1:      AR←RES←NOT Z+1, SETBA, GOTO NX1 IF CARRY
	BR=3,SSP=1,MS=61,LOC=1,TXW=1,TAX=1,LRN=5,LSPX=1,MC=61,VCY=1,B=34
// 3247:  AR←RES←NOT Z, SETBA, GOTO NX1
	BR=3,SSP=1,MS=61,TXW=1,LRN=5,LSPX=1,MC=20,B=34
// 3250:  FLOAT1:    RES←Z+0, HROV, DGOTO FPT
	BR=14,MS=57,TXW=1,TAX=1,LRN=5,MC=1,DGO=1,VCY=1,B=1013
// 3251:  ER←26B4, DGOTO TFOL
// 
	SSP=5,TCX=1,LSPX=1,MC=20,DGO=1,B=1233,C=260000
// 3252:  FOP1:      FETCH
	MS=44
// 3253:  SETBA, GOTO TI IF A
	MS=61,MC=33,B=1400
// 3254:  CLEARA
	MS=50
// 3255:  FOP:       S←M←M EOR Q, Q←2001B4, GOTO FOP1 IF AORB
	BL=6,TCY=1,TXW=1,LMX=1,LQY=1,LRN=2,MC=51,B=1252,C=20010000
// 3256:  M EOR Q, Q←3777B4, GOTO UFN IF LB=0
	BL=6,TCY=1,LQY=1,MC=22,B=1241,C=37770000
// 3257:  R0←R6+1, Z←M AND Q
	RRN=6,BL=10,IHR=1,THY=1,TYW=1,LZX=1,LR0=1
// 3260:  Q←NOT M LCY 3 MRG 1B5, DGOTO FOP3 IF M[1]
	BL=3,MS=3,TCX=1,LQX=1,MC=21,DGO=1,B=1270,C=100000
// 3261:  MFETCH, R0←E1, .VCY, GOTO BPAGEF IF Y<0
	MS=34,TYW=1,LR0=1,MC=53,VCY=1,TE1Y=1,B=367
// 3262:  R6←Z
	BR=14,TXW=1,LRN=6
// 3263:  FOP2:      Z←NOT Q LCY 8, R0←S, DGOTO FOP4 IF Y<0
	RRN=2,BL=5,MS=5,THY=1,TYW=1,LZX=1,LR0=1,MC=53,DGO=1,VCY=1,B=1271
// 3264:  M←M LCY 3, DGOTO *+1 IF R0<0
	BL=14,MS=3,LMX=1,MC=11,DGO=1,B=1265
// 3265:  M←M LCY 8, Q←3777B
	BL=14,MS=5,TCY=1,LMX=1,LQY=1,C=3777
// 3266:  S←Z←Z AND NOT Q ! M AND Q, DRETURN
	MCONT=2,BR=4,BL=10,TXW=1,LZX=1,LRN=2,MC=1,DGO=1
// 3267:  K←M←M AND NOT Q, Q←R6
// 
	RRN=6,BL=4,THY=1,TXW=1,LMX=1,LQY=1,LRN=3
// 3270:  FOP3:      R6←Z MRG 4B7, GOTO FOP2
// 
	BR=14,TCX=1,TXW=1,LRN=6,MC=1,B=1263,C=-40000000
// 3271:  FOP4:      Z←Z MRG 4B7
// 
// 
//   FLOATING NEGATE, CALL:  M←NOT M+1, HROV, CALL FNS
// 
	BR=14,TCX=1,LZX=1,C=-40000000
// 3272:  FNS:       DRETURN
	MCONT=2,MC=1,DGO=1
// 3273:  Z←NOT Z, GOTO FNS1 IF CARRY
	BR=3,LZX=1,MC=61,B=1274
// 3274:  FNS1:      Z←Z+1, RETURN
	MCONT=2,BR=14,LOC=1,TAX=1,LZX=1,MC=1,VCY=1
// 3275:  

// 3276:  

// 3277:    SETBA, CALL 1776B     *ILLEGAL MICROINSTRUCTION
// 
	MS=61,MCONT=1,MC=20,B=1776
